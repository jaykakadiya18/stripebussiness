!function (t) { function e() { } function n(t, e) { return function () { t.apply(e, arguments) } } function o(t) { if ("object" != typeof this) throw new TypeError("Promises must be constructed via new"); if ("function" != typeof t) throw new TypeError("not a function"); this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], s(t, this) } function r(t, e) { for (; 3 === t._state;)t = t._value; return 0 === t._state ? void t._deferreds.push(e) : (t._handled = !0, void a(function () { var n = 1 === t._state ? e.onFulfilled : e.onRejected; if (null === n) return void (1 === t._state ? i : f)(e.promise, t._value); var o; try { o = n(t._value) } catch (r) { return void f(e.promise, r) } i(e.promise, o) })) } function i(t, e) { try { if (e === t) throw new TypeError("A promise cannot be resolved with itself."); if (e && ("object" == typeof e || "function" == typeof e)) { var r = e.then; if (e instanceof o) return t._state = 3, t._value = e, void u(t); if ("function" == typeof r) return void s(n(r, e), t) } t._state = 1, t._value = e, u(t) } catch (i) { f(t, i) } } function f(t, e) { t._state = 2, t._value = e, u(t) } function u(t) { 2 === t._state && 0 === t._deferreds.length && a(function () { t._handled || d(t._value) }); for (var e = 0, n = t._deferreds.length; n > e; e++)r(t, t._deferreds[e]); t._deferreds = null } function c(t, e, n) { this.onFulfilled = "function" == typeof t ? t : null, this.onRejected = "function" == typeof e ? e : null, this.promise = n } function s(t, e) { var n = !1; try { t(function (t) { n || (n = !0, i(e, t)) }, function (t) { n || (n = !0, f(e, t)) }) } catch (o) { if (n) return; n = !0, f(e, o) } } var l = setTimeout, a = "function" == typeof setImmediate && setImmediate || function (t) { l(t, 0) }, d = function (t) { "undefined" != typeof console && console && console.warn("Possible Unhandled Promise Rejection:", t) }; o.prototype["catch"] = function (t) { return this.then(null, t) }, o.prototype.then = function (t, n) { var o = new this.constructor(e); return r(this, new c(t, n, o)), o }, o.all = function (t) { var e = Array.prototype.slice.call(t); return new o(function (t, n) { function o(i, f) { try { if (f && ("object" == typeof f || "function" == typeof f)) { var u = f.then; if ("function" == typeof u) return void u.call(f, function (t) { o(i, t) }, n) } e[i] = f, 0 === --r && t(e) } catch (c) { n(c) } } if (0 === e.length) return t([]); for (var r = e.length, i = 0; i < e.length; i++)o(i, e[i]) }) }, o.resolve = function (t) { return t && "object" == typeof t && t.constructor === o ? t : new o(function (e) { e(t) }) }, o.reject = function (t) { return new o(function (e, n) { n(t) }) }, o.race = function (t) { return new o(function (e, n) { for (var o = 0, r = t.length; r > o; o++)t[o].then(e, n) }) }, o._setImmediateFn = function (t) { a = t }, o._setUnhandledRejectionFn = function (t) { d = t }, "undefined" != typeof module && module.exports ? module.exports = o : t.Promise || (t.Promise = o) }(this);/*! jQuery v2.0.0 | (c) 2005, 2013 jQuery Foundation, Inc. | jquery.org/license
//@ sourceMappingURL=jquery.min.map
*/
(function (e, undefined) {
    var t, n, r = typeof undefined, i = e.location, o = e.document, s = o.documentElement, a = e.jQuery, u = e.$, l = {}, c = [], f = "2.0.0", p = c.concat, h = c.push, d = c.slice, g = c.indexOf, m = l.toString, y = l.hasOwnProperty, v = f.trim, x = function (e, n) { return new x.fn.init(e, n, t) }, b = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, w = /\S+/g, T = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/, C = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, k = /^-ms-/, N = /-([\da-z])/gi, E = function (e, t) { return t.toUpperCase() }, S = function () { o.removeEventListener("DOMContentLoaded", S, !1), e.removeEventListener("load", S, !1), x.ready() }; x.fn = x.prototype = { jquery: f, constructor: x, init: function (e, t, n) { var r, i; if (!e) return this; if ("string" == typeof e) { if (r = "<" === e.charAt(0) && ">" === e.charAt(e.length - 1) && e.length >= 3 ? [null, e, null] : T.exec(e), !r || !r[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e); if (r[1]) { if (t = t instanceof x ? t[0] : t, x.merge(this, x.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : o, !0)), C.test(r[1]) && x.isPlainObject(t)) for (r in t) x.isFunction(this[r]) ? this[r](t[r]) : this.attr(r, t[r]); return this } return i = o.getElementById(r[2]), i && i.parentNode && (this.length = 1, this[0] = i), this.context = o, this.selector = e, this } return e.nodeType ? (this.context = this[0] = e, this.length = 1, this) : x.isFunction(e) ? n.ready(e) : (e.selector !== undefined && (this.selector = e.selector, this.context = e.context), x.makeArray(e, this)) }, selector: "", length: 0, toArray: function () { return d.call(this) }, get: function (e) { return null == e ? this.toArray() : 0 > e ? this[this.length + e] : this[e] }, pushStack: function (e) { var t = x.merge(this.constructor(), e); return t.prevObject = this, t.context = this.context, t }, each: function (e, t) { return x.each(this, e, t) }, ready: function (e) { return x.ready.promise().done(e), this }, slice: function () { return this.pushStack(d.apply(this, arguments)) }, first: function () { return this.eq(0) }, last: function () { return this.eq(-1) }, eq: function (e) { var t = this.length, n = +e + (0 > e ? t : 0); return this.pushStack(n >= 0 && t > n ? [this[n]] : []) }, map: function (e) { return this.pushStack(x.map(this, function (t, n) { return e.call(t, n, t) })) }, end: function () { return this.prevObject || this.constructor(null) }, push: h, sort: [].sort, splice: [].splice }, x.fn.init.prototype = x.fn, x.extend = x.fn.extend = function () { var e, t, n, r, i, o, s = arguments[0] || {}, a = 1, u = arguments.length, l = !1; for ("boolean" == typeof s && (l = s, s = arguments[1] || {}, a = 2), "object" == typeof s || x.isFunction(s) || (s = {}), u === a && (s = this, --a); u > a; a++)if (null != (e = arguments[a])) for (t in e) n = s[t], r = e[t], s !== r && (l && r && (x.isPlainObject(r) || (i = x.isArray(r))) ? (i ? (i = !1, o = n && x.isArray(n) ? n : []) : o = n && x.isPlainObject(n) ? n : {}, s[t] = x.extend(l, o, r)) : r !== undefined && (s[t] = r)); return s }, x.extend({ expando: "jQuery" + (f + Math.random()).replace(/\D/g, ""), noConflict: function (t) { return e.$ === x && (e.$ = u), t && e.jQuery === x && (e.jQuery = a), x }, isReady: !1, readyWait: 1, holdReady: function (e) { e ? x.readyWait++ : x.ready(!0) }, ready: function (e) { (e === !0 ? --x.readyWait : x.isReady) || (x.isReady = !0, e !== !0 && --x.readyWait > 0 || (n.resolveWith(o, [x]), x.fn.trigger && x(o).trigger("ready").off("ready"))) }, isFunction: function (e) { return "function" === x.type(e) }, isArray: Array.isArray, isWindow: function (e) { return null != e && e === e.window }, isNumeric: function (e) { return !isNaN(parseFloat(e)) && isFinite(e) }, type: function (e) { return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? l[m.call(e)] || "object" : typeof e }, isPlainObject: function (e) { if ("object" !== x.type(e) || e.nodeType || x.isWindow(e)) return !1; try { if (e.constructor && !y.call(e.constructor.prototype, "isPrototypeOf")) return !1 } catch (t) { return !1 } return !0 }, isEmptyObject: function (e) { var t; for (t in e) return !1; return !0 }, error: function (e) { throw Error(e) }, parseHTML: function (e, t, n) { if (!e || "string" != typeof e) return null; "boolean" == typeof t && (n = t, t = !1), t = t || o; var r = C.exec(e), i = !n && []; return r ? [t.createElement(r[1])] : (r = x.buildFragment([e], t, i), i && x(i).remove(), x.merge([], r.childNodes)) }, parseJSON: JSON.parse, parseXML: function (e) { var t, n; if (!e || "string" != typeof e) return null; try { n = new DOMParser, t = n.parseFromString(e, "text/xml") } catch (r) { t = undefined } return (!t || t.getElementsByTagName("parsererror").length) && x.error("Invalid XML: " + e), t }, noop: function () { }, globalEval: function (e) { var t, n = eval; e = x.trim(e), e && (1 === e.indexOf("use strict") ? (t = o.createElement("script"), t.text = e, o.head.appendChild(t).parentNode.removeChild(t)) : n(e)) }, camelCase: function (e) { return e.replace(k, "ms-").replace(N, E) }, nodeName: function (e, t) { return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase() }, each: function (e, t, n) { var r, i = 0, o = e.length, s = j(e); if (n) { if (s) { for (; o > i; i++)if (r = t.apply(e[i], n), r === !1) break } else for (i in e) if (r = t.apply(e[i], n), r === !1) break } else if (s) { for (; o > i; i++)if (r = t.call(e[i], i, e[i]), r === !1) break } else for (i in e) if (r = t.call(e[i], i, e[i]), r === !1) break; return e }, trim: function (e) { return null == e ? "" : v.call(e) }, makeArray: function (e, t) { var n = t || []; return null != e && (j(Object(e)) ? x.merge(n, "string" == typeof e ? [e] : e) : h.call(n, e)), n }, inArray: function (e, t, n) { return null == t ? -1 : g.call(t, e, n) }, merge: function (e, t) { var n = t.length, r = e.length, i = 0; if ("number" == typeof n) for (; n > i; i++)e[r++] = t[i]; else while (t[i] !== undefined) e[r++] = t[i++]; return e.length = r, e }, grep: function (e, t, n) { var r, i = [], o = 0, s = e.length; for (n = !!n; s > o; o++)r = !!t(e[o], o), n !== r && i.push(e[o]); return i }, map: function (e, t, n) { var r, i = 0, o = e.length, s = j(e), a = []; if (s) for (; o > i; i++)r = t(e[i], i, n), null != r && (a[a.length] = r); else for (i in e) r = t(e[i], i, n), null != r && (a[a.length] = r); return p.apply([], a) }, guid: 1, proxy: function (e, t) { var n, r, i; return "string" == typeof t && (n = e[t], t = e, e = n), x.isFunction(e) ? (r = d.call(arguments, 2), i = function () { return e.apply(t || this, r.concat(d.call(arguments))) }, i.guid = e.guid = e.guid || x.guid++, i) : undefined }, access: function (e, t, n, r, i, o, s) { var a = 0, u = e.length, l = null == n; if ("object" === x.type(n)) { i = !0; for (a in n) x.access(e, t, a, n[a], !0, o, s) } else if (r !== undefined && (i = !0, x.isFunction(r) || (s = !0), l && (s ? (t.call(e, r), t = null) : (l = t, t = function (e, t, n) { return l.call(x(e), n) })), t)) for (; u > a; a++)t(e[a], n, s ? r : r.call(e[a], a, t(e[a], n))); return i ? e : l ? t.call(e) : u ? t(e[0], n) : o }, now: Date.now, swap: function (e, t, n, r) { var i, o, s = {}; for (o in t) s[o] = e.style[o], e.style[o] = t[o]; i = n.apply(e, r || []); for (o in t) e.style[o] = s[o]; return i } }), x.ready.promise = function (t) { return n || (n = x.Deferred(), "complete" === o.readyState ? setTimeout(x.ready) : (o.addEventListener("DOMContentLoaded", S, !1), e.addEventListener("load", S, !1))), n.promise(t) }, x.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (e, t) { l["[object " + t + "]"] = t.toLowerCase() }); function j(e) { var t = e.length, n = x.type(e); return x.isWindow(e) ? !1 : 1 === e.nodeType && t ? !0 : "array" === n || "function" !== n && (0 === t || "number" == typeof t && t > 0 && t - 1 in e) } t = x(o), function (e, undefined) { var t, n, r, i, o, s, a, u, l, c, f, p, h, d, g, m, y = "sizzle" + -new Date, v = e.document, b = {}, w = 0, T = 0, C = ot(), k = ot(), N = ot(), E = !1, S = function () { return 0 }, j = typeof undefined, D = 1 << 31, A = [], L = A.pop, q = A.push, H = A.push, O = A.slice, F = A.indexOf || function (e) { var t = 0, n = this.length; for (; n > t; t++)if (this[t] === e) return t; return -1 }, P = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", R = "[\\x20\\t\\r\\n\\f]", M = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", W = M.replace("w", "w#"), $ = "\\[" + R + "*(" + M + ")" + R + "*(?:([*^$|!~]?=)" + R + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + W + ")|)|)" + R + "*\\]", B = ":(" + M + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + $.replace(3, 8) + ")*)|.*)\\)|)", I = RegExp("^" + R + "+|((?:^|[^\\\\])(?:\\\\.)*)" + R + "+$", "g"), z = RegExp("^" + R + "*," + R + "*"), _ = RegExp("^" + R + "*([>+~]|" + R + ")" + R + "*"), X = RegExp(R + "*[+~]"), U = RegExp("=" + R + "*([^\\]'\"]*)" + R + "*\\]", "g"), Y = RegExp(B), V = RegExp("^" + W + "$"), G = { ID: RegExp("^#(" + M + ")"), CLASS: RegExp("^\\.(" + M + ")"), TAG: RegExp("^(" + M.replace("w", "w*") + ")"), ATTR: RegExp("^" + $), PSEUDO: RegExp("^" + B), CHILD: RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + R + "*(even|odd|(([+-]|)(\\d*)n|)" + R + "*(?:([+-]|)" + R + "*(\\d+)|))" + R + "*\\)|)", "i"), "boolean": RegExp("^(?:" + P + ")$", "i"), needsContext: RegExp("^" + R + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + R + "*((?:-\\d)?\\d*)" + R + "*\\)|)(?=[^-]|$)", "i") }, J = /^[^{]+\{\s*\[native \w/, Q = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, K = /^(?:input|select|textarea|button)$/i, Z = /^h\d$/i, et = /'|\\/g, tt = /\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g, nt = function (e, t) { var n = "0x" + t - 65536; return n !== n ? t : 0 > n ? String.fromCharCode(n + 65536) : String.fromCharCode(55296 | n >> 10, 56320 | 1023 & n) }; try { H.apply(A = O.call(v.childNodes), v.childNodes), A[v.childNodes.length].nodeType } catch (rt) { H = { apply: A.length ? function (e, t) { q.apply(e, O.call(t)) } : function (e, t) { var n = e.length, r = 0; while (e[n++] = t[r++]); e.length = n - 1 } } } function it(e) { return J.test(e + "") } function ot() { var e, t = []; return e = function (n, i) { return t.push(n += " ") > r.cacheLength && delete e[t.shift()], e[n] = i } } function st(e) { return e[y] = !0, e } function at(e) { var t = c.createElement("div"); try { return !!e(t) } catch (n) { return !1 } finally { t.parentNode && t.parentNode.removeChild(t), t = null } } function ut(e, t, n, r) { var i, o, s, a, u, f, d, g, x, w; if ((t ? t.ownerDocument || t : v) !== c && l(t), t = t || c, n = n || [], !e || "string" != typeof e) return n; if (1 !== (a = t.nodeType) && 9 !== a) return []; if (p && !r) { if (i = Q.exec(e)) if (s = i[1]) { if (9 === a) { if (o = t.getElementById(s), !o || !o.parentNode) return n; if (o.id === s) return n.push(o), n } else if (t.ownerDocument && (o = t.ownerDocument.getElementById(s)) && m(t, o) && o.id === s) return n.push(o), n } else { if (i[2]) return H.apply(n, t.getElementsByTagName(e)), n; if ((s = i[3]) && b.getElementsByClassName && t.getElementsByClassName) return H.apply(n, t.getElementsByClassName(s)), n } if (b.qsa && (!h || !h.test(e))) { if (g = d = y, x = t, w = 9 === a && e, 1 === a && "object" !== t.nodeName.toLowerCase()) { f = gt(e), (d = t.getAttribute("id")) ? g = d.replace(et, "\\$&") : t.setAttribute("id", g), g = "[id='" + g + "'] ", u = f.length; while (u--) f[u] = g + mt(f[u]); x = X.test(e) && t.parentNode || t, w = f.join(",") } if (w) try { return H.apply(n, x.querySelectorAll(w)), n } catch (T) { } finally { d || t.removeAttribute("id") } } } return kt(e.replace(I, "$1"), t, n, r) } o = ut.isXML = function (e) { var t = e && (e.ownerDocument || e).documentElement; return t ? "HTML" !== t.nodeName : !1 }, l = ut.setDocument = function (e) { var t = e ? e.ownerDocument || e : v; return t !== c && 9 === t.nodeType && t.documentElement ? (c = t, f = t.documentElement, p = !o(t), b.getElementsByTagName = at(function (e) { return e.appendChild(t.createComment("")), !e.getElementsByTagName("*").length }), b.attributes = at(function (e) { return e.className = "i", !e.getAttribute("className") }), b.getElementsByClassName = at(function (e) { return e.innerHTML = "<div class='a'></div><div class='a i'></div>", e.firstChild.className = "i", 2 === e.getElementsByClassName("i").length }), b.sortDetached = at(function (e) { return 1 & e.compareDocumentPosition(c.createElement("div")) }), b.getById = at(function (e) { return f.appendChild(e).id = y, !t.getElementsByName || !t.getElementsByName(y).length }), b.getById ? (r.find.ID = function (e, t) { if (typeof t.getElementById !== j && p) { var n = t.getElementById(e); return n && n.parentNode ? [n] : [] } }, r.filter.ID = function (e) { var t = e.replace(tt, nt); return function (e) { return e.getAttribute("id") === t } }) : (r.find.ID = function (e, t) { if (typeof t.getElementById !== j && p) { var n = t.getElementById(e); return n ? n.id === e || typeof n.getAttributeNode !== j && n.getAttributeNode("id").value === e ? [n] : undefined : [] } }, r.filter.ID = function (e) { var t = e.replace(tt, nt); return function (e) { var n = typeof e.getAttributeNode !== j && e.getAttributeNode("id"); return n && n.value === t } }), r.find.TAG = b.getElementsByTagName ? function (e, t) { return typeof t.getElementsByTagName !== j ? t.getElementsByTagName(e) : undefined } : function (e, t) { var n, r = [], i = 0, o = t.getElementsByTagName(e); if ("*" === e) { while (n = o[i++]) 1 === n.nodeType && r.push(n); return r } return o }, r.find.CLASS = b.getElementsByClassName && function (e, t) { return typeof t.getElementsByClassName !== j && p ? t.getElementsByClassName(e) : undefined }, d = [], h = [], (b.qsa = it(t.querySelectorAll)) && (at(function (e) { e.innerHTML = "<select><option selected=''></option></select>", e.querySelectorAll("[selected]").length || h.push("\\[" + R + "*(?:value|" + P + ")"), e.querySelectorAll(":checked").length || h.push(":checked") }), at(function (e) { var t = c.createElement("input"); t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("t", ""), e.querySelectorAll("[t^='']").length && h.push("[*^$]=" + R + "*(?:''|\"\")"), e.querySelectorAll(":enabled").length || h.push(":enabled", ":disabled"), e.querySelectorAll("*,:x"), h.push(",.*:") })), (b.matchesSelector = it(g = f.webkitMatchesSelector || f.mozMatchesSelector || f.oMatchesSelector || f.msMatchesSelector)) && at(function (e) { b.disconnectedMatch = g.call(e, "div"), g.call(e, "[s!='']:x"), d.push("!=", B) }), h = h.length && RegExp(h.join("|")), d = d.length && RegExp(d.join("|")), m = it(f.contains) || f.compareDocumentPosition ? function (e, t) { var n = 9 === e.nodeType ? e.documentElement : e, r = t && t.parentNode; return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r))) } : function (e, t) { if (t) while (t = t.parentNode) if (t === e) return !0; return !1 }, S = f.compareDocumentPosition ? function (e, n) { if (e === n) return E = !0, 0; var r = n.compareDocumentPosition && e.compareDocumentPosition && e.compareDocumentPosition(n); return r ? 1 & r || !b.sortDetached && n.compareDocumentPosition(e) === r ? e === t || m(v, e) ? -1 : n === t || m(v, n) ? 1 : u ? F.call(u, e) - F.call(u, n) : 0 : 4 & r ? -1 : 1 : e.compareDocumentPosition ? -1 : 1 } : function (e, n) { var r, i = 0, o = e.parentNode, s = n.parentNode, a = [e], l = [n]; if (e === n) return E = !0, 0; if (!o || !s) return e === t ? -1 : n === t ? 1 : o ? -1 : s ? 1 : u ? F.call(u, e) - F.call(u, n) : 0; if (o === s) return lt(e, n); r = e; while (r = r.parentNode) a.unshift(r); r = n; while (r = r.parentNode) l.unshift(r); while (a[i] === l[i]) i++; return i ? lt(a[i], l[i]) : a[i] === v ? -1 : l[i] === v ? 1 : 0 }, c) : c }, ut.matches = function (e, t) { return ut(e, null, null, t) }, ut.matchesSelector = function (e, t) { if ((e.ownerDocument || e) !== c && l(e), t = t.replace(U, "='$1']"), !(!b.matchesSelector || !p || d && d.test(t) || h && h.test(t))) try { var n = g.call(e, t); if (n || b.disconnectedMatch || e.document && 11 !== e.document.nodeType) return n } catch (r) { } return ut(t, c, null, [e]).length > 0 }, ut.contains = function (e, t) { return (e.ownerDocument || e) !== c && l(e), m(e, t) }, ut.attr = function (e, t) { (e.ownerDocument || e) !== c && l(e); var n = r.attrHandle[t.toLowerCase()], i = n && n(e, t, !p); return i === undefined ? b.attributes || !p ? e.getAttribute(t) : (i = e.getAttributeNode(t)) && i.specified ? i.value : null : i }, ut.error = function (e) { throw Error("Syntax error, unrecognized expression: " + e) }, ut.uniqueSort = function (e) { var t, n = [], r = 0, i = 0; if (E = !b.detectDuplicates, u = !b.sortStable && e.slice(0), e.sort(S), E) { while (t = e[i++]) t === e[i] && (r = n.push(i)); while (r--) e.splice(n[r], 1) } return e }; function lt(e, t) { var n = t && e, r = n && (~t.sourceIndex || D) - (~e.sourceIndex || D); if (r) return r; if (n) while (n = n.nextSibling) if (n === t) return -1; return e ? 1 : -1 } function ct(e, t, n) { var r; return n ? undefined : (r = e.getAttributeNode(t)) && r.specified ? r.value : e[t] === !0 ? t.toLowerCase() : null } function ft(e, t, n) { var r; return n ? undefined : r = e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2) } function pt(e) { return function (t) { var n = t.nodeName.toLowerCase(); return "input" === n && t.type === e } } function ht(e) { return function (t) { var n = t.nodeName.toLowerCase(); return ("input" === n || "button" === n) && t.type === e } } function dt(e) { return st(function (t) { return t = +t, st(function (n, r) { var i, o = e([], n.length, t), s = o.length; while (s--) n[i = o[s]] && (n[i] = !(r[i] = n[i])) }) }) } i = ut.getText = function (e) { var t, n = "", r = 0, o = e.nodeType; if (o) { if (1 === o || 9 === o || 11 === o) { if ("string" == typeof e.textContent) return e.textContent; for (e = e.firstChild; e; e = e.nextSibling)n += i(e) } else if (3 === o || 4 === o) return e.nodeValue } else for (; t = e[r]; r++)n += i(t); return n }, r = ut.selectors = { cacheLength: 50, createPseudo: st, match: G, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function (e) { return e[1] = e[1].replace(tt, nt), e[3] = (e[4] || e[5] || "").replace(tt, nt), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4) }, CHILD: function (e) { return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || ut.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && ut.error(e[0]), e }, PSEUDO: function (e) { var t, n = !e[5] && e[2]; return G.CHILD.test(e[0]) ? null : (e[4] ? e[2] = e[4] : n && Y.test(n) && (t = gt(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), e[2] = n.slice(0, t)), e.slice(0, 3)) } }, filter: { TAG: function (e) { var t = e.replace(tt, nt).toLowerCase(); return "*" === e ? function () { return !0 } : function (e) { return e.nodeName && e.nodeName.toLowerCase() === t } }, CLASS: function (e) { var t = C[e + " "]; return t || (t = RegExp("(^|" + R + ")" + e + "(" + R + "|$)")) && C(e, function (e) { return t.test("string" == typeof e.className && e.className || typeof e.getAttribute !== j && e.getAttribute("class") || "") }) }, ATTR: function (e, t, n) { return function (r) { var i = ut.attr(r, e); return null == i ? "!=" === t : t ? (i += "", "=" === t ? i === n : "!=" === t ? i !== n : "^=" === t ? n && 0 === i.indexOf(n) : "*=" === t ? n && i.indexOf(n) > -1 : "$=" === t ? n && i.slice(-n.length) === n : "~=" === t ? (" " + i + " ").indexOf(n) > -1 : "|=" === t ? i === n || i.slice(0, n.length + 1) === n + "-" : !1) : !0 } }, CHILD: function (e, t, n, r, i) { var o = "nth" !== e.slice(0, 3), s = "last" !== e.slice(-4), a = "of-type" === t; return 1 === r && 0 === i ? function (e) { return !!e.parentNode } : function (t, n, u) { var l, c, f, p, h, d, g = o !== s ? "nextSibling" : "previousSibling", m = t.parentNode, v = a && t.nodeName.toLowerCase(), x = !u && !a; if (m) { if (o) { while (g) { f = t; while (f = f[g]) if (a ? f.nodeName.toLowerCase() === v : 1 === f.nodeType) return !1; d = g = "only" === e && !d && "nextSibling" } return !0 } if (d = [s ? m.firstChild : m.lastChild], s && x) { c = m[y] || (m[y] = {}), l = c[e] || [], h = l[0] === w && l[1], p = l[0] === w && l[2], f = h && m.childNodes[h]; while (f = ++h && f && f[g] || (p = h = 0) || d.pop()) if (1 === f.nodeType && ++p && f === t) { c[e] = [w, h, p]; break } } else if (x && (l = (t[y] || (t[y] = {}))[e]) && l[0] === w) p = l[1]; else while (f = ++h && f && f[g] || (p = h = 0) || d.pop()) if ((a ? f.nodeName.toLowerCase() === v : 1 === f.nodeType) && ++p && (x && ((f[y] || (f[y] = {}))[e] = [w, p]), f === t)) break; return p -= i, p === r || 0 === p % r && p / r >= 0 } } }, PSEUDO: function (e, t) { var n, i = r.pseudos[e] || r.setFilters[e.toLowerCase()] || ut.error("unsupported pseudo: " + e); return i[y] ? i(t) : i.length > 1 ? (n = [e, e, "", t], r.setFilters.hasOwnProperty(e.toLowerCase()) ? st(function (e, n) { var r, o = i(e, t), s = o.length; while (s--) r = F.call(e, o[s]), e[r] = !(n[r] = o[s]) }) : function (e) { return i(e, 0, n) }) : i } }, pseudos: { not: st(function (e) { var t = [], n = [], r = s(e.replace(I, "$1")); return r[y] ? st(function (e, t, n, i) { var o, s = r(e, null, i, []), a = e.length; while (a--) (o = s[a]) && (e[a] = !(t[a] = o)) }) : function (e, i, o) { return t[0] = e, r(t, null, o, n), !n.pop() } }), has: st(function (e) { return function (t) { return ut(e, t).length > 0 } }), contains: st(function (e) { return function (t) { return (t.textContent || t.innerText || i(t)).indexOf(e) > -1 } }), lang: st(function (e) { return V.test(e || "") || ut.error("unsupported lang: " + e), e = e.replace(tt, nt).toLowerCase(), function (t) { var n; do if (n = p ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return n = n.toLowerCase(), n === e || 0 === n.indexOf(e + "-"); while ((t = t.parentNode) && 1 === t.nodeType); return !1 } }), target: function (t) { var n = e.location && e.location.hash; return n && n.slice(1) === t.id }, root: function (e) { return e === f }, focus: function (e) { return e === c.activeElement && (!c.hasFocus || c.hasFocus()) && !!(e.type || e.href || ~e.tabIndex) }, enabled: function (e) { return e.disabled === !1 }, disabled: function (e) { return e.disabled === !0 }, checked: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && !!e.checked || "option" === t && !!e.selected }, selected: function (e) { return e.parentNode && e.parentNode.selectedIndex, e.selected === !0 }, empty: function (e) { for (e = e.firstChild; e; e = e.nextSibling)if (e.nodeName > "@" || 3 === e.nodeType || 4 === e.nodeType) return !1; return !0 }, parent: function (e) { return !r.pseudos.empty(e) }, header: function (e) { return Z.test(e.nodeName) }, input: function (e) { return K.test(e.nodeName) }, button: function (e) { var t = e.nodeName.toLowerCase(); return "input" === t && "button" === e.type || "button" === t }, text: function (e) { var t; return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || t.toLowerCase() === e.type) }, first: dt(function () { return [0] }), last: dt(function (e, t) { return [t - 1] }), eq: dt(function (e, t, n) { return [0 > n ? n + t : n] }), even: dt(function (e, t) { var n = 0; for (; t > n; n += 2)e.push(n); return e }), odd: dt(function (e, t) { var n = 1; for (; t > n; n += 2)e.push(n); return e }), lt: dt(function (e, t, n) { var r = 0 > n ? n + t : n; for (; --r >= 0;)e.push(r); return e }), gt: dt(function (e, t, n) { var r = 0 > n ? n + t : n; for (; t > ++r;)e.push(r); return e }) } }; for (t in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }) r.pseudos[t] = pt(t); for (t in { submit: !0, reset: !0 }) r.pseudos[t] = ht(t); function gt(e, t) { var n, i, o, s, a, u, l, c = k[e + " "]; if (c) return t ? 0 : c.slice(0); a = e, u = [], l = r.preFilter; while (a) { (!n || (i = z.exec(a))) && (i && (a = a.slice(i[0].length) || a), u.push(o = [])), n = !1, (i = _.exec(a)) && (n = i.shift(), o.push({ value: n, type: i[0].replace(I, " ") }), a = a.slice(n.length)); for (s in r.filter) !(i = G[s].exec(a)) || l[s] && !(i = l[s](i)) || (n = i.shift(), o.push({ value: n, type: s, matches: i }), a = a.slice(n.length)); if (!n) break } return t ? a.length : a ? ut.error(e) : k(e, u).slice(0) } function mt(e) { var t = 0, n = e.length, r = ""; for (; n > t; t++)r += e[t].value; return r } function yt(e, t, r) { var i = t.dir, o = r && "parentNode" === i, s = T++; return t.first ? function (t, n, r) { while (t = t[i]) if (1 === t.nodeType || o) return e(t, n, r) } : function (t, r, a) { var u, l, c, f = w + " " + s; if (a) { while (t = t[i]) if ((1 === t.nodeType || o) && e(t, r, a)) return !0 } else while (t = t[i]) if (1 === t.nodeType || o) if (c = t[y] || (t[y] = {}), (l = c[i]) && l[0] === f) { if ((u = l[1]) === !0 || u === n) return u === !0 } else if (l = c[i] = [f], l[1] = e(t, r, a) || n, l[1] === !0) return !0 } } function vt(e) { return e.length > 1 ? function (t, n, r) { var i = e.length; while (i--) if (!e[i](t, n, r)) return !1; return !0 } : e[0] } function xt(e, t, n, r, i) { var o, s = [], a = 0, u = e.length, l = null != t; for (; u > a; a++)(o = e[a]) && (!n || n(o, r, i)) && (s.push(o), l && t.push(a)); return s } function bt(e, t, n, r, i, o) { return r && !r[y] && (r = bt(r)), i && !i[y] && (i = bt(i, o)), st(function (o, s, a, u) { var l, c, f, p = [], h = [], d = s.length, g = o || Ct(t || "*", a.nodeType ? [a] : a, []), m = !e || !o && t ? g : xt(g, p, e, a, u), y = n ? i || (o ? e : d || r) ? [] : s : m; if (n && n(m, y, a, u), r) { l = xt(y, h), r(l, [], a, u), c = l.length; while (c--) (f = l[c]) && (y[h[c]] = !(m[h[c]] = f)) } if (o) { if (i || e) { if (i) { l = [], c = y.length; while (c--) (f = y[c]) && l.push(m[c] = f); i(null, y = [], l, u) } c = y.length; while (c--) (f = y[c]) && (l = i ? F.call(o, f) : p[c]) > -1 && (o[l] = !(s[l] = f)) } } else y = xt(y === s ? y.splice(d, y.length) : y), i ? i(null, s, y, u) : H.apply(s, y) }) } function wt(e) { var t, n, i, o = e.length, s = r.relative[e[0].type], u = s || r.relative[" "], l = s ? 1 : 0, c = yt(function (e) { return e === t }, u, !0), f = yt(function (e) { return F.call(t, e) > -1 }, u, !0), p = [function (e, n, r) { return !s && (r || n !== a) || ((t = n).nodeType ? c(e, n, r) : f(e, n, r)) }]; for (; o > l; l++)if (n = r.relative[e[l].type]) p = [yt(vt(p), n)]; else { if (n = r.filter[e[l].type].apply(null, e[l].matches), n[y]) { for (i = ++l; o > i; i++)if (r.relative[e[i].type]) break; return bt(l > 1 && vt(p), l > 1 && mt(e.slice(0, l - 1)).replace(I, "$1"), n, i > l && wt(e.slice(l, i)), o > i && wt(e = e.slice(i)), o > i && mt(e)) } p.push(n) } return vt(p) } function Tt(e, t) { var i = 0, o = t.length > 0, s = e.length > 0, u = function (u, l, f, p, h) { var d, g, m, y = [], v = 0, x = "0", b = u && [], T = null != h, C = a, k = u || s && r.find.TAG("*", h && l.parentNode || l), N = w += null == C ? 1 : Math.random() || .1; for (T && (a = l !== c && l, n = i); null != (d = k[x]); x++) { if (s && d) { g = 0; while (m = e[g++]) if (m(d, l, f)) { p.push(d); break } T && (w = N, n = ++i) } o && ((d = !m && d) && v--, u && b.push(d)) } if (v += x, o && x !== v) { g = 0; while (m = t[g++]) m(b, y, l, f); if (u) { if (v > 0) while (x--) b[x] || y[x] || (y[x] = L.call(p)); y = xt(y) } H.apply(p, y), T && !u && y.length > 0 && v + t.length > 1 && ut.uniqueSort(p) } return T && (w = N, a = C), b }; return o ? st(u) : u } s = ut.compile = function (e, t) { var n, r = [], i = [], o = N[e + " "]; if (!o) { t || (t = gt(e)), n = t.length; while (n--) o = wt(t[n]), o[y] ? r.push(o) : i.push(o); o = N(e, Tt(i, r)) } return o }; function Ct(e, t, n) { var r = 0, i = t.length; for (; i > r; r++)ut(e, t[r], n); return n } function kt(e, t, n, i) { var o, a, u, l, c, f = gt(e); if (!i && 1 === f.length) { if (a = f[0] = f[0].slice(0), a.length > 2 && "ID" === (u = a[0]).type && 9 === t.nodeType && p && r.relative[a[1].type]) { if (t = (r.find.ID(u.matches[0].replace(tt, nt), t) || [])[0], !t) return n; e = e.slice(a.shift().value.length) } o = G.needsContext.test(e) ? 0 : a.length; while (o--) { if (u = a[o], r.relative[l = u.type]) break; if ((c = r.find[l]) && (i = c(u.matches[0].replace(tt, nt), X.test(a[0].type) && t.parentNode || t))) { if (a.splice(o, 1), e = i.length && mt(a), !e) return H.apply(n, i), n; break } } } return s(e, f)(i, t, !p, n, X.test(e)), n } r.pseudos.nth = r.pseudos.eq; function Nt() { } Nt.prototype = r.filters = r.pseudos, r.setFilters = new Nt, b.sortStable = y.split("").sort(S).join("") === y, l(), [0, 0].sort(S), b.detectDuplicates = E, at(function (e) { if (e.innerHTML = "<a href='#'></a>", "#" !== e.firstChild.getAttribute("href")) { var t = "type|href|height|width".split("|"), n = t.length; while (n--) r.attrHandle[t[n]] = ft } }), at(function (e) { if (null != e.getAttribute("disabled")) { var t = P.split("|"), n = t.length; while (n--) r.attrHandle[t[n]] = ct } }), x.find = ut, x.expr = ut.selectors, x.expr[":"] = x.expr.pseudos, x.unique = ut.uniqueSort, x.text = ut.getText, x.isXMLDoc = ut.isXML, x.contains = ut.contains }(e); var D = {}; function A(e) { var t = D[e] = {}; return x.each(e.match(w) || [], function (e, n) { t[n] = !0 }), t } x.Callbacks = function (e) { e = "string" == typeof e ? D[e] || A(e) : x.extend({}, e); var t, n, r, i, o, s, a = [], u = !e.once && [], l = function (f) { for (t = e.memory && f, n = !0, s = i || 0, i = 0, o = a.length, r = !0; a && o > s; s++)if (a[s].apply(f[0], f[1]) === !1 && e.stopOnFalse) { t = !1; break } r = !1, a && (u ? u.length && l(u.shift()) : t ? a = [] : c.disable()) }, c = { add: function () { if (a) { var n = a.length; (function s(t) { x.each(t, function (t, n) { var r = x.type(n); "function" === r ? e.unique && c.has(n) || a.push(n) : n && n.length && "string" !== r && s(n) }) })(arguments), r ? o = a.length : t && (i = n, l(t)) } return this }, remove: function () { return a && x.each(arguments, function (e, t) { var n; while ((n = x.inArray(t, a, n)) > -1) a.splice(n, 1), r && (o >= n && o--, s >= n && s--) }), this }, has: function (e) { return e ? x.inArray(e, a) > -1 : !(!a || !a.length) }, empty: function () { return a = [], o = 0, this }, disable: function () { return a = u = t = undefined, this }, disabled: function () { return !a }, lock: function () { return u = undefined, t || c.disable(), this }, locked: function () { return !u }, fireWith: function (e, t) { return t = t || [], t = [e, t.slice ? t.slice() : t], !a || n && !u || (r ? u.push(t) : l(t)), this }, fire: function () { return c.fireWith(this, arguments), this }, fired: function () { return !!n } }; return c }, x.extend({ Deferred: function (e) { var t = [["resolve", "done", x.Callbacks("once memory"), "resolved"], ["reject", "fail", x.Callbacks("once memory"), "rejected"], ["notify", "progress", x.Callbacks("memory")]], n = "pending", r = { state: function () { return n }, always: function () { return i.done(arguments).fail(arguments), this }, then: function () { var e = arguments; return x.Deferred(function (n) { x.each(t, function (t, o) { var s = o[0], a = x.isFunction(e[t]) && e[t]; i[o[1]](function () { var e = a && a.apply(this, arguments); e && x.isFunction(e.promise) ? e.promise().done(n.resolve).fail(n.reject).progress(n.notify) : n[s + "With"](this === r ? n.promise() : this, a ? [e] : arguments) }) }), e = null }).promise() }, promise: function (e) { return null != e ? x.extend(e, r) : r } }, i = {}; return r.pipe = r.then, x.each(t, function (e, o) { var s = o[2], a = o[3]; r[o[1]] = s.add, a && s.add(function () { n = a }, t[1 ^ e][2].disable, t[2][2].lock), i[o[0]] = function () { return i[o[0] + "With"](this === i ? r : this, arguments), this }, i[o[0] + "With"] = s.fireWith }), r.promise(i), e && e.call(i, i), i }, when: function (e) { var t = 0, n = d.call(arguments), r = n.length, i = 1 !== r || e && x.isFunction(e.promise) ? r : 0, o = 1 === i ? e : x.Deferred(), s = function (e, t, n) { return function (r) { t[e] = this, n[e] = arguments.length > 1 ? d.call(arguments) : r, n === a ? o.notifyWith(t, n) : --i || o.resolveWith(t, n) } }, a, u, l; if (r > 1) for (a = Array(r), u = Array(r), l = Array(r); r > t; t++)n[t] && x.isFunction(n[t].promise) ? n[t].promise().done(s(t, l, n)).fail(o.reject).progress(s(t, u, a)) : --i; return i || o.resolveWith(l, n), o.promise() } }), x.support = function (t) { var n = o.createElement("input"), r = o.createDocumentFragment(), i = o.createElement("div"), s = o.createElement("select"), a = s.appendChild(o.createElement("option")); return n.type ? (n.type = "checkbox", t.checkOn = "" !== n.value, t.optSelected = a.selected, t.reliableMarginRight = !0, t.boxSizingReliable = !0, t.pixelPosition = !1, n.checked = !0, t.noCloneChecked = n.cloneNode(!0).checked, s.disabled = !0, t.optDisabled = !a.disabled, n = o.createElement("input"), n.value = "t", n.type = "radio", t.radioValue = "t" === n.value, n.setAttribute("checked", "t"), n.setAttribute("name", "t"), r.appendChild(n), t.checkClone = r.cloneNode(!0).cloneNode(!0).lastChild.checked, t.focusinBubbles = "onfocusin" in e, i.style.backgroundClip = "content-box", i.cloneNode(!0).style.backgroundClip = "", t.clearCloneStyle = "content-box" === i.style.backgroundClip, x(function () { var n, r, s = "padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box", a = o.getElementsByTagName("body")[0]; a && (n = o.createElement("div"), n.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px", a.appendChild(n).appendChild(i), i.innerHTML = "", i.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%", x.swap(a, null != a.style.zoom ? { zoom: 1 } : {}, function () { t.boxSizing = 4 === i.offsetWidth }), e.getComputedStyle && (t.pixelPosition = "1%" !== (e.getComputedStyle(i, null) || {}).top, t.boxSizingReliable = "4px" === (e.getComputedStyle(i, null) || { width: "4px" }).width, r = i.appendChild(o.createElement("div")), r.style.cssText = i.style.cssText = s, r.style.marginRight = r.style.width = "0", i.style.width = "1px", t.reliableMarginRight = !parseFloat((e.getComputedStyle(r, null) || {}).marginRight)), a.removeChild(n)) }), t) : t }({}); var L, q, H = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/, O = /([A-Z])/g; function F() { Object.defineProperty(this.cache = {}, 0, { get: function () { return {} } }), this.expando = x.expando + Math.random() } F.uid = 1, F.accepts = function (e) { return e.nodeType ? 1 === e.nodeType || 9 === e.nodeType : !0 }, F.prototype = { key: function (e) { if (!F.accepts(e)) return 0; var t = {}, n = e[this.expando]; if (!n) { n = F.uid++; try { t[this.expando] = { value: n }, Object.defineProperties(e, t) } catch (r) { t[this.expando] = n, x.extend(e, t) } } return this.cache[n] || (this.cache[n] = {}), n }, set: function (e, t, n) { var r, i = this.key(e), o = this.cache[i]; if ("string" == typeof t) o[t] = n; else if (x.isEmptyObject(o)) this.cache[i] = t; else for (r in t) o[r] = t[r] }, get: function (e, t) { var n = this.cache[this.key(e)]; return t === undefined ? n : n[t] }, access: function (e, t, n) { return t === undefined || t && "string" == typeof t && n === undefined ? this.get(e, t) : (this.set(e, t, n), n !== undefined ? n : t) }, remove: function (e, t) { var n, r, i = this.key(e), o = this.cache[i]; if (t === undefined) this.cache[i] = {}; else { x.isArray(t) ? r = t.concat(t.map(x.camelCase)) : t in o ? r = [t] : (r = x.camelCase(t), r = r in o ? [r] : r.match(w) || []), n = r.length; while (n--) delete o[r[n]] } }, hasData: function (e) { return !x.isEmptyObject(this.cache[e[this.expando]] || {}) }, discard: function (e) { delete this.cache[this.key(e)] } }, L = new F, q = new F, x.extend({ acceptData: F.accepts, hasData: function (e) { return L.hasData(e) || q.hasData(e) }, data: function (e, t, n) { return L.access(e, t, n) }, removeData: function (e, t) { L.remove(e, t) }, _data: function (e, t, n) { return q.access(e, t, n) }, _removeData: function (e, t) { q.remove(e, t) } }), x.fn.extend({ data: function (e, t) { var n, r, i = this[0], o = 0, s = null; if (e === undefined) { if (this.length && (s = L.get(i), 1 === i.nodeType && !q.get(i, "hasDataAttrs"))) { for (n = i.attributes; n.length > o; o++)r = n[o].name, 0 === r.indexOf("data-") && (r = x.camelCase(r.substring(5)), P(i, r, s[r])); q.set(i, "hasDataAttrs", !0) } return s } return "object" == typeof e ? this.each(function () { L.set(this, e) }) : x.access(this, function (t) { var n, r = x.camelCase(e); if (i && t === undefined) { if (n = L.get(i, e), n !== undefined) return n; if (n = L.get(i, r), n !== undefined) return n; if (n = P(i, r, undefined), n !== undefined) return n } else this.each(function () { var n = L.get(this, r); L.set(this, r, t), -1 !== e.indexOf("-") && n !== undefined && L.set(this, e, t) }) }, null, t, arguments.length > 1, null, !0) }, removeData: function (e) { return this.each(function () { L.remove(this, e) }) } }); function P(e, t, n) { var r; if (n === undefined && 1 === e.nodeType) if (r = "data-" + t.replace(O, "-$1").toLowerCase(), n = e.getAttribute(r), "string" == typeof n) { try { n = "true" === n ? !0 : "false" === n ? !1 : "null" === n ? null : +n + "" === n ? +n : H.test(n) ? JSON.parse(n) : n } catch (i) { } L.set(e, t, n) } else n = undefined; return n } x.extend({ queue: function (e, t, n) { var r; return e ? (t = (t || "fx") + "queue", r = q.get(e, t), n && (!r || x.isArray(n) ? r = q.access(e, t, x.makeArray(n)) : r.push(n)), r || []) : undefined }, dequeue: function (e, t) { t = t || "fx"; var n = x.queue(e, t), r = n.length, i = n.shift(), o = x._queueHooks(e, t), s = function () { x.dequeue(e, t) }; "inprogress" === i && (i = n.shift(), r--), o.cur = i, i && ("fx" === t && n.unshift("inprogress"), delete o.stop, i.call(e, s, o)), !r && o && o.empty.fire() }, _queueHooks: function (e, t) { var n = t + "queueHooks"; return q.get(e, n) || q.access(e, n, { empty: x.Callbacks("once memory").add(function () { q.remove(e, [t + "queue", n]) }) }) } }), x.fn.extend({
        queue: function (e, t) {
            var n = 2; return "string" != typeof e && (t = e, e = "fx", n--), n > arguments.length ? x.queue(this[0], e) : t === undefined ? this : this.each(function () {
                var n = x.queue(this, e, t);
                x._queueHooks(this, e), "fx" === e && "inprogress" !== n[0] && x.dequeue(this, e)
            })
        }, dequeue: function (e) { return this.each(function () { x.dequeue(this, e) }) }, delay: function (e, t) { return e = x.fx ? x.fx.speeds[e] || e : e, t = t || "fx", this.queue(t, function (t, n) { var r = setTimeout(t, e); n.stop = function () { clearTimeout(r) } }) }, clearQueue: function (e) { return this.queue(e || "fx", []) }, promise: function (e, t) { var n, r = 1, i = x.Deferred(), o = this, s = this.length, a = function () { --r || i.resolveWith(o, [o]) }; "string" != typeof e && (t = e, e = undefined), e = e || "fx"; while (s--) n = q.get(o[s], e + "queueHooks"), n && n.empty && (r++, n.empty.add(a)); return a(), i.promise(t) }
    }); var R, M, W = /[\t\r\n]/g, $ = /\r/g, B = /^(?:input|select|textarea|button)$/i; x.fn.extend({ attr: function (e, t) { return x.access(this, x.attr, e, t, arguments.length > 1) }, removeAttr: function (e) { return this.each(function () { x.removeAttr(this, e) }) }, prop: function (e, t) { return x.access(this, x.prop, e, t, arguments.length > 1) }, removeProp: function (e) { return this.each(function () { delete this[x.propFix[e] || e] }) }, addClass: function (e) { var t, n, r, i, o, s = 0, a = this.length, u = "string" == typeof e && e; if (x.isFunction(e)) return this.each(function (t) { x(this).addClass(e.call(this, t, this.className)) }); if (u) for (t = (e || "").match(w) || []; a > s; s++)if (n = this[s], r = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(W, " ") : " ")) { o = 0; while (i = t[o++]) 0 > r.indexOf(" " + i + " ") && (r += i + " "); n.className = x.trim(r) } return this }, removeClass: function (e) { var t, n, r, i, o, s = 0, a = this.length, u = 0 === arguments.length || "string" == typeof e && e; if (x.isFunction(e)) return this.each(function (t) { x(this).removeClass(e.call(this, t, this.className)) }); if (u) for (t = (e || "").match(w) || []; a > s; s++)if (n = this[s], r = 1 === n.nodeType && (n.className ? (" " + n.className + " ").replace(W, " ") : "")) { o = 0; while (i = t[o++]) while (r.indexOf(" " + i + " ") >= 0) r = r.replace(" " + i + " ", " "); n.className = e ? x.trim(r) : "" } return this }, toggleClass: function (e, t) { var n = typeof e, i = "boolean" == typeof t; return x.isFunction(e) ? this.each(function (n) { x(this).toggleClass(e.call(this, n, this.className, t), t) }) : this.each(function () { if ("string" === n) { var o, s = 0, a = x(this), u = t, l = e.match(w) || []; while (o = l[s++]) u = i ? u : !a.hasClass(o), a[u ? "addClass" : "removeClass"](o) } else (n === r || "boolean" === n) && (this.className && q.set(this, "__className__", this.className), this.className = this.className || e === !1 ? "" : q.get(this, "__className__") || "") }) }, hasClass: function (e) { var t = " " + e + " ", n = 0, r = this.length; for (; r > n; n++)if (1 === this[n].nodeType && (" " + this[n].className + " ").replace(W, " ").indexOf(t) >= 0) return !0; return !1 }, val: function (e) { var t, n, r, i = this[0]; { if (arguments.length) return r = x.isFunction(e), this.each(function (n) { var i, o = x(this); 1 === this.nodeType && (i = r ? e.call(this, n, o.val()) : e, null == i ? i = "" : "number" == typeof i ? i += "" : x.isArray(i) && (i = x.map(i, function (e) { return null == e ? "" : e + "" })), t = x.valHooks[this.type] || x.valHooks[this.nodeName.toLowerCase()], t && "set" in t && t.set(this, i, "value") !== undefined || (this.value = i)) }); if (i) return t = x.valHooks[i.type] || x.valHooks[i.nodeName.toLowerCase()], t && "get" in t && (n = t.get(i, "value")) !== undefined ? n : (n = i.value, "string" == typeof n ? n.replace($, "") : null == n ? "" : n) } } }), x.extend({ valHooks: { option: { get: function (e) { var t = e.attributes.value; return !t || t.specified ? e.value : e.text } }, select: { get: function (e) { var t, n, r = e.options, i = e.selectedIndex, o = "select-one" === e.type || 0 > i, s = o ? null : [], a = o ? i + 1 : r.length, u = 0 > i ? a : o ? i : 0; for (; a > u; u++)if (n = r[u], !(!n.selected && u !== i || (x.support.optDisabled ? n.disabled : null !== n.getAttribute("disabled")) || n.parentNode.disabled && x.nodeName(n.parentNode, "optgroup"))) { if (t = x(n).val(), o) return t; s.push(t) } return s }, set: function (e, t) { var n, r, i = e.options, o = x.makeArray(t), s = i.length; while (s--) r = i[s], (r.selected = x.inArray(x(r).val(), o) >= 0) && (n = !0); return n || (e.selectedIndex = -1), o } } }, attr: function (e, t, n) { var i, o, s = e.nodeType; if (e && 3 !== s && 8 !== s && 2 !== s) return typeof e.getAttribute === r ? x.prop(e, t, n) : (1 === s && x.isXMLDoc(e) || (t = t.toLowerCase(), i = x.attrHooks[t] || (x.expr.match.boolean.test(t) ? M : R)), n === undefined ? i && "get" in i && null !== (o = i.get(e, t)) ? o : (o = x.find.attr(e, t), null == o ? undefined : o) : null !== n ? i && "set" in i && (o = i.set(e, n, t)) !== undefined ? o : (e.setAttribute(t, n + ""), n) : (x.removeAttr(e, t), undefined)) }, removeAttr: function (e, t) { var n, r, i = 0, o = t && t.match(w); if (o && 1 === e.nodeType) while (n = o[i++]) r = x.propFix[n] || n, x.expr.match.boolean.test(n) && (e[r] = !1), e.removeAttribute(n) }, attrHooks: { type: { set: function (e, t) { if (!x.support.radioValue && "radio" === t && x.nodeName(e, "input")) { var n = e.value; return e.setAttribute("type", t), n && (e.value = n), t } } } }, propFix: { "for": "htmlFor", "class": "className" }, prop: function (e, t, n) { var r, i, o, s = e.nodeType; if (e && 3 !== s && 8 !== s && 2 !== s) return o = 1 !== s || !x.isXMLDoc(e), o && (t = x.propFix[t] || t, i = x.propHooks[t]), n !== undefined ? i && "set" in i && (r = i.set(e, n, t)) !== undefined ? r : e[t] = n : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t] }, propHooks: { tabIndex: { get: function (e) { return e.hasAttribute("tabindex") || B.test(e.nodeName) || e.href ? e.tabIndex : -1 } } } }), M = { set: function (e, t, n) { return t === !1 ? x.removeAttr(e, n) : e.setAttribute(n, n), n } }, x.each(x.expr.match.boolean.source.match(/\w+/g), function (e, t) { var n = x.expr.attrHandle[t] || x.find.attr; x.expr.attrHandle[t] = function (e, t, r) { var i = x.expr.attrHandle[t], o = r ? undefined : (x.expr.attrHandle[t] = undefined) != n(e, t, r) ? t.toLowerCase() : null; return x.expr.attrHandle[t] = i, o } }), x.support.optSelected || (x.propHooks.selected = { get: function (e) { var t = e.parentNode; return t && t.parentNode && t.parentNode.selectedIndex, null } }), x.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () { x.propFix[this.toLowerCase()] = this }), x.each(["radio", "checkbox"], function () { x.valHooks[this] = { set: function (e, t) { return x.isArray(t) ? e.checked = x.inArray(x(e).val(), t) >= 0 : undefined } }, x.support.checkOn || (x.valHooks[this].get = function (e) { return null === e.getAttribute("value") ? "on" : e.value }) }); var I = /^key/, z = /^(?:mouse|contextmenu)|click/, _ = /^(?:focusinfocus|focusoutblur)$/, X = /^([^.]*)(?:\.(.+)|)$/; function U() { return !0 } function Y() { return !1 } function V() { try { return o.activeElement } catch (e) { } } x.event = { global: {}, add: function (e, t, n, i, o) { var s, a, u, l, c, f, p, h, d, g, m, y = q.get(e); if (y) { n.handler && (s = n, n = s.handler, o = s.selector), n.guid || (n.guid = x.guid++), (l = y.events) || (l = y.events = {}), (a = y.handle) || (a = y.handle = function (e) { return typeof x === r || e && x.event.triggered === e.type ? undefined : x.event.dispatch.apply(a.elem, arguments) }, a.elem = e), t = (t || "").match(w) || [""], c = t.length; while (c--) u = X.exec(t[c]) || [], d = m = u[1], g = (u[2] || "").split(".").sort(), d && (p = x.event.special[d] || {}, d = (o ? p.delegateType : p.bindType) || d, p = x.event.special[d] || {}, f = x.extend({ type: d, origType: m, data: i, handler: n, guid: n.guid, selector: o, needsContext: o && x.expr.match.needsContext.test(o), namespace: g.join(".") }, s), (h = l[d]) || (h = l[d] = [], h.delegateCount = 0, p.setup && p.setup.call(e, i, g, a) !== !1 || e.addEventListener && e.addEventListener(d, a, !1)), p.add && (p.add.call(e, f), f.handler.guid || (f.handler.guid = n.guid)), o ? h.splice(h.delegateCount++, 0, f) : h.push(f), x.event.global[d] = !0); e = null } }, remove: function (e, t, n, r, i) { var o, s, a, u, l, c, f, p, h, d, g, m = q.hasData(e) && q.get(e); if (m && (u = m.events)) { t = (t || "").match(w) || [""], l = t.length; while (l--) if (a = X.exec(t[l]) || [], h = g = a[1], d = (a[2] || "").split(".").sort(), h) { f = x.event.special[h] || {}, h = (r ? f.delegateType : f.bindType) || h, p = u[h] || [], a = a[2] && RegExp("(^|\\.)" + d.join("\\.(?:.*\\.|)") + "(\\.|$)"), s = o = p.length; while (o--) c = p[o], !i && g !== c.origType || n && n.guid !== c.guid || a && !a.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(o, 1), c.selector && p.delegateCount--, f.remove && f.remove.call(e, c)); s && !p.length && (f.teardown && f.teardown.call(e, d, m.handle) !== !1 || x.removeEvent(e, h, m.handle), delete u[h]) } else for (h in u) x.event.remove(e, h + t[l], n, r, !0); x.isEmptyObject(u) && (delete m.handle, q.remove(e, "events")) } }, trigger: function (t, n, r, i) { var s, a, u, l, c, f, p, h = [r || o], d = y.call(t, "type") ? t.type : t, g = y.call(t, "namespace") ? t.namespace.split(".") : []; if (a = u = r = r || o, 3 !== r.nodeType && 8 !== r.nodeType && !_.test(d + x.event.triggered) && (d.indexOf(".") >= 0 && (g = d.split("."), d = g.shift(), g.sort()), c = 0 > d.indexOf(":") && "on" + d, t = t[x.expando] ? t : new x.Event(d, "object" == typeof t && t), t.isTrigger = i ? 2 : 3, t.namespace = g.join("."), t.namespace_re = t.namespace ? RegExp("(^|\\.)" + g.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, t.result = undefined, t.target || (t.target = r), n = null == n ? [t] : x.makeArray(n, [t]), p = x.event.special[d] || {}, i || !p.trigger || p.trigger.apply(r, n) !== !1)) { if (!i && !p.noBubble && !x.isWindow(r)) { for (l = p.delegateType || d, _.test(l + d) || (a = a.parentNode); a; a = a.parentNode)h.push(a), u = a; u === (r.ownerDocument || o) && h.push(u.defaultView || u.parentWindow || e) } s = 0; while ((a = h[s++]) && !t.isPropagationStopped()) t.type = s > 1 ? l : p.bindType || d, f = (q.get(a, "events") || {})[t.type] && q.get(a, "handle"), f && f.apply(a, n), f = c && a[c], f && x.acceptData(a) && f.apply && f.apply(a, n) === !1 && t.preventDefault(); return t.type = d, i || t.isDefaultPrevented() || p._default && p._default.apply(h.pop(), n) !== !1 || !x.acceptData(r) || c && x.isFunction(r[d]) && !x.isWindow(r) && (u = r[c], u && (r[c] = null), x.event.triggered = d, r[d](), x.event.triggered = undefined, u && (r[c] = u)), t.result } }, dispatch: function (e) { e = x.event.fix(e); var t, n, r, i, o, s = [], a = d.call(arguments), u = (q.get(this, "events") || {})[e.type] || [], l = x.event.special[e.type] || {}; if (a[0] = e, e.delegateTarget = this, !l.preDispatch || l.preDispatch.call(this, e) !== !1) { s = x.event.handlers.call(this, e, u), t = 0; while ((i = s[t++]) && !e.isPropagationStopped()) { e.currentTarget = i.elem, n = 0; while ((o = i.handlers[n++]) && !e.isImmediatePropagationStopped()) (!e.namespace_re || e.namespace_re.test(o.namespace)) && (e.handleObj = o, e.data = o.data, r = ((x.event.special[o.origType] || {}).handle || o.handler).apply(i.elem, a), r !== undefined && (e.result = r) === !1 && (e.preventDefault(), e.stopPropagation())) } return l.postDispatch && l.postDispatch.call(this, e), e.result } }, handlers: function (e, t) { var n, r, i, o, s = [], a = t.delegateCount, u = e.target; if (a && u.nodeType && (!e.button || "click" !== e.type)) for (; u !== this; u = u.parentNode || this)if (u.disabled !== !0 || "click" !== e.type) { for (r = [], n = 0; a > n; n++)o = t[n], i = o.selector + " ", r[i] === undefined && (r[i] = o.needsContext ? x(i, this).index(u) >= 0 : x.find(i, this, null, [u]).length), r[i] && r.push(o); r.length && s.push({ elem: u, handlers: r }) } return t.length > a && s.push({ elem: this, handlers: t.slice(a) }), s }, props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "), fixHooks: {}, keyHooks: { props: "char charCode key keyCode".split(" "), filter: function (e, t) { return null == e.which && (e.which = null != t.charCode ? t.charCode : t.keyCode), e } }, mouseHooks: { props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "), filter: function (e, t) { var n, r, i, s = t.button; return null == e.pageX && null != t.clientX && (n = e.target.ownerDocument || o, r = n.documentElement, i = n.body, e.pageX = t.clientX + (r && r.scrollLeft || i && i.scrollLeft || 0) - (r && r.clientLeft || i && i.clientLeft || 0), e.pageY = t.clientY + (r && r.scrollTop || i && i.scrollTop || 0) - (r && r.clientTop || i && i.clientTop || 0)), e.which || s === undefined || (e.which = 1 & s ? 1 : 2 & s ? 3 : 4 & s ? 2 : 0), e } }, fix: function (e) { if (e[x.expando]) return e; var t, n, r, i = e.type, o = e, s = this.fixHooks[i]; s || (this.fixHooks[i] = s = z.test(i) ? this.mouseHooks : I.test(i) ? this.keyHooks : {}), r = s.props ? this.props.concat(s.props) : this.props, e = new x.Event(o), t = r.length; while (t--) n = r[t], e[n] = o[n]; return 3 === e.target.nodeType && (e.target = e.target.parentNode), s.filter ? s.filter(e, o) : e }, special: { load: { noBubble: !0 }, focus: { trigger: function () { return this !== V() && this.focus ? (this.focus(), !1) : undefined }, delegateType: "focusin" }, blur: { trigger: function () { return this === V() && this.blur ? (this.blur(), !1) : undefined }, delegateType: "focusout" }, click: { trigger: function () { return "checkbox" === this.type && this.click && x.nodeName(this, "input") ? (this.click(), !1) : undefined }, _default: function (e) { return x.nodeName(e.target, "a") } }, beforeunload: { postDispatch: function (e) { e.result !== undefined && (e.originalEvent.returnValue = e.result) } } }, simulate: function (e, t, n, r) { var i = x.extend(new x.Event, n, { type: e, isSimulated: !0, originalEvent: {} }); r ? x.event.trigger(i, null, t) : x.event.dispatch.call(t, i), i.isDefaultPrevented() && n.preventDefault() } }, x.removeEvent = function (e, t, n) { e.removeEventListener && e.removeEventListener(t, n, !1) }, x.Event = function (e, t) { return this instanceof x.Event ? (e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || e.getPreventDefault && e.getPreventDefault() ? U : Y) : this.type = e, t && x.extend(this, t), this.timeStamp = e && e.timeStamp || x.now(), this[x.expando] = !0, undefined) : new x.Event(e, t) }, x.Event.prototype = { isDefaultPrevented: Y, isPropagationStopped: Y, isImmediatePropagationStopped: Y, preventDefault: function () { var e = this.originalEvent; this.isDefaultPrevented = U, e && e.preventDefault && e.preventDefault() }, stopPropagation: function () { var e = this.originalEvent; this.isPropagationStopped = U, e && e.stopPropagation && e.stopPropagation() }, stopImmediatePropagation: function () { this.isImmediatePropagationStopped = U, this.stopPropagation() } }, x.each({ mouseenter: "mouseover", mouseleave: "mouseout" }, function (e, t) { x.event.special[e] = { delegateType: t, bindType: t, handle: function (e) { var n, r = this, i = e.relatedTarget, o = e.handleObj; return (!i || i !== r && !x.contains(r, i)) && (e.type = o.origType, n = o.handler.apply(this, arguments), e.type = t), n } } }), x.support.focusinBubbles || x.each({ focus: "focusin", blur: "focusout" }, function (e, t) { var n = 0, r = function (e) { x.event.simulate(t, e.target, x.event.fix(e), !0) }; x.event.special[t] = { setup: function () { 0 === n++ && o.addEventListener(e, r, !0) }, teardown: function () { 0 === --n && o.removeEventListener(e, r, !0) } } }), x.fn.extend({ on: function (e, t, n, r, i) { var o, s; if ("object" == typeof e) { "string" != typeof t && (n = n || t, t = undefined); for (s in e) this.on(s, t, n, e[s], i); return this } if (null == n && null == r ? (r = t, n = t = undefined) : null == r && ("string" == typeof t ? (r = n, n = undefined) : (r = n, n = t, t = undefined)), r === !1) r = Y; else if (!r) return this; return 1 === i && (o = r, r = function (e) { return x().off(e), o.apply(this, arguments) }, r.guid = o.guid || (o.guid = x.guid++)), this.each(function () { x.event.add(this, e, r, n, t) }) }, one: function (e, t, n, r) { return this.on(e, t, n, r, 1) }, off: function (e, t, n) { var r, i; if (e && e.preventDefault && e.handleObj) return r = e.handleObj, x(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this; if ("object" == typeof e) { for (i in e) this.off(i, t, e[i]); return this } return (t === !1 || "function" == typeof t) && (n = t, t = undefined), n === !1 && (n = Y), this.each(function () { x.event.remove(this, e, n, t) }) }, trigger: function (e, t) { return this.each(function () { x.event.trigger(e, t, this) }) }, triggerHandler: function (e, t) { var n = this[0]; return n ? x.event.trigger(e, t, n, !0) : undefined } }); var G = /^.[^:#\[\.,]*$/, J = x.expr.match.needsContext, Q = { children: !0, contents: !0, next: !0, prev: !0 }; x.fn.extend({ find: function (e) { var t, n, r, i = this.length; if ("string" != typeof e) return t = this, this.pushStack(x(e).filter(function () { for (r = 0; i > r; r++)if (x.contains(t[r], this)) return !0 })); for (n = [], r = 0; i > r; r++)x.find(e, this[r], n); return n = this.pushStack(i > 1 ? x.unique(n) : n), n.selector = (this.selector ? this.selector + " " : "") + e, n }, has: function (e) { var t = x(e, this), n = t.length; return this.filter(function () { var e = 0; for (; n > e; e++)if (x.contains(this, t[e])) return !0 }) }, not: function (e) { return this.pushStack(Z(this, e || [], !0)) }, filter: function (e) { return this.pushStack(Z(this, e || [], !1)) }, is: function (e) { return !!e && ("string" == typeof e ? J.test(e) ? x(e, this.context).index(this[0]) >= 0 : x.filter(e, this).length > 0 : this.filter(e).length > 0) }, closest: function (e, t) { var n, r = 0, i = this.length, o = [], s = J.test(e) || "string" != typeof e ? x(e, t || this.context) : 0; for (; i > r; r++)for (n = this[r]; n && n !== t; n = n.parentNode)if (11 > n.nodeType && (s ? s.index(n) > -1 : 1 === n.nodeType && x.find.matchesSelector(n, e))) { n = o.push(n); break } return this.pushStack(o.length > 1 ? x.unique(o) : o) }, index: function (e) { return e ? "string" == typeof e ? g.call(x(e), this[0]) : g.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1 }, add: function (e, t) { var n = "string" == typeof e ? x(e, t) : x.makeArray(e && e.nodeType ? [e] : e), r = x.merge(this.get(), n); return this.pushStack(x.unique(r)) }, addBack: function (e) { return this.add(null == e ? this.prevObject : this.prevObject.filter(e)) } }); function K(e, t) { while ((e = e[t]) && 1 !== e.nodeType); return e } x.each({ parent: function (e) { var t = e.parentNode; return t && 11 !== t.nodeType ? t : null }, parents: function (e) { return x.dir(e, "parentNode") }, parentsUntil: function (e, t, n) { return x.dir(e, "parentNode", n) }, next: function (e) { return K(e, "nextSibling") }, prev: function (e) { return K(e, "previousSibling") }, nextAll: function (e) { return x.dir(e, "nextSibling") }, prevAll: function (e) { return x.dir(e, "previousSibling") }, nextUntil: function (e, t, n) { return x.dir(e, "nextSibling", n) }, prevUntil: function (e, t, n) { return x.dir(e, "previousSibling", n) }, siblings: function (e) { return x.sibling((e.parentNode || {}).firstChild, e) }, children: function (e) { return x.sibling(e.firstChild) }, contents: function (e) { return x.nodeName(e, "iframe") ? e.contentDocument || e.contentWindow.document : x.merge([], e.childNodes) } }, function (e, t) { x.fn[e] = function (n, r) { var i = x.map(this, t, n); return "Until" !== e.slice(-5) && (r = n), r && "string" == typeof r && (i = x.filter(r, i)), this.length > 1 && (Q[e] || x.unique(i), "p" === e[0] && i.reverse()), this.pushStack(i) } }), x.extend({ filter: function (e, t, n) { var r = t[0]; return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? x.find.matchesSelector(r, e) ? [r] : [] : x.find.matches(e, x.grep(t, function (e) { return 1 === e.nodeType })) }, dir: function (e, t, n) { var r = [], i = n !== undefined; while ((e = e[t]) && 9 !== e.nodeType) if (1 === e.nodeType) { if (i && x(e).is(n)) break; r.push(e) } return r }, sibling: function (e, t) { var n = []; for (; e; e = e.nextSibling)1 === e.nodeType && e !== t && n.push(e); return n } }); function Z(e, t, n) { if (x.isFunction(t)) return x.grep(e, function (e, r) { return !!t.call(e, r, e) !== n }); if (t.nodeType) return x.grep(e, function (e) { return e === t !== n }); if ("string" == typeof t) { if (G.test(t)) return x.filter(t, e, n); t = x.filter(t, e) } return x.grep(e, function (e) { return g.call(t, e) >= 0 !== n }) } var et = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, tt = /<([\w:]+)/, nt = /<|&#?\w+;/, rt = /<(?:script|style|link)/i, it = /^(?:checkbox|radio)$/i, ot = /checked\s*(?:[^=]|=\s*.checked.)/i, st = /^$|\/(?:java|ecma)script/i, at = /^true\/(.*)/, ut = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, lt = { option: [1, "<select multiple='multiple'>", "</select>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] }; lt.optgroup = lt.option, lt.tbody = lt.tfoot = lt.colgroup = lt.caption = lt.col = lt.thead, lt.th = lt.td, x.fn.extend({ text: function (e) { return x.access(this, function (e) { return e === undefined ? x.text(this) : this.empty().append((this[0] && this[0].ownerDocument || o).createTextNode(e)) }, null, e, arguments.length) }, append: function () { return this.domManip(arguments, function (e) { if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) { var t = ct(this, e); t.appendChild(e) } }) }, prepend: function () { return this.domManip(arguments, function (e) { if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) { var t = ct(this, e); t.insertBefore(e, t.firstChild) } }) }, before: function () { return this.domManip(arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this) }) }, after: function () { return this.domManip(arguments, function (e) { this.parentNode && this.parentNode.insertBefore(e, this.nextSibling) }) }, remove: function (e, t) { var n, r = e ? x.filter(e, this) : this, i = 0; for (; null != (n = r[i]); i++)t || 1 !== n.nodeType || x.cleanData(gt(n)), n.parentNode && (t && x.contains(n.ownerDocument, n) && ht(gt(n, "script")), n.parentNode.removeChild(n)); return this }, empty: function () { var e, t = 0; for (; null != (e = this[t]); t++)1 === e.nodeType && (x.cleanData(gt(e, !1)), e.textContent = ""); return this }, clone: function (e, t) { return e = null == e ? !1 : e, t = null == t ? e : t, this.map(function () { return x.clone(this, e, t) }) }, html: function (e) { return x.access(this, function (e) { var t = this[0] || {}, n = 0, r = this.length; if (e === undefined && 1 === t.nodeType) return t.innerHTML; if ("string" == typeof e && !rt.test(e) && !lt[(tt.exec(e) || ["", ""])[1].toLowerCase()]) { e = e.replace(et, "<$1></$2>"); try { for (; r > n; n++)t = this[n] || {}, 1 === t.nodeType && (x.cleanData(gt(t, !1)), t.innerHTML = e); t = 0 } catch (i) { } } t && this.empty().append(e) }, null, e, arguments.length) }, replaceWith: function () { var e = x.map(this, function (e) { return [e.nextSibling, e.parentNode] }), t = 0; return this.domManip(arguments, function (n) { var r = e[t++], i = e[t++]; i && (x(this).remove(), i.insertBefore(n, r)) }, !0), t ? this : this.remove() }, detach: function (e) { return this.remove(e, !0) }, domManip: function (e, t, n) { e = p.apply([], e); var r, i, o, s, a, u, l = 0, c = this.length, f = this, h = c - 1, d = e[0], g = x.isFunction(d); if (g || !(1 >= c || "string" != typeof d || x.support.checkClone) && ot.test(d)) return this.each(function (r) { var i = f.eq(r); g && (e[0] = d.call(this, r, i.html())), i.domManip(e, t, n) }); if (c && (r = x.buildFragment(e, this[0].ownerDocument, !1, !n && this), i = r.firstChild, 1 === r.childNodes.length && (r = i), i)) { for (o = x.map(gt(r, "script"), ft), s = o.length; c > l; l++)a = r, l !== h && (a = x.clone(a, !0, !0), s && x.merge(o, gt(a, "script"))), t.call(this[l], a, l); if (s) for (u = o[o.length - 1].ownerDocument, x.map(o, pt), l = 0; s > l; l++)a = o[l], st.test(a.type || "") && !q.access(a, "globalEval") && x.contains(u, a) && (a.src ? x._evalUrl(a.src) : x.globalEval(a.textContent.replace(ut, ""))) } return this } }), x.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (e, t) { x.fn[e] = function (e) { var n, r = [], i = x(e), o = i.length - 1, s = 0; for (; o >= s; s++)n = s === o ? this : this.clone(!0), x(i[s])[t](n), h.apply(r, n.get()); return this.pushStack(r) } }), x.extend({ clone: function (e, t, n) { var r, i, o, s, a = e.cloneNode(!0), u = x.contains(e.ownerDocument, e); if (!(x.support.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || x.isXMLDoc(e))) for (s = gt(a), o = gt(e), r = 0, i = o.length; i > r; r++)mt(o[r], s[r]); if (t) if (n) for (o = o || gt(e), s = s || gt(a), r = 0, i = o.length; i > r; r++)dt(o[r], s[r]); else dt(e, a); return s = gt(a, "script"), s.length > 0 && ht(s, !u && gt(e, "script")), a }, buildFragment: function (e, t, n, r) { var i, o, s, a, u, l, c = 0, f = e.length, p = t.createDocumentFragment(), h = []; for (; f > c; c++)if (i = e[c], i || 0 === i) if ("object" === x.type(i)) x.merge(h, i.nodeType ? [i] : i); else if (nt.test(i)) { o = o || p.appendChild(t.createElement("div")), s = (tt.exec(i) || ["", ""])[1].toLowerCase(), a = lt[s] || lt._default, o.innerHTML = a[1] + i.replace(et, "<$1></$2>") + a[2], l = a[0]; while (l--) o = o.firstChild; x.merge(h, o.childNodes), o = p.firstChild, o.textContent = "" } else h.push(t.createTextNode(i)); p.textContent = "", c = 0; while (i = h[c++]) if ((!r || -1 === x.inArray(i, r)) && (u = x.contains(i.ownerDocument, i), o = gt(p.appendChild(i), "script"), u && ht(o), n)) { l = 0; while (i = o[l++]) st.test(i.type || "") && n.push(i) } return p }, cleanData: function (e) { var t, n, r, i = e.length, o = 0, s = x.event.special; for (; i > o; o++) { if (n = e[o], x.acceptData(n) && (t = q.access(n))) for (r in t.events) s[r] ? x.event.remove(n, r) : x.removeEvent(n, r, t.handle); L.discard(n), q.discard(n) } }, _evalUrl: function (e) { return x.ajax({ url: e, type: "GET", dataType: "text", async: !1, global: !1, success: x.globalEval }) } }); function ct(e, t) { return x.nodeName(e, "table") && x.nodeName(1 === t.nodeType ? t : t.firstChild, "tr") ? e.getElementsByTagName("tbody")[0] || e.appendChild(e.ownerDocument.createElement("tbody")) : e } function ft(e) { return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e } function pt(e) { var t = at.exec(e.type); return t ? e.type = t[1] : e.removeAttribute("type"), e } function ht(e, t) { var n = e.length, r = 0; for (; n > r; r++)q.set(e[r], "globalEval", !t || q.get(t[r], "globalEval")) } function dt(e, t) { var n, r, i, o, s, a, u, l; if (1 === t.nodeType) { if (q.hasData(e) && (o = q.access(e), s = x.extend({}, o), l = o.events, q.set(t, s), l)) { delete s.handle, s.events = {}; for (i in l) for (n = 0, r = l[i].length; r > n; n++)x.event.add(t, i, l[i][n]) } L.hasData(e) && (a = L.access(e), u = x.extend({}, a), L.set(t, u)) } } function gt(e, t) { var n = e.getElementsByTagName ? e.getElementsByTagName(t || "*") : e.querySelectorAll ? e.querySelectorAll(t || "*") : []; return t === undefined || t && x.nodeName(e, t) ? x.merge([e], n) : n } function mt(e, t) { var n = t.nodeName.toLowerCase(); "input" === n && it.test(e.type) ? t.checked = e.checked : ("input" === n || "textarea" === n) && (t.defaultValue = e.defaultValue) } x.fn.extend({ wrapAll: function (e) { var t; return x.isFunction(e) ? this.each(function (t) { x(this).wrapAll(e.call(this, t)) }) : (this[0] && (t = x(e, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && t.insertBefore(this[0]), t.map(function () { var e = this; while (e.firstElementChild) e = e.firstElementChild; return e }).append(this)), this) }, wrapInner: function (e) { return x.isFunction(e) ? this.each(function (t) { x(this).wrapInner(e.call(this, t)) }) : this.each(function () { var t = x(this), n = t.contents(); n.length ? n.wrapAll(e) : t.append(e) }) }, wrap: function (e) { var t = x.isFunction(e); return this.each(function (n) { x(this).wrapAll(t ? e.call(this, n) : e) }) }, unwrap: function () { return this.parent().each(function () { x.nodeName(this, "body") || x(this).replaceWith(this.childNodes) }).end() } }); var yt, vt, xt = /^(none|table(?!-c[ea]).+)/, bt = /^margin/, wt = RegExp("^(" + b + ")(.*)$", "i"), Tt = RegExp("^(" + b + ")(?!px)[a-z%]+$", "i"), Ct = RegExp("^([+-])=(" + b + ")", "i"), kt = { BODY: "block" }, Nt = { position: "absolute", visibility: "hidden", display: "block" }, Et = { letterSpacing: 0, fontWeight: 400 }, St = ["Top", "Right", "Bottom", "Left"], jt = ["Webkit", "O", "Moz", "ms"]; function Dt(e, t) { if (t in e) return t; var n = t.charAt(0).toUpperCase() + t.slice(1), r = t, i = jt.length; while (i--) if (t = jt[i] + n, t in e) return t; return r } function At(e, t) { return e = t || e, "none" === x.css(e, "display") || !x.contains(e.ownerDocument, e) } function Lt(t) { return e.getComputedStyle(t, null) } function qt(e, t) { var n, r, i, o = [], s = 0, a = e.length; for (; a > s; s++)r = e[s], r.style && (o[s] = q.get(r, "olddisplay"), n = r.style.display, t ? (o[s] || "none" !== n || (r.style.display = ""), "" === r.style.display && At(r) && (o[s] = q.access(r, "olddisplay", Pt(r.nodeName)))) : o[s] || (i = At(r), (n && "none" !== n || !i) && q.set(r, "olddisplay", i ? n : x.css(r, "display")))); for (s = 0; a > s; s++)r = e[s], r.style && (t && "none" !== r.style.display && "" !== r.style.display || (r.style.display = t ? o[s] || "" : "none")); return e } x.fn.extend({ css: function (e, t) { return x.access(this, function (e, t, n) { var r, i, o = {}, s = 0; if (x.isArray(t)) { for (r = Lt(e), i = t.length; i > s; s++)o[t[s]] = x.css(e, t[s], !1, r); return o } return n !== undefined ? x.style(e, t, n) : x.css(e, t) }, e, t, arguments.length > 1) }, show: function () { return qt(this, !0) }, hide: function () { return qt(this) }, toggle: function (e) { var t = "boolean" == typeof e; return this.each(function () { (t ? e : At(this)) ? x(this).show() : x(this).hide() }) } }), x.extend({ cssHooks: { opacity: { get: function (e, t) { if (t) { var n = yt(e, "opacity"); return "" === n ? "1" : n } } } }, cssNumber: { columnCount: !0, fillOpacity: !0, fontWeight: !0, lineHeight: !0, opacity: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: { "float": "cssFloat" }, style: function (e, t, n, r) { if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) { var i, o, s, a = x.camelCase(t), u = e.style; return t = x.cssProps[a] || (x.cssProps[a] = Dt(u, a)), s = x.cssHooks[t] || x.cssHooks[a], n === undefined ? s && "get" in s && (i = s.get(e, !1, r)) !== undefined ? i : u[t] : (o = typeof n, "string" === o && (i = Ct.exec(n)) && (n = (i[1] + 1) * i[2] + parseFloat(x.css(e, t)), o = "number"), null == n || "number" === o && isNaN(n) || ("number" !== o || x.cssNumber[a] || (n += "px"), x.support.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (u[t] = "inherit"), s && "set" in s && (n = s.set(e, n, r)) === undefined || (u[t] = n)), undefined) } }, css: function (e, t, n, r) { var i, o, s, a = x.camelCase(t); return t = x.cssProps[a] || (x.cssProps[a] = Dt(e.style, a)), s = x.cssHooks[t] || x.cssHooks[a], s && "get" in s && (i = s.get(e, !0, n)), i === undefined && (i = yt(e, t, r)), "normal" === i && t in Et && (i = Et[t]), "" === n || n ? (o = parseFloat(i), n === !0 || x.isNumeric(o) ? o || 0 : i) : i } }), yt = function (e, t, n) { var r, i, o, s = n || Lt(e), a = s ? s.getPropertyValue(t) || s[t] : undefined, u = e.style; return s && ("" !== a || x.contains(e.ownerDocument, e) || (a = x.style(e, t)), Tt.test(a) && bt.test(t) && (r = u.width, i = u.minWidth, o = u.maxWidth, u.minWidth = u.maxWidth = u.width = a, a = s.width, u.width = r, u.minWidth = i, u.maxWidth = o)), a }; function Ht(e, t, n) { var r = wt.exec(t); return r ? Math.max(0, r[1] - (n || 0)) + (r[2] || "px") : t } function Ot(e, t, n, r, i) { var o = n === (r ? "border" : "content") ? 4 : "width" === t ? 1 : 0, s = 0; for (; 4 > o; o += 2)"margin" === n && (s += x.css(e, n + St[o], !0, i)), r ? ("content" === n && (s -= x.css(e, "padding" + St[o], !0, i)), "margin" !== n && (s -= x.css(e, "border" + St[o] + "Width", !0, i))) : (s += x.css(e, "padding" + St[o], !0, i), "padding" !== n && (s += x.css(e, "border" + St[o] + "Width", !0, i))); return s } function Ft(e, t, n) { var r = !0, i = "width" === t ? e.offsetWidth : e.offsetHeight, o = Lt(e), s = x.support.boxSizing && "border-box" === x.css(e, "boxSizing", !1, o); if (0 >= i || null == i) { if (i = yt(e, t, o), (0 > i || null == i) && (i = e.style[t]), Tt.test(i)) return i; r = s && (x.support.boxSizingReliable || i === e.style[t]), i = parseFloat(i) || 0 } return i + Ot(e, t, n || (s ? "border" : "content"), r, o) + "px" } function Pt(e) { var t = o, n = kt[e]; return n || (n = Rt(e, t), "none" !== n && n || (vt = (vt || x("<iframe frameborder='0' width='0' height='0'/>").css("cssText", "display:block !important")).appendTo(t.documentElement), t = (vt[0].contentWindow || vt[0].contentDocument).document, t.write("<!doctype html><html><body>"), t.close(), n = Rt(e, t), vt.detach()), kt[e] = n), n } function Rt(e, t) { var n = x(t.createElement(e)).appendTo(t.body), r = x.css(n[0], "display"); return n.remove(), r } x.each(["height", "width"], function (e, t) { x.cssHooks[t] = { get: function (e, n, r) { return n ? 0 === e.offsetWidth && xt.test(x.css(e, "display")) ? x.swap(e, Nt, function () { return Ft(e, t, r) }) : Ft(e, t, r) : undefined }, set: function (e, n, r) { var i = r && Lt(e); return Ht(e, n, r ? Ot(e, t, r, x.support.boxSizing && "border-box" === x.css(e, "boxSizing", !1, i), i) : 0) } } }), x(function () { x.support.reliableMarginRight || (x.cssHooks.marginRight = { get: function (e, t) { return t ? x.swap(e, { display: "inline-block" }, yt, [e, "marginRight"]) : undefined } }), !x.support.pixelPosition && x.fn.position && x.each(["top", "left"], function (e, t) { x.cssHooks[t] = { get: function (e, n) { return n ? (n = yt(e, t), Tt.test(n) ? x(e).position()[t] + "px" : n) : undefined } } }) }), x.expr && x.expr.filters && (x.expr.filters.hidden = function (e) { return 0 >= e.offsetWidth && 0 >= e.offsetHeight }, x.expr.filters.visible = function (e) { return !x.expr.filters.hidden(e) }), x.each({ margin: "", padding: "", border: "Width" }, function (e, t) { x.cssHooks[e + t] = { expand: function (n) { var r = 0, i = {}, o = "string" == typeof n ? n.split(" ") : [n]; for (; 4 > r; r++)i[e + St[r] + t] = o[r] || o[r - 2] || o[0]; return i } }, bt.test(e) || (x.cssHooks[e + t].set = Ht) }); var Mt = /%20/g, Wt = /\[\]$/, $t = /\r?\n/g, Bt = /^(?:submit|button|image|reset|file)$/i, It = /^(?:input|select|textarea|keygen)/i; x.fn.extend({ serialize: function () { return x.param(this.serializeArray()) }, serializeArray: function () { return this.map(function () { var e = x.prop(this, "elements"); return e ? x.makeArray(e) : this }).filter(function () { var e = this.type; return this.name && !x(this).is(":disabled") && It.test(this.nodeName) && !Bt.test(e) && (this.checked || !it.test(e)) }).map(function (e, t) { var n = x(this).val(); return null == n ? null : x.isArray(n) ? x.map(n, function (e) { return { name: t.name, value: e.replace($t, "\r\n") } }) : { name: t.name, value: n.replace($t, "\r\n") } }).get() } }), x.param = function (e, t) { var n, r = [], i = function (e, t) { t = x.isFunction(t) ? t() : null == t ? "" : t, r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t) }; if (t === undefined && (t = x.ajaxSettings && x.ajaxSettings.traditional), x.isArray(e) || e.jquery && !x.isPlainObject(e)) x.each(e, function () { i(this.name, this.value) }); else for (n in e) zt(n, e[n], t, i); return r.join("&").replace(Mt, "+") }; function zt(e, t, n, r) { var i; if (x.isArray(t)) x.each(t, function (t, i) { n || Wt.test(e) ? r(e, i) : zt(e + "[" + ("object" == typeof i ? t : "") + "]", i, n, r) }); else if (n || "object" !== x.type(t)) r(e, t); else for (i in t) zt(e + "[" + i + "]", t[i], n, r) } x.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (e, t) { x.fn[t] = function (e, n) { return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t) } }), x.fn.extend({ hover: function (e, t) { return this.mouseenter(e).mouseleave(t || e) }, bind: function (e, t, n) { return this.on(e, null, t, n) }, unbind: function (e, t) { return this.off(e, null, t) }, delegate: function (e, t, n, r) { return this.on(t, e, n, r) }, undelegate: function (e, t, n) { return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n) } }); var _t, Xt, Ut = x.now(), Yt = /\?/, Vt = /#.*$/, Gt = /([?&])_=[^&]*/, Jt = /^(.*?):[ \t]*([^\r\n]*)$/gm, Qt = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Kt = /^(?:GET|HEAD)$/, Zt = /^\/\//, en = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, tn = x.fn.load, nn = {}, rn = {}, on = "*/".concat("*"); try { Xt = i.href } catch (sn) { Xt = o.createElement("a"), Xt.href = "", Xt = Xt.href } _t = en.exec(Xt.toLowerCase()) || []; function an(e) {
        return function (t, n) {
            "string" != typeof t && (n = t, t = "*"); var r, i = 0, o = t.toLowerCase().match(w) || [];
            if (x.isFunction(n)) while (r = o[i++]) "+" === r[0] ? (r = r.slice(1) || "*", (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n)
        }
    } function un(e, t, n, r) { var i = {}, o = e === rn; function s(a) { var u; return i[a] = !0, x.each(e[a] || [], function (e, a) { var l = a(t, n, r); return "string" != typeof l || o || i[l] ? o ? !(u = l) : undefined : (t.dataTypes.unshift(l), s(l), !1) }), u } return s(t.dataTypes[0]) || !i["*"] && s("*") } function ln(e, t) { var n, r, i = x.ajaxSettings.flatOptions || {}; for (n in t) t[n] !== undefined && ((i[n] ? e : r || (r = {}))[n] = t[n]); return r && x.extend(!0, e, r), e } x.fn.load = function (e, t, n) { if ("string" != typeof e && tn) return tn.apply(this, arguments); var r, i, o, s = this, a = e.indexOf(" "); return a >= 0 && (r = e.slice(a), e = e.slice(0, a)), x.isFunction(t) ? (n = t, t = undefined) : t && "object" == typeof t && (i = "POST"), s.length > 0 && x.ajax({ url: e, type: i, dataType: "html", data: t }).done(function (e) { o = arguments, s.html(r ? x("<div>").append(x.parseHTML(e)).find(r) : e) }).complete(n && function (e, t) { s.each(n, o || [e.responseText, t, e]) }), this }, x.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) { x.fn[t] = function (e) { return this.on(t, e) } }), x.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: Xt, type: "GET", isLocal: Qt.test(_t[1]), global: !0, processData: !0, async: !0, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": on, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /xml/, html: /html/, json: /json/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": !0, "text json": x.parseJSON, "text xml": x.parseXML }, flatOptions: { url: !0, context: !0 } }, ajaxSetup: function (e, t) { return t ? ln(ln(e, x.ajaxSettings), t) : ln(x.ajaxSettings, e) }, ajaxPrefilter: an(nn), ajaxTransport: an(rn), ajax: function (e, t) { "object" == typeof e && (t = e, e = undefined), t = t || {}; var n, r, i, o, s, a, u, l, c = x.ajaxSetup({}, t), f = c.context || c, p = c.context && (f.nodeType || f.jquery) ? x(f) : x.event, h = x.Deferred(), d = x.Callbacks("once memory"), g = c.statusCode || {}, m = {}, y = {}, v = 0, b = "canceled", T = { readyState: 0, getResponseHeader: function (e) { var t; if (2 === v) { if (!o) { o = {}; while (t = Jt.exec(i)) o[t[1].toLowerCase()] = t[2] } t = o[e.toLowerCase()] } return null == t ? null : t }, getAllResponseHeaders: function () { return 2 === v ? i : null }, setRequestHeader: function (e, t) { var n = e.toLowerCase(); return v || (e = y[n] = y[n] || e, m[e] = t), this }, overrideMimeType: function (e) { return v || (c.mimeType = e), this }, statusCode: function (e) { var t; if (e) if (2 > v) for (t in e) g[t] = [g[t], e[t]]; else T.always(e[T.status]); return this }, abort: function (e) { var t = e || b; return n && n.abort(t), k(0, t), this } }; if (h.promise(T).complete = d.add, T.success = T.done, T.error = T.fail, c.url = ((e || c.url || Xt) + "").replace(Vt, "").replace(Zt, _t[1] + "//"), c.type = t.method || t.type || c.method || c.type, c.dataTypes = x.trim(c.dataType || "*").toLowerCase().match(w) || [""], null == c.crossDomain && (a = en.exec(c.url.toLowerCase()), c.crossDomain = !(!a || a[1] === _t[1] && a[2] === _t[2] && (a[3] || ("http:" === a[1] ? "80" : "443")) === (_t[3] || ("http:" === _t[1] ? "80" : "443")))), c.data && c.processData && "string" != typeof c.data && (c.data = x.param(c.data, c.traditional)), un(nn, c, t, T), 2 === v) return T; u = c.global, u && 0 === x.active++ && x.event.trigger("ajaxStart"), c.type = c.type.toUpperCase(), c.hasContent = !Kt.test(c.type), r = c.url, c.hasContent || (c.data && (r = c.url += (Yt.test(r) ? "&" : "?") + c.data, delete c.data), c.cache === !1 && (c.url = Gt.test(r) ? r.replace(Gt, "$1_=" + Ut++) : r + (Yt.test(r) ? "&" : "?") + "_=" + Ut++)), c.ifModified && (x.lastModified[r] && T.setRequestHeader("If-Modified-Since", x.lastModified[r]), x.etag[r] && T.setRequestHeader("If-None-Match", x.etag[r])), (c.data && c.hasContent && c.contentType !== !1 || t.contentType) && T.setRequestHeader("Content-Type", c.contentType), T.setRequestHeader("Accept", c.dataTypes[0] && c.accepts[c.dataTypes[0]] ? c.accepts[c.dataTypes[0]] + ("*" !== c.dataTypes[0] ? ", " + on + "; q=0.01" : "") : c.accepts["*"]); for (l in c.headers) T.setRequestHeader(l, c.headers[l]); if (c.beforeSend && (c.beforeSend.call(f, T, c) === !1 || 2 === v)) return T.abort(); b = "abort"; for (l in { success: 1, error: 1, complete: 1 }) T[l](c[l]); if (n = un(rn, c, t, T)) { T.readyState = 1, u && p.trigger("ajaxSend", [T, c]), c.async && c.timeout > 0 && (s = setTimeout(function () { T.abort("timeout") }, c.timeout)); try { v = 1, n.send(m, k) } catch (C) { if (!(2 > v)) throw C; k(-1, C) } } else k(-1, "No Transport"); function k(e, t, o, a) { var l, m, y, b, w, C = t; 2 !== v && (v = 2, s && clearTimeout(s), n = undefined, i = a || "", T.readyState = e > 0 ? 4 : 0, l = e >= 200 && 300 > e || 304 === e, o && (b = cn(c, T, o)), b = fn(c, b, T, l), l ? (c.ifModified && (w = T.getResponseHeader("Last-Modified"), w && (x.lastModified[r] = w), w = T.getResponseHeader("etag"), w && (x.etag[r] = w)), 204 === e ? C = "nocontent" : 304 === e ? C = "notmodified" : (C = b.state, m = b.data, y = b.error, l = !y)) : (y = C, (e || !C) && (C = "error", 0 > e && (e = 0))), T.status = e, T.statusText = (t || C) + "", l ? h.resolveWith(f, [m, C, T]) : h.rejectWith(f, [T, C, y]), T.statusCode(g), g = undefined, u && p.trigger(l ? "ajaxSuccess" : "ajaxError", [T, c, l ? m : y]), d.fireWith(f, [T, C]), u && (p.trigger("ajaxComplete", [T, c]), --x.active || x.event.trigger("ajaxStop"))) } return T }, getJSON: function (e, t, n) { return x.get(e, t, n, "json") }, getScript: function (e, t) { return x.get(e, undefined, t, "script") } }), x.each(["get", "post"], function (e, t) { x[t] = function (e, n, r, i) { return x.isFunction(n) && (i = i || r, r = n, n = undefined), x.ajax({ url: e, type: t, dataType: i, data: n, success: r }) } }); function cn(e, t, n) { var r, i, o, s, a = e.contents, u = e.dataTypes; while ("*" === u[0]) u.shift(), r === undefined && (r = e.mimeType || t.getResponseHeader("Content-Type")); if (r) for (i in a) if (a[i] && a[i].test(r)) { u.unshift(i); break } if (u[0] in n) o = u[0]; else { for (i in n) { if (!u[0] || e.converters[i + " " + u[0]]) { o = i; break } s || (s = i) } o = o || s } return o ? (o !== u[0] && u.unshift(o), n[o]) : undefined } function fn(e, t, n, r) { var i, o, s, a, u, l = {}, c = e.dataTypes.slice(); if (c[1]) for (s in e.converters) l[s.toLowerCase()] = e.converters[s]; o = c.shift(); while (o) if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift()) if ("*" === o) o = u; else if ("*" !== u && u !== o) { if (s = l[u + " " + o] || l["* " + o], !s) for (i in l) if (a = i.split(" "), a[1] === o && (s = l[u + " " + a[0]] || l["* " + a[0]])) { s === !0 ? s = l[i] : l[i] !== !0 && (o = a[0], c.unshift(a[1])); break } if (s !== !0) if (s && e["throws"]) t = s(t); else try { t = s(t) } catch (f) { return { state: "parsererror", error: s ? f : "No conversion from " + u + " to " + o } } } return { state: "success", data: t } } x.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /(?:java|ecma)script/ }, converters: { "text script": function (e) { return x.globalEval(e), e } } }), x.ajaxPrefilter("script", function (e) { e.cache === undefined && (e.cache = !1), e.crossDomain && (e.type = "GET") }), x.ajaxTransport("script", function (e) { if (e.crossDomain) { var t, n; return { send: function (r, i) { t = x("<script>").prop({ async: !0, charset: e.scriptCharset, src: e.url }).on("load error", n = function (e) { t.remove(), n = null, e && i("error" === e.type ? 404 : 200, e.type) }), o.head.appendChild(t[0]) }, abort: function () { n && n() } } } }); var pn = [], hn = /(=)\?(?=&|$)|\?\?/; x.ajaxSetup({ jsonp: "callback", jsonpCallback: function () { var e = pn.pop() || x.expando + "_" + Ut++; return this[e] = !0, e } }), x.ajaxPrefilter("json jsonp", function (t, n, r) { var i, o, s, a = t.jsonp !== !1 && (hn.test(t.url) ? "url" : "string" == typeof t.data && !(t.contentType || "").indexOf("application/x-www-form-urlencoded") && hn.test(t.data) && "data"); return a || "jsonp" === t.dataTypes[0] ? (i = t.jsonpCallback = x.isFunction(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback, a ? t[a] = t[a].replace(hn, "$1" + i) : t.jsonp !== !1 && (t.url += (Yt.test(t.url) ? "&" : "?") + t.jsonp + "=" + i), t.converters["script json"] = function () { return s || x.error(i + " was not called"), s[0] }, t.dataTypes[0] = "json", o = e[i], e[i] = function () { s = arguments }, r.always(function () { e[i] = o, t[i] && (t.jsonpCallback = n.jsonpCallback, pn.push(i)), s && x.isFunction(o) && o(s[0]), s = o = undefined }), "script") : undefined }), x.ajaxSettings.xhr = function () { try { return new XMLHttpRequest } catch (e) { } }; var dn = x.ajaxSettings.xhr(), gn = { 0: 200, 1223: 204 }, mn = 0, yn = {}; e.ActiveXObject && x(e).on("unload", function () { for (var e in yn) yn[e](); yn = undefined }), x.support.cors = !!dn && "withCredentials" in dn, x.support.ajax = dn = !!dn, x.ajaxTransport(function (e) { var t; return x.support.cors || dn && !e.crossDomain ? { send: function (n, r) { var i, o, s = e.xhr(); if (s.open(e.type, e.url, e.async, e.username, e.password), e.xhrFields) for (i in e.xhrFields) s[i] = e.xhrFields[i]; e.mimeType && s.overrideMimeType && s.overrideMimeType(e.mimeType), e.crossDomain || n["X-Requested-With"] || (n["X-Requested-With"] = "XMLHttpRequest"); for (i in n) s.setRequestHeader(i, n[i]); t = function (e) { return function () { t && (delete yn[o], t = s.onload = s.onerror = null, "abort" === e ? s.abort() : "error" === e ? r(s.status || 404, s.statusText) : r(gn[s.status] || s.status, s.statusText, "string" == typeof s.responseText ? { text: s.responseText } : undefined, s.getAllResponseHeaders())) } }, s.onload = t(), s.onerror = t("error"), t = yn[o = mn++] = t("abort"), s.send(e.hasContent && e.data || null) }, abort: function () { t && t() } } : undefined }); var vn, xn, bn = /^(?:toggle|show|hide)$/, wn = RegExp("^(?:([+-])=|)(" + b + ")([a-z%]*)$", "i"), Tn = /queueHooks$/, Cn = [Dn], kn = { "*": [function (e, t) { var n, r, i = this.createTween(e, t), o = wn.exec(t), s = i.cur(), a = +s || 0, u = 1, l = 20; if (o) { if (n = +o[2], r = o[3] || (x.cssNumber[e] ? "" : "px"), "px" !== r && a) { a = x.css(i.elem, e, !0) || n || 1; do u = u || ".5", a /= u, x.style(i.elem, e, a + r); while (u !== (u = i.cur() / s) && 1 !== u && --l) } i.unit = r, i.start = a, i.end = o[1] ? a + (o[1] + 1) * n : n } return i }] }; function Nn() { return setTimeout(function () { vn = undefined }), vn = x.now() } function En(e, t) { x.each(t, function (t, n) { var r = (kn[t] || []).concat(kn["*"]), i = 0, o = r.length; for (; o > i; i++)if (r[i].call(e, t, n)) return }) } function Sn(e, t, n) { var r, i, o = 0, s = Cn.length, a = x.Deferred().always(function () { delete u.elem }), u = function () { if (i) return !1; var t = vn || Nn(), n = Math.max(0, l.startTime + l.duration - t), r = n / l.duration || 0, o = 1 - r, s = 0, u = l.tweens.length; for (; u > s; s++)l.tweens[s].run(o); return a.notifyWith(e, [l, o, n]), 1 > o && u ? n : (a.resolveWith(e, [l]), !1) }, l = a.promise({ elem: e, props: x.extend({}, t), opts: x.extend(!0, { specialEasing: {} }, n), originalProperties: t, originalOptions: n, startTime: vn || Nn(), duration: n.duration, tweens: [], createTween: function (t, n) { var r = x.Tween(e, l.opts, t, n, l.opts.specialEasing[t] || l.opts.easing); return l.tweens.push(r), r }, stop: function (t) { var n = 0, r = t ? l.tweens.length : 0; if (i) return this; for (i = !0; r > n; n++)l.tweens[n].run(1); return t ? a.resolveWith(e, [l, t]) : a.rejectWith(e, [l, t]), this } }), c = l.props; for (jn(c, l.opts.specialEasing); s > o; o++)if (r = Cn[o].call(l, e, c, l.opts)) return r; return En(l, c), x.isFunction(l.opts.start) && l.opts.start.call(e, l), x.fx.timer(x.extend(u, { elem: e, anim: l, queue: l.opts.queue })), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always) } function jn(e, t) { var n, r, i, o, s; for (n in e) if (r = x.camelCase(n), i = t[r], o = e[n], x.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), s = x.cssHooks[r], s && "expand" in s) { o = s.expand(o), delete e[r]; for (n in o) n in e || (e[n] = o[n], t[n] = i) } else t[r] = i } x.Animation = x.extend(Sn, { tweener: function (e, t) { x.isFunction(e) ? (t = e, e = ["*"]) : e = e.split(" "); var n, r = 0, i = e.length; for (; i > r; r++)n = e[r], kn[n] = kn[n] || [], kn[n].unshift(t) }, prefilter: function (e, t) { t ? Cn.unshift(e) : Cn.push(e) } }); function Dn(e, t, n) { var r, i, o, s, a, u, l, c, f, p = this, h = e.style, d = {}, g = [], m = e.nodeType && At(e); n.queue || (c = x._queueHooks(e, "fx"), null == c.unqueued && (c.unqueued = 0, f = c.empty.fire, c.empty.fire = function () { c.unqueued || f() }), c.unqueued++, p.always(function () { p.always(function () { c.unqueued--, x.queue(e, "fx").length || c.empty.fire() }) })), 1 === e.nodeType && ("height" in t || "width" in t) && (n.overflow = [h.overflow, h.overflowX, h.overflowY], "inline" === x.css(e, "display") && "none" === x.css(e, "float") && (h.display = "inline-block")), n.overflow && (h.overflow = "hidden", p.always(function () { h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2] })), a = q.get(e, "fxshow"); for (r in t) if (o = t[r], bn.exec(o)) { if (delete t[r], u = u || "toggle" === o, o === (m ? "hide" : "show")) { if ("show" !== o || a === undefined || a[r] === undefined) continue; m = !0 } g.push(r) } if (s = g.length) { a = q.get(e, "fxshow") || q.access(e, "fxshow", {}), "hidden" in a && (m = a.hidden), u && (a.hidden = !m), m ? x(e).show() : p.done(function () { x(e).hide() }), p.done(function () { var t; q.remove(e, "fxshow"); for (t in d) x.style(e, t, d[t]) }); for (r = 0; s > r; r++)i = g[r], l = p.createTween(i, m ? a[i] : 0), d[i] = a[i] || x.style(e, i), i in a || (a[i] = l.start, m && (l.end = l.start, l.start = "width" === i || "height" === i ? 1 : 0)) } } function An(e, t, n, r, i) { return new An.prototype.init(e, t, n, r, i) } x.Tween = An, An.prototype = { constructor: An, init: function (e, t, n, r, i, o) { this.elem = e, this.prop = n, this.easing = i || "swing", this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (x.cssNumber[n] ? "" : "px") }, cur: function () { var e = An.propHooks[this.prop]; return e && e.get ? e.get(this) : An.propHooks._default.get(this) }, run: function (e) { var t, n = An.propHooks[this.prop]; return this.pos = t = this.options.duration ? x.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : An.propHooks._default.set(this), this } }, An.prototype.init.prototype = An.prototype, An.propHooks = { _default: { get: function (e) { var t; return null == e.elem[e.prop] || e.elem.style && null != e.elem.style[e.prop] ? (t = x.css(e.elem, e.prop, ""), t && "auto" !== t ? t : 0) : e.elem[e.prop] }, set: function (e) { x.fx.step[e.prop] ? x.fx.step[e.prop](e) : e.elem.style && (null != e.elem.style[x.cssProps[e.prop]] || x.cssHooks[e.prop]) ? x.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now } } }, An.propHooks.scrollTop = An.propHooks.scrollLeft = { set: function (e) { e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now) } }, x.each(["toggle", "show", "hide"], function (e, t) { var n = x.fn[t]; x.fn[t] = function (e, r, i) { return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(Ln(t, !0), e, r, i) } }), x.fn.extend({ fadeTo: function (e, t, n, r) { return this.filter(At).css("opacity", 0).show().end().animate({ opacity: t }, e, n, r) }, animate: function (e, t, n, r) { var i = x.isEmptyObject(e), o = x.speed(t, n, r), s = function () { var t = Sn(this, x.extend({}, e), o); s.finish = function () { t.stop(!0) }, (i || q.get(this, "finish")) && t.stop(!0) }; return s.finish = s, i || o.queue === !1 ? this.each(s) : this.queue(o.queue, s) }, stop: function (e, t, n) { var r = function (e) { var t = e.stop; delete e.stop, t(n) }; return "string" != typeof e && (n = t, t = e, e = undefined), t && e !== !1 && this.queue(e || "fx", []), this.each(function () { var t = !0, i = null != e && e + "queueHooks", o = x.timers, s = q.get(this); if (i) s[i] && s[i].stop && r(s[i]); else for (i in s) s[i] && s[i].stop && Tn.test(i) && r(s[i]); for (i = o.length; i--;)o[i].elem !== this || null != e && o[i].queue !== e || (o[i].anim.stop(n), t = !1, o.splice(i, 1)); (t || !n) && x.dequeue(this, e) }) }, finish: function (e) { return e !== !1 && (e = e || "fx"), this.each(function () { var t, n = q.get(this), r = n[e + "queue"], i = n[e + "queueHooks"], o = x.timers, s = r ? r.length : 0; for (n.finish = !0, x.queue(this, e, []), i && i.cur && i.cur.finish && i.cur.finish.call(this), t = o.length; t--;)o[t].elem === this && o[t].queue === e && (o[t].anim.stop(!0), o.splice(t, 1)); for (t = 0; s > t; t++)r[t] && r[t].finish && r[t].finish.call(this); delete n.finish }) } }); function Ln(e, t) { var n, r = { height: e }, i = 0; for (t = t ? 1 : 0; 4 > i; i += 2 - t)n = St[i], r["margin" + n] = r["padding" + n] = e; return t && (r.opacity = r.width = e), r } x.each({ slideDown: Ln("show"), slideUp: Ln("hide"), slideToggle: Ln("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (e, t) { x.fn[e] = function (e, n, r) { return this.animate(t, e, n, r) } }), x.speed = function (e, t, n) { var r = e && "object" == typeof e ? x.extend({}, e) : { complete: n || !n && t || x.isFunction(e) && e, duration: e, easing: n && t || t && !x.isFunction(t) && t }; return r.duration = x.fx.off ? 0 : "number" == typeof r.duration ? r.duration : r.duration in x.fx.speeds ? x.fx.speeds[r.duration] : x.fx.speeds._default, (null == r.queue || r.queue === !0) && (r.queue = "fx"), r.old = r.complete, r.complete = function () { x.isFunction(r.old) && r.old.call(this), r.queue && x.dequeue(this, r.queue) }, r }, x.easing = { linear: function (e) { return e }, swing: function (e) { return .5 - Math.cos(e * Math.PI) / 2 } }, x.timers = [], x.fx = An.prototype.init, x.fx.tick = function () { var e, t = x.timers, n = 0; for (vn = x.now(); t.length > n; n++)e = t[n], e() || t[n] !== e || t.splice(n--, 1); t.length || x.fx.stop(), vn = undefined }, x.fx.timer = function (e) { e() && x.timers.push(e) && x.fx.start() }, x.fx.interval = 13, x.fx.start = function () { xn || (xn = setInterval(x.fx.tick, x.fx.interval)) }, x.fx.stop = function () { clearInterval(xn), xn = null }, x.fx.speeds = { slow: 600, fast: 200, _default: 400 }, x.fx.step = {}, x.expr && x.expr.filters && (x.expr.filters.animated = function (e) { return x.grep(x.timers, function (t) { return e === t.elem }).length }), x.fn.offset = function (e) { if (arguments.length) return e === undefined ? this : this.each(function (t) { x.offset.setOffset(this, e, t) }); var t, n, i = this[0], o = { top: 0, left: 0 }, s = i && i.ownerDocument; if (s) return t = s.documentElement, x.contains(t, i) ? (typeof i.getBoundingClientRect !== r && (o = i.getBoundingClientRect()), n = qn(s), { top: o.top + n.pageYOffset - t.clientTop, left: o.left + n.pageXOffset - t.clientLeft }) : o }, x.offset = { setOffset: function (e, t, n) { var r, i, o, s, a, u, l, c = x.css(e, "position"), f = x(e), p = {}; "static" === c && (e.style.position = "relative"), a = f.offset(), o = x.css(e, "top"), u = x.css(e, "left"), l = ("absolute" === c || "fixed" === c) && (o + u).indexOf("auto") > -1, l ? (r = f.position(), s = r.top, i = r.left) : (s = parseFloat(o) || 0, i = parseFloat(u) || 0), x.isFunction(t) && (t = t.call(e, n, a)), null != t.top && (p.top = t.top - a.top + s), null != t.left && (p.left = t.left - a.left + i), "using" in t ? t.using.call(e, p) : f.css(p) } }, x.fn.extend({ position: function () { if (this[0]) { var e, t, n = this[0], r = { top: 0, left: 0 }; return "fixed" === x.css(n, "position") ? t = n.getBoundingClientRect() : (e = this.offsetParent(), t = this.offset(), x.nodeName(e[0], "html") || (r = e.offset()), r.top += x.css(e[0], "borderTopWidth", !0), r.left += x.css(e[0], "borderLeftWidth", !0)), { top: t.top - r.top - x.css(n, "marginTop", !0), left: t.left - r.left - x.css(n, "marginLeft", !0) } } }, offsetParent: function () { return this.map(function () { var e = this.offsetParent || s; while (e && !x.nodeName(e, "html") && "static" === x.css(e, "position")) e = e.offsetParent; return e || s }) } }), x.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (t, n) { var r = "pageYOffset" === n; x.fn[t] = function (i) { return x.access(this, function (t, i, o) { var s = qn(t); return o === undefined ? s ? s[n] : t[i] : (s ? s.scrollTo(r ? e.pageXOffset : o, r ? o : e.pageYOffset) : t[i] = o, undefined) }, t, i, arguments.length, null) } }); function qn(e) { return x.isWindow(e) ? e : 9 === e.nodeType && e.defaultView } x.each({ Height: "height", Width: "width" }, function (e, t) { x.each({ padding: "inner" + e, content: t, "": "outer" + e }, function (n, r) { x.fn[r] = function (r, i) { var o = arguments.length && (n || "boolean" != typeof r), s = n || (r === !0 || i === !0 ? "margin" : "border"); return x.access(this, function (t, n, r) { var i; return x.isWindow(t) ? t.document.documentElement["client" + e] : 9 === t.nodeType ? (i = t.documentElement, Math.max(t.body["scroll" + e], i["scroll" + e], t.body["offset" + e], i["offset" + e], i["client" + e])) : r === undefined ? x.css(t, n, s) : x.style(t, n, r, s) }, t, o ? r : undefined, o, null) } }) }), x.fn.size = function () { return this.length }, x.fn.andSelf = x.fn.addBack, "object" == typeof module && "object" == typeof module.exports ? module.exports = x : "function" == typeof define && define.amd && define("jquery", [], function () { return x }), "object" == typeof e && "object" == typeof e.document && (e.jQuery = e.$ = x)
})(window);// jQuery Mask Plugin v1.13.4
// github.com/igorescobar/jQuery-Mask-Plugin
(function (b) { "function" === typeof define && define.amd ? define(["jquery"], b) : "object" === typeof exports ? module.exports = b(require("jquery")) : b(jQuery || Zepto) })(function (b) {
    var y = function (a, c, d) {
        a = b(a); var g = this, k = a.val(), l; c = "function" === typeof c ? c(a.val(), void 0, a, d) : c; var e = {
            invalid: [], getCaret: function () {
                try {
                    var q, b = 0, e = a.get(0), f = document.selection, c = e.selectionStart; if (f && -1 === navigator.appVersion.indexOf("MSIE 10")) q = f.createRange(), q.moveStart("character", a.is("input") ? -a.val().length : -a.text().length),
                        b = q.text.length; else if (c || "0" === c) b = c; return b
                } catch (d) { }
            }, setCaret: function (q) { try { if (a.is(":focus")) { var b, c = a.get(0); c.setSelectionRange ? c.setSelectionRange(q, q) : c.createTextRange && (b = c.createTextRange(), b.collapse(!0), b.moveEnd("character", q), b.moveStart("character", q), b.select()) } } catch (f) { } }, events: function () {
                a.on("input.mask keyup.mask", e.behaviour).on("paste.mask drop.mask", function () { setTimeout(function () { a.keydown().keyup() }, 100) }).on("change.mask", function () { a.data("changed", !0) }).on("blur.mask",
                    function () { k === a.val() || a.data("changed") || a.triggerHandler("change"); a.data("changed", !1) }).on("blur.mask", function () { k = a.val() }).on("focus.mask", function (a) { !0 === d.selectOnFocus && b(a.target).select() }).on("focusout.mask", function () { d.clearIfNotMatch && !l.test(e.val()) && e.val("") })
            }, getRegexMask: function () {
                for (var a = [], b, e, f, d, h = 0; h < c.length; h++)(b = g.translation[c.charAt(h)]) ? (e = b.pattern.toString().replace(/.{1}$|^.{1}/g, ""), f = b.optional, (b = b.recursive) ? (a.push(c.charAt(h)), d = {
                    digit: c.charAt(h),
                    pattern: e
                }) : a.push(f || b ? e + "?" : e)) : a.push(c.charAt(h).replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")); a = a.join(""); d && (a = a.replace(new RegExp("(" + d.digit + "(.*" + d.digit + ")?)"), "($1)?").replace(new RegExp(d.digit, "g"), d.pattern)); return new RegExp(a)
            }, destroyEvents: function () { a.off("input keydown keyup paste drop blur focusout ".split(" ").join(".mask ")) }, val: function (b) { var c = a.is("input") ? "val" : "text"; if (0 < arguments.length) { if (a[c]() !== b) a[c](b); c = a } else c = a[c](); return c }, getMCharsBeforeCount: function (a,
                b) { for (var e = 0, f = 0, d = c.length; f < d && f < a; f++)g.translation[c.charAt(f)] || (a = b ? a + 1 : a, e++); return e }, caretPos: function (a, b, d, f) { return g.translation[c.charAt(Math.min(a - 1, c.length - 1))] ? Math.min(a + d - b - f, d) : e.caretPos(a + 1, b, d, f) }, behaviour: function (a) {
                    a = a || window.event; e.invalid = []; var c = a.keyCode || a.which; if (-1 === b.inArray(c, g.byPassKeys)) {
                        var d = e.getCaret(), f = e.val().length, n = d < f, h = e.getMasked(), k = h.length, m = e.getMCharsBeforeCount(k - 1) - e.getMCharsBeforeCount(f - 1); e.val(h); !n || 65 === c && a.ctrlKey || (8 !==
                            c && 46 !== c && (d = e.caretPos(d, f, k, m)), e.setCaret(d)); return e.callbacks(a)
                    }
                }, getMasked: function (a) {
                    var b = [], k = e.val(), f = 0, n = c.length, h = 0, l = k.length, m = 1, p = "push", u = -1, t, w; d.reverse ? (p = "unshift", m = -1, t = 0, f = n - 1, h = l - 1, w = function () { return -1 < f && -1 < h }) : (t = n - 1, w = function () { return f < n && h < l }); for (; w();) {
                        var x = c.charAt(f), v = k.charAt(h), r = g.translation[x]; if (r) v.match(r.pattern) ? (b[p](v), r.recursive && (-1 === u ? u = f : f === t && (f = u - m), t === u && (f -= m)), f += m) : r.optional ? (f += m, h -= m) : r.fallback ? (b[p](r.fallback), f += m, h -= m) : e.invalid.push({
                            p: h,
                            v: v, e: r.pattern
                        }), h += m; else { if (!a) b[p](x); v === x && (h += m); f += m }
                    } a = c.charAt(t); n !== l + 1 || g.translation[a] || b.push(a); return b.join("")
                }, callbacks: function (b) { var g = e.val(), l = g !== k, f = [g, b, a, d], n = function (a, b, c) { "function" === typeof d[a] && b && d[a].apply(this, c) }; n("onChange", !0 === l, f); n("onKeyPress", !0 === l, f); n("onComplete", g.length === c.length, f); n("onInvalid", 0 < e.invalid.length, [g, b, a, e.invalid, d]) }
        }; g.mask = c; g.options = d; g.remove = function () {
            var b = e.getCaret(); e.destroyEvents(); e.val(g.getCleanVal()); e.setCaret(b -
                e.getMCharsBeforeCount(b)); return a
        }; g.getCleanVal = function () { return e.getMasked(!0) }; g.init = function (c) {
            c = c || !1; d = d || {}; g.byPassKeys = b.jMaskGlobals.byPassKeys; g.translation = b.jMaskGlobals.translation; g.translation = b.extend({}, g.translation, d.translation); g = b.extend(!0, {}, g, d); l = e.getRegexMask(); !1 === c ? (d.placeholder && a.attr("placeholder", d.placeholder), b("input").length && !1 === "oninput" in b("input")[0] && "on" === a.attr("autocomplete") && a.attr("autocomplete", "off"), e.destroyEvents(), e.events(), c = e.getCaret(),
                e.val(e.getMasked()), e.setCaret(c + e.getMCharsBeforeCount(c, !0))) : (e.events(), e.val(e.getMasked()))
        }; g.init(!a.is("input"))
    }; b.maskWatchers = {}; var A = function () { var a = b(this), c = {}, d = a.attr("data-mask"); a.attr("data-mask-reverse") && (c.reverse = !0); a.attr("data-mask-clearifnotmatch") && (c.clearIfNotMatch = !0); "true" === a.attr("data-mask-selectonfocus") && (c.selectOnFocus = !0); if (z(a, d, c)) return a.data("mask", new y(this, d, c)) }, z = function (a, c, d) {
        d = d || {}; var g = b(a).data("mask"), k = JSON.stringify; a = b(a).val() ||
            b(a).text(); try { return "function" === typeof c && (c = c(a)), "object" !== typeof g || k(g.options) !== k(d) || g.mask !== c } catch (l) { }
    }; b.fn.mask = function (a, c) { c = c || {}; var d = this.selector, g = b.jMaskGlobals, k = b.jMaskGlobals.watchInterval, l = function () { if (z(this, a, c)) return b(this).data("mask", new y(this, a, c)) }; b(this).each(l); d && "" !== d && g.watchInputs && (clearInterval(b.maskWatchers[d]), b.maskWatchers[d] = setInterval(function () { b(document).find(d).each(l) }, k)); return this }; b.fn.unmask = function () {
        clearInterval(b.maskWatchers[this.selector]);
        delete b.maskWatchers[this.selector]; return this.each(function () { var a = b(this).data("mask"); a && a.remove().removeData("mask") })
    }; b.fn.cleanVal = function () { return this.data("mask").getCleanVal() }; b.applyDataMask = function (a) { a = a || b.jMaskGlobals.maskElements; (a instanceof b ? a : b(a)).filter(b.jMaskGlobals.dataMaskAttr).each(A) }; var p = {
        maskElements: "input,td,span,div", dataMaskAttr: "*[data-mask]", dataMask: !0, watchInterval: 300, watchInputs: !0, watchDataMask: !1, byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91], translation: {
            0: { pattern: /\d/ },
            9: { pattern: /\d/, optional: !0 }, "#": { pattern: /\d/, recursive: !0 }, A: { pattern: /[a-zA-Z0-9]/ }, S: { pattern: /[a-zA-Z]/ }
        }
    }; b.jMaskGlobals = b.jMaskGlobals || {}; p = b.jMaskGlobals = b.extend(!0, {}, p, b.jMaskGlobals); p.dataMask && b.applyDataMask(); setInterval(function () { b.jMaskGlobals.watchDataMask && b.applyDataMask() }, p.watchInterval)
});
'use strict'
var validator = (function () {
    /**
    Regular expressions for vlidations
    **/
    var patterns = {
        zip: {
            US: /(^\d{5}$)|(^\d{5}-\d{4}$)/,
            default: /^[a-zA-Z0-9-\s]+$/
        },
        email: {
            first: /^[A-Za-z0-9\+]+([-._][A-Za-z0-9\+]+)*@([A-Za-z0-9\+]+(-[A-Za-z0-9\+]+)*\.)+[A-Za-z]{2,24}$/,
            last: /^(?=.{1,64}@.{4,64}$)(?=.{6,100}$).*/
        },
        phone: /^(?:(?:\(?(?:00|\+)([1-4]\d\d|[1-9]\d?)\)?)?[\-\.\ \\\/]?)?((?:\(?\d{1,}\)?[\-\.\ \\\/]?){0,})(?:[\-\.\ \\\/]?(?:#|ext\.?|extension|x)[\-\.\ \\\/]?(\d+))?$/i,
        cardNumber: {
            visa: /^4[0-9]{12}(?:[0-9]{3})?$/,
            master: /^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$/,
            maestro: /^(5018|5020|5038|5612|5893|6304|6390|6759|676[1-3]|0604)/,
            amex: /^3[47][0-9]{13}$/,
            diners: /^3(?:0[0-5]|[68][0-9])[0-9]{11}$/,
            discover: /^6(?:011|5[0-9]{2})[0-9]{12}$/,
            jcb: /^(?:2131|1800|35\d{3})\d{11}$/,
            solo: /^(6334|6767)/,
            laser: /^(6304|670[69]|6771)/
        },
        cardNumberStarting: {
            visa: /^4[0-9]/,
            master: /^((5[1-5])|(2[2-7][0-9]))/,
            maestro: /^(5018|5020|5038|5612|5893|6304|6390|6759|676[1-3]|0604)/,
            amex: /^3[47]/,
            discover: /^6(?:011|5[0-9]{2})/,
            jcb: /^(?:21|180|35)/,
            diners: /^3(?:0[0-5]|[68][0-9])/,
            solo: /^(6334|6767)/,
            laser: /^(6304|670[69]|6771)/
        }
    };
    return {
        isValidZip: function (zip, country, pattern) {
            if (typeof pattern !== 'undefined') {
                return pattern.test(zip);
            }
            if (!patterns.zip.hasOwnProperty(country)) {
                return patterns.zip.default.test(zip);
            }
            return patterns.zip[country].test(zip);
        },
        /**
         * Email Address validator
         **/
        isValidEmail: function (email) {
            return patterns.email.first.test(email) && patterns.email.last.test(email);
        },
        isValidPhone: function (phone) {
            return patterns.phone.test(phone);
        },
        /**
         * Card Number Validator
         * Support Visa, Master, Amex, Diner, Discover, Jcb
         * @param cardNumber: A string of Card Number without any masking
         * @param cardType: A string of Card Type
         * @return boolean
         **/
        isValidCardNumber: function (cardNumber, cardType) {
            if (typeof cardNumber !== 'string' && !(cardNumber instanceof String)) {
                return false;
            }
            if (typeof cardType !== 'string' && !(cardType instanceof String)) {
                return false;
            }
            if (!patterns.cardNumber.hasOwnProperty(cardType)) {
                for (var field in patterns.cardNumber) {
                    if (patterns.cardNumber[field].test(cardNumber)) {
                        return true;
                    }
                }
                return false;
            }
            return patterns.cardNumber[cardType].test(cardNumber);
        },
        /**
         * CVV Validator
         * Support Visa, Master, Amex, Diner, Discover, Jcb
         **/
        isValidCvv: function (phone) {
            return /^\d{3,4}$/.test(phone);
        },
        /**
         * Card Length Provider
         * Support Visa, Master, Amex, Diner, Discover, Jcb
         * @param cardType: A string of Card Type
         **/
        getCardNumberMaxLength: function (cardType) {
            var maxLengths = {
                visa: 16,
                master: 16,
                amex: 15,
                diners: 14,
                discover: 16,
                jcb: 16
            };
            if (!maxLengths.hasOwnProperty(cardType)) {
                return 16;
            }
            return maxLengths[cardType];
        },
        /**
         * Card Type Detector
         * Support Visa, Master, Amex, Diner, Discover, Jcb
         * @param cardNumber: A string of Card Number without any masking
         * @return string if match or boolean false
         **/
        getCardType: function (cardNumber) {
            for (var cardType in patterns.cardNumberStarting) {
                if (patterns.cardNumberStarting[cardType].test(cardNumber)) {
                    return cardType;
                }
            }
            return false;
        }
    };
}()); var cb = (function ($) {
    'use strict'
    $(window).keydown(function (e) {
        if (e.which === 27 && $('#error_handler_overlay').length) {
            $('#error_handler_overlay').remove();
        }
    });
    $(document).off('click', '#error_handler_overlay_close');
    $(document).on('click', '#error_handler_overlay_close', function (event) {
        event.preventDefault ? event.preventDefault() : (event.returnValue = false);
        $('#error_handler_overlay').remove();
    });
    var ignoreExitPop = true;
    var beforeFormSubmitEvents = [];
    var currentFormSubmitEvents = [];
    var validClass = app_config.valid_class;
    var errorClass = app_config.error_class;
    var loadingClass = app_config.loading_class;
    var formActions = {
        'prospect': 'prospect',
        'checkout': 'checkout',
        'downsell1': 'downsell',
        'downsell2': 'downsell',
        'upsell': 'upsell'
    };
    var prospectFormFields = {
        firstName: {},
        lastName: {},
        email: {
            validators: [
                ['isValidEmail']
            ],
        },
        phone: {
            validators: [
                ['isValidPhone']
            ],
        },
        shippingAddress1: {},
        shippingAddress2: {},
        shippingZip: {
            validators: [
                ['isValidZip', 'shippingCountry']
            ],
        },
        shippingCity: {},
        shippingState: {},
        shippingCountry: {}
    };
    var checkoutFormFields = {
        billingSameAsShipping: {},
        billingFirstName: {
            condition: ['billingSameAsShipping', 'no']
        },
        billingLastName: {
            condition: ['billingSameAsShipping', 'no']
        },
        billingAddress1: {
            condition: ['billingSameAsShipping', 'no']
        },
        billingAddress2: {
            condition: ['billingSameAsShipping', 'no']
        },
        billingZip: {
            condition: ['billingSameAsShipping', 'no'],
            validators: [
                ['isValidZip', 'billingCountry']
            ],
        },
        billingCity: {
            condition: ['billingSameAsShipping', 'no']
        },
        billingState: {
            condition: ['billingSameAsShipping', 'no']
        },
        billingCountry: {
            condition: ['billingSameAsShipping', 'no']
        },
        cardType: {
            aliases: ['creditCardType']
        },
        cardNumber: {
            aliases: ['creditCardNumber'],
            validators: [
                ['isValidCardNumber', 'cardType']
            ]
        },
        cardExpiryMonth: {
            aliases: ['expmonth']
        },
        cardExpiryYear: {
            aliases: ['expyear']
        },
        cvv: {
            aliases: ['CVV'],
            validators: [
                ['isValidCvv']
            ]
        }
    };
    var prospectForm = {
        data: {},
        fields: prospectFormFields,
        errors: {}
    };
    var checkoutForm = {
        data: {},
        fields: checkoutFormFields,
        errors: {}
    };
    var downsellForm = {
        data: {},
        fields: $.extend(true, prospectFormFields, checkoutFormFields),
        errors: {}
    };
    var formElementSelectors = {
        firstName: '[name=firstName], [name$=FirstName]',
        lastName: '[name=lastName], [name$=LastName]',
        address1: '[name=address1], [name$=Address1]',
        address2: '[name=address2], [name$=Address2]',
        country: '[name=country], [name$=Country]',
        state: '[name=state], [name$=State]',
        city: '[name=city], [name$=City]',
        zip: '[name=zip], [name$=Zip]',
        email: '[name=email], [name$=Email]',
        phone: '[name=phone], [name$=Phone]',
        cardNumber: '[name=cardNumber], [name$=CardNumber]',
        cardType: '[name=cardType], [name$=CardType]',
        cardExpiryMonth: '[name=cardExpiryMonth], [name=expmonth]',
        cardExpiryYear: '[name=cardExpiryYear], [name=expyear]',
        cvv: '[name=cvv], [name=CVV]'
    };

    function validateForm(formElement, formType) {
        var form = loadForm(formElement, formType);
        for (var fieldName in form.data) {
            var inputElementName = form.data[fieldName].name;
            if (formElement.find('[name="' + inputElementName + '"]').length === 0) {
                continue;
            }
            var inputElement = formElement.find('[name="' + inputElementName + '"]');
            if (!inputElement.hasClass('required')) {
                continue;
            }
            if (inputElement.data('ignore') && inputElement.has(errorClass)) {
                form.errors[inputElementName] = inputElement.data('error-message');
                if (typeof form.errors[inputElementName] === 'undefined') {
                    form.errors[inputElementName] = 'Enter a valid ' + inputElementName.toUpperCase();
                }
                continue;
            }
            performRegularValidation(fieldName, form, inputElement);
            if (form.errors.hasOwnProperty(fieldName)) {
                continue;
            }
            if (!form.fields[fieldName].hasOwnProperty('validators')) {
                continue;
            }
            for (var ii in form.fields[fieldName].validators) {
                var str = JSON.stringify(form.fields[fieldName].validators[ii]);
                var validationMeta = JSON.parse(str);
                performValidation(fieldName, validationMeta, form, inputElement);
            }
        }
        return JSON.parse(JSON.stringify(form.errors));
    };

    function performValidation(fieldName, validationMeta, form, inputElement) {
        var inputValue = form.data[fieldName].value;
        var validationFunction = validationMeta.shift();
        switch (validationFunction) {
            case 'isValidEmail':
                validateEmail(fieldName, inputElement, form);
                break;
            case 'isValidPhone':
                valdatePhone(fieldName, inputElement, form);
                break;
            case 'isValidZip':
                valdateZip(fieldName, inputElement, form, validationMeta);
                break;
            case 'isValidCardNumber':
                valdateCardNumber(fieldName, inputElement, form, validationMeta);
                break;
            case 'isValidCvv':
                valdateCvv(fieldName, inputElement, form, validationMeta);
                break;
        }
    };

    function valdateCvv(fieldName, inputElement, form, validationMeta) {
        var inputElementValue = form.data[fieldName].value;
        var inputElementName = form.data[fieldName].name;
        var value = inputElement.val();
        form.errors[inputElementName] = inputElement.data('error-message');
        inputElement.removeClass(validClass).addClass(errorClass);
        if (typeof form.errors[inputElementName] === 'undefined') {
            form.errors[inputElementName] = 'Enter a valid ' + inputElementName.toUpperCase();
        }
        if (!validator.isValidCvv(value)) {
            return;
        }
        delete form.errors[inputElementName];
        inputElement.removeClass(errorClass).addClass(validClass);
    };

    function valdateCardNumber(fieldName, inputElement, form, validationMeta) {
        var inputElementValue = form.data[fieldName].value;
        var inputElementName = form.data[fieldName].name;
        var cardNumber = inputElement.val().trim().replace(/[\s-]/g, '');
        form.errors[inputElementName] = inputElement.data('error-message');
        inputElement.removeClass(validClass).addClass(errorClass);
        if (typeof form.errors[inputElementName] === 'undefined') {
            form.errors[inputElementName] = 'Enter a valid ' + inputElementName.toUpperCase();
        }
        var cardType = form.data[validationMeta[0]].value;
        var isTestCard = false;
        if (typeof app_config.allowed_tc !== 'undefined' && app_config.allowed_tc.length) {

            var allowed_tc = cb.decryptAllowedTestCard(app_config.allowed_tc);

            $(allowed_tc).each(function (key, value) {
                var testcardNumber = value.toString().split('|')[0];
                if (cardNumber === testcardNumber) {
                    isTestCard = true;
                    return true;
                }
            });
        }
        if (isTestCard === false && !validator.isValidCardNumber(cardNumber, cardType)) {
            return;
        }
        delete form.errors[inputElementName];
        inputElement.removeClass(errorClass).addClass(validClass);
    };

    function valdateZip(fieldName, inputElement, form, validationMeta) {
        var inputElementValue = form.data[fieldName].value;
        var inputElementName = form.data[fieldName].name;
        var value = inputElement.val().trim();
        form.errors[inputElementName] = inputElement.data('error-message');
        inputElement.removeClass(validClass).addClass(errorClass);
        if (typeof form.errors[inputElementName] === 'undefined') {
            form.errors[inputElementName] = 'Enter a valid ' + inputElementName.toUpperCase();
        }
        var country = form.data[validationMeta[0]].value;
        if (!validator.isValidZip(value, country)) {
            return;
        }
        delete form.errors[inputElementName];
        inputElement.removeClass(errorClass).addClass(validClass);
    };

    function valdatePhone(fieldName, inputElement, form) {
        var inputElementValue = form.data[fieldName].value;
        var inputElementName = form.data[fieldName].name;
        var value = inputElement.val().trim();
        form.errors[inputElementName] = inputElement.data('error-message');
        inputElement.removeClass(validClass).addClass(errorClass);
        if (typeof form.errors[inputElementName] === 'undefined') {
            form.errors[inputElementName] = 'Enter a valid ' + inputElementName.toUpperCase();
        }
        if (!validator.isValidPhone(value)) {
            return;
        }
        delete form.errors[inputElementName];
        inputElement.removeClass(errorClass).addClass(validClass);
    };

    function validateEmail(fieldName, inputElement, form) {
        var inputElementValue = form.data[fieldName].value;
        var inputElementName = form.data[fieldName].name;
        var value = inputElement.val().trim();
        form.errors[inputElementName] = inputElement.data('error-message');
        inputElement.removeClass(validClass).addClass(errorClass);
        if (typeof form.errors[inputElementName] === 'undefined') {
            form.errors[inputElementName] = 'Enter a valid ' + inputElementName.toUpperCase();
        }
        if (!validator.isValidEmail(value)) {
            return;
        }
        delete form.errors[inputElementName];
        inputElement.removeClass(errorClass).addClass(validClass);
    };

    function performRegularValidation(fieldName, form, inputElement) {
        var inputElementValue = form.data[fieldName].value;
        var inputElementName = form.data[fieldName].name;
        var value = inputElement.val().trim();
        form.errors[inputElementName] = inputElement.data('error-message');
        inputElement.removeClass(validClass).addClass(errorClass);
        if (typeof form.errors[inputElementName] === 'undefined') {
            form.errors[inputElementName] = 'Enter a valid ' + inputElementName.toUpperCase();
        }
        if (value === '') {
            return;
        }
        var minLength = 1,
            maxLength = 100;
        if (typeof inputElement.data('min-length') !== 'undefined') {
            minLength = parseInt(inputElement.data('min-length'));
        }
        if (typeof inputElement.data('max-length') !== 'undefined') {
            maxLength = parseInt(inputElement.data('max-length'));
        }
        if (value.length < minLength || value.length > maxLength) {
            return;
        }
        delete form.errors[inputElementName];
        inputElement.removeClass(errorClass).addClass(validClass);
    };

    function loadForm(formElement, formType) {
        formElement.find('input, select').each(function () {
            $(this).removeClass('cb-loaded-field');
        });
        var form = {};
        switch (formType) {
            case 'prospect':
                form = $.extend(true, {}, prospectForm);
                break;
            case 'checkout':
                form = $.extend(true, {}, checkoutForm);
                break;
            case 'downsell':
                form = $.extend(true, {}, downsellForm);
                break;
            default:
                form = {
                    fields: {},
                    data: {},
                    errors: {}
                };
        }
        for (var fieldName in form.fields) {
            if (form.fields[fieldName].hasOwnProperty('condition')) {
                var condition = form.fields[fieldName].condition;
                if (!form.data.hasOwnProperty(condition[0])) {
                    loadInputData(condition[0], form, formElement);
                }
                if (form.data[condition[0]].value.toLowerCase() !== condition[1]) {
                    continue;
                }
            }
            if (!form.data.hasOwnProperty(fieldName)) {
                loadInputData(fieldName, form, formElement);
            }
            if (form.data[fieldName].hasOwnProperty('name')) {
                formElement.find('[name="' + form.data[fieldName].name + '"]').addClass('cb-loaded-field');
            }
        }
        formElement.find('input, select').not('[type=hidden], [type=submit]').each(function () {
            if (!$(this).hasClass('cb-loaded-field') && $(this).attr('name')) {
                form.fields[$(this).attr('name')] = {};
                form.data[$(this).attr('name')] = {
                    value: $(this).val(),
                    name: $(this).attr('name')
                };
            }
        });
        formElement.find('input, select').each(function () {
            $(this).removeClass('cb-loaded-field');
        });
        return form;
    };

    function loadInputData(fieldName, form, formElement) {
        form.data[fieldName] = {
            value: '',
            name: fieldName
        };
        if (formElement.find('[name=' + fieldName + ']').length) {
            if (formElement.find('[name="' + fieldName + '"]').attr('type') !== 'radio') {
                form.data[fieldName] = {
                    value: formElement.find('[name="' + fieldName + '"]').val(),
                    name: fieldName
                };
                return;
            }
            form.data[fieldName] = {
                value: formElement.find('[name="' + fieldName + '"]:checked').val(),
                name: fieldName
            };
            return;
        }
        if (!form.fields[fieldName].hasOwnProperty('aliases')) {
            form.data[fieldName] = {
                value: '',
                name: fieldName
            };
            return;
        }
        for (var ii in form.fields[fieldName].aliases) {
            var name = form.fields[fieldName].aliases[ii];
            if (formElement.find('[name="' + name + '"]').length) {
                if (formElement.find('[name="' + name + '"]').attr('type') !== 'radio') {
                    form.data[fieldName] = {
                        value: formElement.find('[name="' + name + '"]').val(),
                        name: name
                    };
                    break;
                }
                form.data[fieldName] = {
                    value: formElement.find('[name="' + name + '"]:checked').val(),
                    name: name
                };
                break;
            }
        }
    }

    function getUnmaskedCardNumber(cardNumber) {
        if (typeof cardNumber !== 'string' && !(cardNumber instanceof String)) {
            return cardNumber;
        }
        return cardNumber.replace(/[\s-]/g, '');
    }

    function errorHandler(errors, formElement) {
        if (app_config.enable_csrf_token) {
            refreshToken();
        }

        if (app_config.show_validation_errors === 'hide') {
            return;
        }
        if (
            app_config.show_validation_errors === 'inline' &&
            typeof formElement !== 'undefined'
        ) {
            $(formElement).find('input, select').next('.cb-inline-error').remove();
            for (var elementName in errors) {
                var inputElement = formElement.find("[name='" + elementName + "']");
                inputElement.after(
                    '<span class="cb-inline-error">' + errors[elementName] + '</span>'
                );
            }
            return;
        }
        if ($('#error_handler_overlay').length) {
            $('#error_handler_overlay').remove();
        }
        $('body').append(getUI(errors));
        $('#error_handler_overlay').fadeIn(0);
    }

    function getUI(errors) {
        var li = '';
        $.each(errors, function (key, value) {
            li += '<li>' + value + '</li>';
        });
        var html = '';
        html += '<div id="error_handler_overlay">';
        html += '<div class="error_handler_body">';
        html += '<a href="javascript:void(0);" id="error_handler_overlay_close">X</a>';
        html += '<ul>' + li + '</ul></div>';
        html += '</div>';
        return html;
    }

    function submitForm(formElement, formOptions) {
        for (var ii = 0, len = cb.currentFormSubmitEvents.length; ii < len; ii++) {
            var callable = cb.currentFormSubmitEvents[ii];
            cb.currentFormSubmitEvents.splice(ii, 1);
            callable(formElement, formOptions);
            return;
        }
        var actionType = formActions[formOptions.type];
        if ($('input[name=altered_action]').length) {
            actionType = $('input[name=altered_action]').val();
        }
        /**
         * ------------------------
         * Send Test Flag to server
         * ------------------------
         */
        var testFlag = location.search.match('test_flag') ? '&test_flag=on' : '';
        var cbtoken = app_config.cbtoken.length ? ('&cbtoken=' + app_config.cbtoken) : '';
        $.ajax({
            url: app_config.offer_path + AJAX_PATH + actionType,
            method: 'post',
            data: formElement.serialize() + testFlag + cbtoken,
            beforeSend: function () {
                $(formOptions.ajaxLoader.div).fadeIn(formOptions.ajaxLoader.timeInOut);
                if ($('.cart-submit-btn').length > 0) {
                    $('.cart-submit-btn').addClass('cart-loader-btn');
                }
            },
            success: function (data) {
                if (typeof data !== 'object') {
                    data = JSON.parse(data);
                }
                performAfterResponseTasks(data, formElement, formOptions);
            },
            complete: function () { }
        });
    };

    function performAfterResponseTasks(data, formElement, formOptions) {
        if (data.success && 'is_html' in data && data.is_html == true) {
            window.onbeforeunload = null;
            writeToDocument(data.html);
            return;
        }
        if (data.success === true) {
            if (app_config.enable_csrf_token) {
                refreshToken();
            }

            if (typeof formOptions.onSuccess === 'function') {
                formOptions.onSuccess(data);
            } else {
                redirectTo(data.redirect, data);
                cb.ignoreExitPop = true;
            }
        } else if (data.hasOwnProperty('prepaidRedirect')) {
            redirectTo(data.prepaidRedirect, data);
        } else if (data.hasOwnProperty('Redirect')) {
            redirectTo(data.Redirect, data);
        } else if (data.hasOwnProperty('errors')) {
            renderAdditionalPixels(data);
            if (typeof formOptions.onError === 'function') {
                formOptions.onError(data);
            } else {
                try {
                    if ($('.cart-submit-btn').length > 0) {
                        $('.cart-submit-btn').removeClass('cart-loader-btn');
                    }
                    if (!$(formOptions.responseLoader.div).length) {
                        updateFormElement(data);
                        cb.errorHandler(data.errors);
                    } else {
                        var liHtml = '';
                        $.each(data.errors, function (key, value) {
                            liHtml += '<li>' + value + '</li>';
                        });
                        var html = '<ul>' + liHtml + '</ul></div>';
                        $(formOptions.responseLoader.div).html(html).fadeIn(formOptions.responseLoader.timeInOut);
                    }
                } catch (err) {
                    cb.errorHandler([app_lang.error_messages.common_error]);
                    if ($('.cart-submit-btn').length > 0) {
                        $('.cart-submit-btn').removeClass('cart-loader-btn');
                    }
                }
            }
            if ($(formOptions.ajaxLoader.div).length) {
                $(formOptions.ajaxLoader.div).fadeOut(formOptions.ajaxLoader.timeInOut);
            } else {
                $('body').find('#loaderImage').remove();
            }
            formElement.find('[type=submit]').removeAttr('disabled');
        }
    }

    function updateFormElement(data) {
        if (data.is_form_element && data.form_element_name) {
            var elem = $('[name=' + data.form_element_name + ']');
            if (elem.length) {
                elem.addClass(errorClass).removeClass(validClass);
            }
        }
    }

    function renderAdditionalPixels(data) {
        if (typeof (data.submissionPixels) != 'undefined') {
            if (typeof (data.submissionPixels.top) != 'undefined' && data.submissionPixels.top) {
                $('body').prepend(data.submissionPixels.top);
            }
            if (typeof (data.submissionPixels.bottom) != 'undefined' && data.submissionPixels.bottom) {
                $('body').append(data.submissionPixels.bottom);
            }
            if (typeof (data.submissionPixels.head) != 'undefined' && data.submissionPixels.head) {
                $('head').append(data.submissionPixels.head);
            }
        }
        if (typeof (data.declinePixels) != 'undefined') {
            if (typeof (data.declinePixels.top) != 'undefined' && data.declinePixels.top) {
                $('body').prepend(data.declinePixels.top);
            }
            if (typeof (data.declinePixels.bottom) != 'undefined' && data.declinePixels.bottom) {
                $('body').append(data.declinePixels.bottom);
            }
            if (typeof (data.declinePixels.head) != 'undefined' && data.declinePixels.head) {
                $('head').append(data.declinePixels.head);
            }
        }
    }

    function isInternetExplorer() {
        var ua = navigator.userAgent.toLowerCase();
        return (ua.indexOf('msie') != -1) ? parseInt(ua.split('msie')[1]) : false;
    };

    function redirectTo($redirect, data) {
        window.onbeforeunload = null;
        /**
         * Cookies should be disabled if get cbtoken length
         * Let's handle the refirectuon
         */
        var onlyRedirect = data.onlyRedirect ? data.onlyRedirect : false;
        if (app_config.cbtoken.length && !onlyRedirect) {
            var _form = $('<form />').attr({
                id: 'redirect-to',
                method: 'POST',
                action: $redirect
            });
            var _input = $('<input />').attr({
                name: 'cbtoken',
                value: app_config.cbtoken
            });
            _form.append(_input);
            _form.appendTo('body');
            _form.submit();
        } else if (isInternetExplorer()) {
            window.location.replace($redirect);
        } else {
            if (typeof (data.skipQueryParams) === 'undefined') {
                history.pushState({}, null, data.redirect);
            }
            window.location.assign($redirect);
        }
    };

    function writeToDocument(data) {
        var newDoc = document.open("text/html", "replace");
        newDoc.write(data);
        newDoc.close();
    };

    function decryptAllowedTestCard(chipherText, keyString) {
        var chipherTextParts = chipherText.split('');
        var plainTextPartsLen = Math.floor(chipherTextParts.length / 2);
        var flag = 0;
        var plainTextParts = [];
        for (var ii = 0; ii < plainTextPartsLen; ii++) {
            if (flag) {
                plainTextParts.push(chipherTextParts[ii]);
            } else {
                plainTextParts.push(chipherTextParts[plainTextPartsLen + ii]);
            }
            flag = 1 - flag;
        }
        return JSON.parse(plainTextParts.join(''));
    };

    function urlErrorHandler() {
        var queries = window.location.search.replace('?', '').split('&');
        for (var ii = 0, len = queries.length; ii < len; ii++) {
            if (queries[ii].match(/^error=/)) {
                cb.errorHandler({
                    'urlError': (queries[ii].replace('error=', '')).replace(/\+/g, ' ')
                });
            }
        }
    };

    function refreshToken() {
        $.ajax({
            url: app_config.offer_path + AJAX_PATH + 'refresh-csrf-token',
            method: 'post',
            success: function (data) {
                $("[name='csrf_token']").val(data.data)
            }
        });
    }


    return {
        formElementSelectors: formElementSelectors,
        formActions: formActions,
        validateForm: validateForm,
        submitForm: submitForm,
        validClass: validClass,
        errorClass: errorClass,
        loadingClass: loadingClass,
        ignoreExitPop: ignoreExitPop,
        errorHandler: errorHandler,
        beforeFormSubmitEvents: beforeFormSubmitEvents,
        currentFormSubmitEvents: currentFormSubmitEvents,
        decryptAllowedTestCard: decryptAllowedTestCard,
        urlErrorHandler: urlErrorHandler,
        renderAdditionalPixels: renderAdditionalPixels
    };
})(jQuery); (function ($) {
    'use strict';
    $.fn.formHandler = function (_selfOptions) {
        /**
         * -------------------------------------------------------------
         * Check the existence of the element before binding any events
         * on its childrens.
         * -------------------------------------------------------------
         */
        if (!this.length) {
            return false;
        }
        $(this).attr('novalidate', 'novalidate');
        /**
         * ------------------------------------------------
         * The error modal is set to true by default.
         * ------------------------------------------------
         */
        var defaults = {
            errorModal: true,
            autoFillFormElement: false,
            countryDropdown: 'Select Country',
            ajaxLoader: {
                div: '',
                timeInOut: 0
            },
            responseLoader: {
                div: '',
                timeInOut: 0
            }
        };
        _selfOptions = $.extend({}, defaults, _selfOptions);
        /**
         * Make _self usable throughout.
         */
        var _self = $(this);
        // checkCCMasked();
        /**
         * ------------------------------------
         * Chrome Autofill issue PATCH
         * ------------------------------------
         */
        _self.find('input[name=shippingState]').change(function (e) {
            $('body').data({
                chromeAutofilled: $(this).val()
            });
            getStates('shippingState', 'shippingCountry');
        });

        if (_selfOptions.autoFillFormElement) {
            var _copyToForm = $('form[name=' + _selfOptions.autoFillFormElement + ']');
            _self.find('input[type=text]').on('keyup', function () {
                var elem = $(this).attr('name');
                _copyToForm.find('input[name=' + elem + ']').val($(this).val());
            });
            _self.find('textarea').on('keyup', function () {
                var elem = $(this).attr('name');
                _copyToForm.find('textarea[name=' + elem + ']').val($(this).val());
            });
        }

        _self.on('focus', 'input, select', function () {
            if (app_config.show_validation_errors === 'inline') {
                $(this).next('.cb-inline-error').remove();
            }
        });

        _self.on('blur', 'input, select', function () {
            if (!$(this).hasClass('required')) {
                return;
            }
            performRegularBlurEvent($(this));
        });

        _self.on('change', 'input, select', function () {
            if (!$(this).hasClass('required')) {
                return;
            }
            performRegularBlurEvent($(this));
        });


        $(document).on('change', 'select[name$=Country]', function () {
            if ($("[name=email]").length && $("[name=creditCardNumber]").length) {
                var cName = $(this).attr('name');
                if (cName == 'shippingCountry') {
                    cb.formElementSelectors["country"] = "[name=" + cName + "]";
                    cb.formElementSelectors["zip"] = "[name=shippingZip]";
                }
                else {
                    cb.formElementSelectors["country"] = "[name=" + cName + "]";
                    cb.formElementSelectors["zip"] = "[name=billingZip]";
                }
            }
        });


        _self.find(cb.formElementSelectors.zip).blur(function () {
            if (!$(this).hasClass('required')) {
                return;
            }
            if ($(this).attr('data-ignore')) {
                return;
            }
            $(this).removeClass(cb.errorClass).removeClass(cb.validClass);
            if (!$(this).val().length) {
                return;
            }
            var country = _self.find(cb.formElementSelectors.country).val();
            if (typeof country === 'undefined') {
                country = 'default';
            }
            if (validator.isValidZip($(this).val(), country)) {
                $(this).addClass(cb.validClass);
                return;
            }
            $(this).addClass(cb.errorClass);
        });

        _self.find(cb.formElementSelectors.email).blur(function () {
            if (!$(this).hasClass('required')) {
                return;
            }
            $(this).removeClass(cb.errorClass).removeClass(cb.validClass);
            if (!$(this).val().length) {
                return;
            }
            if (validator.isValidEmail($(this).val())) {
                $(this).addClass(cb.validClass);
                return;
            }
            $(this).removeClass(cb.validClass).addClass(cb.errorClass);
        });

        _self.find(cb.formElementSelectors.phone).blur(function () {
            if (!$(this).hasClass('required')) {
                return;
            }
            $(this).removeClass(cb.errorClass).removeClass(cb.validClass);
            if (!$(this).val().length) {
                return;
            }
            performRegularBlurEvent($(this));
            if ($(this).hasClass(cb.errorClass)) {
                return;
            }
            if (validator.isValidPhone($(this).val())) {
                $(this).addClass(cb.validClass);
                return;
            }
            $(this).removeClass(cb.validClass).addClass(cb.errorClass);
        });

        _self.find(cb.formElementSelectors.cardNumber).blur(function (e) {
            if (!$(this).hasClass('required')) {
                return;
            }
            $(this).removeClass(cb.errorClass).removeClass(cb.validClass);
            var cardNumberElement = _self.find(cb.formElementSelectors.cardNumber);
            var cardType = _self.find(cb.formElementSelectors.cardType).val();
            var cardNumber = cardNumberElement.val();
            if (!cardNumber.length) {
                return;
            }

            var unmaskedCardNumber = cardNumber.trim().replace(/[\s-]/g, '');

            if (typeof app_config.allowed_tc !== 'undefined' && app_config.allowed_tc.length) {

                var allowed_tc = cb.decryptAllowedTestCard(app_config.allowed_tc);
                var isTestCard = false;
                $(allowed_tc).each(function (k, v) {
                    var testCardNumber = v.toString().split('|')[0];
                    if (unmaskedCardNumber === testCardNumber) {
                        isTestCard = true;
                        return true;
                    }
                });
                if (isTestCard) {
                    cardNumberElement.removeClass(cb.errorClass).addClass(cb.validClass);
                    return true;
                }
            }
            cardNumberElement.removeClass(cb.validClass).addClass(cb.errorClass);
            if (!validator.isValidCardNumber(unmaskedCardNumber, cardType)) {
                return;
            }
            if (!cardType.length) {
                return;
            }
            cardNumberElement.removeClass(cb.errorClass).addClass(cb.validClass);
        });

        _self.find(cb.formElementSelectors.cvv).blur(function () {
            if (!$(this).hasClass('required')) {
                return;
            }
            $(this).removeClass(cb.errorClass).removeClass(cb.validClass);
            if (!$(this).val().length) {
                return;
            }
            performRegularBlurEvent($(this));
            if ($(this).hasClass(cb.errorClass)) {
                return;
            }
            if (validator.isValidCvv($(this).val())) {
                $(this).addClass(cb.validClass);
                return;
            }
            $(this).removeClass(cb.validClass).addClass(cb.errorClass);
        });
        _self.find(cb.formElementSelectors.cvv).keyup(function () {
            $(this).val($(this).val().replace(/[^\d]/g, ''));
        });

        function performRegularBlurEvent(element) {
            element.removeClass(cb.errorClass).removeClass(cb.validClass);
            if (!element.val().length) {
                return;
            }
            element.addClass(cb.errorClass);
            var value = element.val().trim();
            if (value === '') {
                return;
            }
            var minLength = 1, maxLength = 100;
            if (typeof element.data('min-length') !== 'undefined') {
                minLength = parseInt(element.data('min-length'));
            }
            if (typeof element.data('max-length') !== 'undefined') {
                maxLength = parseInt(element.data('max-length'));
            }
            if (value.length < minLength || value.length > maxLength) {
                return;
            }
            element.removeClass(cb.errorClass).addClass(cb.validClass);
        }

        if (_selfOptions.type !== 'undefined' && _selfOptions.type != 'checkout') {
            getCountries('shippingCountry', 'shippingState');
            _self.find('select[name=shippingCountry]').change(function () {
                if ($(this).data('oldValue') == $(this).val()) {
                    return;
                }
                $(this).data({
                    oldValue: $(this).val()
                });
                getStates('shippingState', 'shippingCountry');
            });
        }

        _self.find('input[name=creditCardNumber]').keyup(function (e) {
            $(this).val($(this).val().toString().replace(/[^0-9\s-]/g, ''));
        });

        _self.find(cb.formElementSelectors.cardNumber).change(function (e) {
            $(this).trigger('keydown').trigger('keypress').trigger('keyup');
        });

        _self.find('input[name=creditCardNumber]').keyup(guessCardType);
        _self.find('select[name=creditCardType]').change(function (e) {
            /**
             * Handle validation differently if user selects PayPal
             */
            var fields = ['creditCardNumber', 'expmonth', 'expyear', 'CVV'];
            var cardType = $(this).val();
            calculateCvvMaxlength(cardType);
            $.each(fields, function (index, field) {
                if (cardType == 'paypal' || cardType == 'COD' || cardType == 'payu' || cardType == 'sezzle' || cardType == 'affirm' || cardType == 'klarna' || cardType == 'offline' || cardType == 'afterpay' || cardType == 'external' || cardType == 'ccbill' || cardType == 'applePay') {
                    $('[name=' + field + ']').removeClass('required').closest('p, div').hide();
                    callSquare('hide');
                    callSepa('hide');
                    callDirectDebit('hide');
                } else if (cardType == 'sepa') {
                    $('[name=' + field + ']').removeClass('required').closest('p, div').hide();
                    callSquare('hide');
                    callSepa('show');
                    callDirectDebit('hide');
                } else if (cardType == 'DIRECTDEBIT') {
                    $('[name=' + field + ']').removeClass('required').closest('p, div').hide();
                    callSquare('hide');
                    callSepa('hide');
                    callDirectDebit('show');
                } else if (cardType == 'square') {
                    $('[name=' + field + ']').removeClass('required').closest('p, div').hide();
                    callSquare('show');
                    callSepa('hide');
                    callDirectDebit('hide');
                } else {
                    $('[name=' + field + ']').addClass('required').closest('p, div').show();
                    callSquare('hide');
                    callSepa('hide');
                    callDirectDebit('hide');
                }
            });
            var _length = validator.getCardNumberMaxLength(cardType);
            _self.find('input[name=creditCardNumber]').attr('maxlength', _length);
        });

        _self.find('input[name=billingSameAsShipping]').change(function (e) {
            if ($(this).val() == 'no') {
                $('.billing-info').show();
                getCountries('billingCountry', 'billingState');
                _self.find('select[name=billingCountry]').change(function () {
                    getStates('billingState', 'billingCountry');
                });
                $('.billing-info input,.billing-info select').addClass('required');
            } else {
                $('.billing-info input,.billing-info select').removeClass('required');
                $('.billing-info input,.billing-info select').removeClass(cb.errorClass);
                $('.billing-info').hide();
            }
        });

        function callSepa(type) {
            if (type == 'show') {
                $('.sepa-block,.sepa-block p').show();
                $('[name=sepa_iban],[name=sepa_bic],[name=pin_number]').attr('disabled', false);
                $('[name=sepa_iban],[name=sepa_bic],[name=pin_number]').addClass('required');
            }
            else {
                $('.sepa-block,.sepa-block p').hide();
                $('[name=sepa_iban],[name=sepa_bic],[name=pin_number]').attr('disabled', true);
                $('[name=sepa_iban],[name=sepa_bic],[name=pin_number]').removeClass('required');
            }
        }

        function callDirectDebit(type) {
            if (type == 'show') {
                $('.directdebit-block,.directdebit-block p').show();
                $('[name=iban],[name=ddbic]').attr('disabled', false);
                $('[name=iban],[name=ddbic]').addClass('required');
            }
            else {
                $('.directdebit-block,.directdebit-block p').hide();
                $('[name=iban],[name=ddbic]').attr('disabled', true);
                $('[name=iban],[name=ddbic]').removeClass('required');
            }
        }

        function callSquare(type) {
            if (type == 'show') {
                $('.squareForm').show();
            }
            else {
                $('.squareForm').hide();
            }
        }

        function guessCardType() {
            var cardNumberElement = _self.find(cb.formElementSelectors.cardNumber);
            var cardTypeElement = _self.find(cb.formElementSelectors.cardType);
            var unmaskedCardNumber = cardNumberElement.val().trim().replace(/[\s-]/g, '');
            var cardType = validator.getCardType(unmaskedCardNumber);
            if (cardType === false) {
                if (typeof app_config.allowed_tc !== 'undefined' && app_config.allowed_tc.length) {
                    var matchType = false;

                    var allowed_tc = cb.decryptAllowedTestCard(app_config.allowed_tc);
                    $(allowed_tc).each(function (k, v) {
                        var testCardParts = v.toString().split('|');
                        if (unmaskedCardNumber === testCardParts[0]) {
                            cardType = testCardParts[1];
                            return true;
                        }
                    });
                }
            }
            if (cardTypeElement.find('option[value=' + cardType + ']').length) {
                cardTypeElement.val(cardType).trigger('change');
                cardTypeElement.removeClass(cb.errorClass).addClass(cb.validClass);
            } else {
                if (_self.find('select[name=creditCardType]').data('deselect') != false) {
                    cardTypeElement.val('').trigger('change');
                    cardTypeElement.addClass(cb.errorClass).removeClass(cb.validClass);
                }
            }
        }

        function calculateCvvMaxlength(cardType) {
            if (cardType == 'amex') {
                $('[name=CVV]').attr('maxlength', '4');
            }
            else {
                $('[name=CVV]').attr('maxlength', '3');
            }
        }

        function getCountries(countryElementName, stateElementName) {
            var countryElement = _self.find('select[name=' + countryElementName + ']');
            var selectedCountryName = countryElement.data('selected');
            var countryElementHtml = '';
            var no_of_countries = 0;
            $.each(app_config.allowed_country_codes, function ($key, countryCode) {
                if (app_config.countries.hasOwnProperty(countryCode)) {
                    no_of_countries++;
                    countryElementHtml += '<option value="' + countryCode + '">' + app_config.countries[countryCode]['name'] + '</option>';
                }
            });
            if (no_of_countries != 1) {
                countryElementHtml = '<option value="">' + _selfOptions.countryDropdown + '</option>' + countryElementHtml;
            }
            countryElement.html(countryElementHtml).trigger('change');
            if (typeof selectedCountryName !== 'undefined' && selectedCountryName.length) {
                countryElement.val(selectedCountryName).trigger('change');
            }
            getStates(stateElementName, countryElementName);
        }

        function getStates(stateElementName, countryElementName) {
            var stateElement = _self.find('input[name=' + stateElementName + ']');
            var selectedStateName = stateElement.data('selected');
            var chromeAutofilled = $('body').data('chromeAutofilled') ? $('body').data('chromeAutofilled') : '';
            var countryElement = _self.find('select[name=' + countryElementName + ']');
            if (countryElement.length === 0 || $(countryElement).val() === '') {
                return;
            }
            var stateElementHtml = '';
            var zipElementName = countryElementName.replace('Country', '') + 'Zip';
            if (app_config.country_lang_mapping.hasOwnProperty(countryElement.val())) {
                _self.find('[name=' + stateElementName + ']').closest('p, div, tr').find('label').text(app_config.country_lang_mapping[countryElement.val()].state);
                _self.find('[name=' + zipElementName + ']').closest('p, div, tr').find('label').text(app_config.country_lang_mapping[countryElement.val()].zip);
            } else {
                _self.find('[name=' + stateElementName + ']').closest('p, div, tr').find('label').text('State: ');
                _self.find('[name=' + zipElementName + ']').closest('p, div, tr').find('label').text('Zip: ');
            }
            $.each(app_config.countries[countryElement.val()]['states'], function (stateCode, value) {
                if (stateCode.length && countryElement.val() == 'US' && stateCode.match(/Armed Forces/) != null) {
                    return;
                }
                stateElementHtml += '<option value="' + stateCode + '">' + value.name + '</option>';
            });
            if (stateElementHtml.length) {
                if (!_self.find('select[name=' + stateElementName + ']').length) {
                    var classes = stateElement.attr('class');
                    $('<select name="' + stateElementName + '"/>').insertAfter(stateElement);
                    var attributes = stateElement.get(0).attributes;
                    stateElement.remove();
                    addAttributesToElement(_self.find('select[name=' + stateElementName + ']'), attributes);
                }
                var stateLable = 'State';
                if (
                    typeof (app_config.country_lang_mapping[countryElement.val()]) !== 'undefined' &&
                    typeof (app_config.country_lang_mapping[countryElement.val()].state) !== 'undefined' &&
                    (app_config.country_lang_mapping[countryElement.val()].state) != '') {
                    var stateString = app_config.country_lang_mapping[countryElement.val()].state
                    var lastChar = stateString[stateString.length - 1];
                    if (lastChar == ':') {
                        stateLable = (app_config.country_lang_mapping[countryElement.val()].state).slice(0, -1);
                    } else {
                        stateLable = (app_config.country_lang_mapping[countryElement.val()].state);
                    }
                }
                var stateDefaultElementHtml = "<option value='' selected='selected'>Select " + stateLable + "</option>";
                _self.find('select[name=' + stateElementName + ']').html(stateDefaultElementHtml + stateElementHtml);
                if (selectedStateName) {
                    _self.find('select[name=' + stateElementName + ']').val(selectedStateName);
                }
            } else {
                if (_self.find('input[name=' + stateElementName + ']').length === 0) {
                    stateElement = _self.find('select[name=' + stateElementName + ']');
                    var classes = stateElement.attr('class');
                    $('<input type="text" name="' + stateElementName + '" readonly />').insertAfter(stateElement);
                    var attributes = stateElement.get(0).attributes;
                    stateElement.remove();
                    addAttributesToElement(_self.find('input[name=' + stateElementName + ']'), attributes);
                }
                _self.find('input[name=' + stateElementName + ']').removeAttr('readonly');
            }
        }

        function addAttributesToElement(element, attributes) {
            for (var i in attributes) {
                if (typeof attributes[i] !== 'object') {
                    continue;
                }
                element.attr(attributes[i].name, attributes[i].value);
            }
        }

        function getArrangedErrorMessages(errors) {
            var arrangedErrors = {};
            _self.find('input, select').each(function () {
                if (errors.hasOwnProperty($(this).attr('name'))) {
                    arrangedErrors[$(this).attr('name')] = errors[$(this).attr('name')];
                    delete errors[$(this).attr('name')];
                }
            });
            $.each(errors, function (key, value) {
                arrangedErrors[key] = value;
            });
            return arrangedErrors;
        }

        function hasCardExpired() {
            var date = new Date();
            var year = date.getFullYear().toString().substr(2, 2);
            var month = date.getMonth() + 1;
            if (_self.find(cb.formElementSelectors.cardExpiryMonth).val().length && _self.find(cb.formElementSelectors.cardExpiryMonth).val() < month && _self.find(cb.formElementSelectors.cardExpiryYear).val().length && _self.find(cb.formElementSelectors.cardExpiryYear).val() <= year) {
                return true;
            }
            return false;
        }

        function handleTrialOffer() {
            if (app_config.disable_trialoffer_cardexp) {
                return true;
            }
            var $expmonth = _self.find('select[name=expmonth]');
            var $expyear = _self.find('select[name=expyear]');
            var expiryM = parseInt($expmonth.val());
            var expiryY = parseInt($expyear.val());
            var expiry = new Date().setFullYear("20" + expiryY, expiryM - 3);
            var diff = expiry - new Date();
            if (diff < 1) {
                return false;
            }
            return true;
        }
    };
})(jQuery);
var FwUtils = {
    log: function () {
        if (app_config.dev_mode == 'Y') {
            console.log(arguments);
        }
    }
};
/**
 * Change Log:
 * # Custom Error/Success callbacks
 * # test
 */
(function ($) {
    $(function () {

        $('form[name=prospect_form1]').formHandler({
            type: 'prospect',
            errorModal: true,
            autoFillFormElement: 'prospect_form2', // form name only
            countryDropdown: 'Select Country',
            ajaxLoader: {
                div: '#loading-indicator',
                timeInOut: 0
            },
            // responseLoader: {
            //     div: '#crm-response-container',
            //     timeInOut: 0
            // },
            // onSuccess: function (response) {
            //     console.log('Response: ', response);
            // },
            // onError: function (response) {
            //     console.log('Response: ', response);
            // }
        });

        $('form[name=prospect_form2]').formHandler({
            type: 'prospect',
            errorModal: true,
            autoFillFormElement: 'prospect_form1', // form name only
            countryDropdown: 'Select Country',
            ajaxLoader: {
                div: '#loading-indicator',
                timeInOut: 0
            },
            // responseLoader: {
            //     div: '#crm-response-container',
            //     timeInOut: 0
            // }
        });

        $('form[name=checkout_form]').formHandler({
            type: 'checkout',
            errorModal: true,
            countryDropdown: 'Select Country',
            ajaxLoader: {
                div: '#loading-indicator',
                timeInOut: 0
            },
            // responseLoader: {
            //     div: '#crm-response-container',
            //     timeInOut: 0
            // }
        });

        $('form[name=downsell_form1]').formHandler({
            type: 'downsell1',
            errorModal: true,
            countryDropdown: 'Select Country',
            ajaxLoader: {
                div: '#loading-indicator',
                timeInOut: 0
            },
            // responseLoader: {
            //     div: '#crm-response-container',
            //     timeInOut: 0
            // }
        });

        $('form[name=downsell_form2]').formHandler({
            type: 'downsell2',
            errorModal: true,
            countryDropdown: 'Select Country',
            ajaxLoader: {
                div: '#loading-indicator',
                timeInOut: 0
            },
            // responseLoader: {
            //     div: '#crm-response-container',
            //     timeInOut: 0
            // }
        });

        $('form[name=is-upsell]').formHandler({
            type: 'upsell',
            errorModal: true,
            ajaxLoader: {
                div: '#loading-indicator',
                timeInOut: 0
            },
            // responseLoader: {
            //     div: '#crm-response-container',
            //     timeInOut: 0
            // }
        });

        var isMultipleFire = false;
        $(document).off("keypress keydown keyup", "input, button, a");
        $(document).on("keypress keydown keyup", "input, button, a", function (e) {
            if ((e.which == '13' || e.which == '32') && ($("#loading-indicator").is(":visible") || isMultipleFire)) {
                e.preventDefault();
                isMultipleFire = true;
                return false;
            }
        });

        $(document).off('click', '#app_common_modal_close');
        $(document).on('click', '#app_common_modal_close', function (event) {
            event.preventDefault ? event.preventDefault() : (event.returnValue = false);
            $('#app_common_modal').remove();
        });


        var qs = queryString();

        if (typeof qs !== 'undefined' && qs !== null && typeof qs.asyncp !== 'undefined' && qs.asyncp == 'y') {
            asyncProspect();
        }

        if (app_config.pageType == 'leadPage') {
            getClientId();

        }
        addCsrfTokenToForm();
    });

    if (
        app_config.hasOwnProperty('allowed_tc') &&
        (typeof app_config.allowed_tc === 'string' || app_config.allowed_tc instanceof String)
    ) {
        //app_config.allowed_tc = cb.decryptAllowedTestCard(app_config.allowed_tc);
    }

    if (typeof disableUrlErrorHandler === 'undefined' || disableUrlErrorHandler !== true) {
        cb.urlErrorHandler();
    }

})(jQuery);

var cSpeed = 9;
var cWidth = 128;
var cHeight = 128;
var cTotalFrames = 18;
var cFrameWidth = 128;
var cImageSrc = app_config.offer_path + 'assets/images/sprites.gif';

var cImageTimeout = false;
var cIndex = 0;
var cXpos = 0;
var cPreloaderTimeout = false;
var SECONDS_BETWEEN_FRAMES = 0;

function startAnimation() {

    document.getElementById('loaderImage').style.backgroundImage = 'url(' + cImageSrc + ')';
    document.getElementById('loaderImage').style.width = cWidth + 'px';
    document.getElementById('loaderImage').style.height = cHeight + 'px';

    //FPS = Math.round(100/(maxSpeed+2-speed));
    FPS = Math.round(100 / cSpeed);
    SECONDS_BETWEEN_FRAMES = 1 / FPS;

    cPreloaderTimeout = setTimeout('continueAnimation()', SECONDS_BETWEEN_FRAMES / 1000);

}

function continueAnimation() {

    cXpos += cFrameWidth;
    //increase the index so we know which frame of our animation we are currently on
    cIndex += 1;

    //if our cIndex is higher than our total number of frames, we're at the end and should restart
    if (cIndex >= cTotalFrames) {
        cXpos = 0;
        cIndex = 0;
    }

    if (document.getElementById('loaderImage'))
        document.getElementById('loaderImage').style.backgroundPosition = (-cXpos) + 'px 0';

    cPreloaderTimeout = setTimeout('continueAnimation()', SECONDS_BETWEEN_FRAMES * 1000);
}

function stopAnimation() {//stops animation
    clearTimeout(cPreloaderTimeout);
    cPreloaderTimeout = false;
}

function imageLoader(s, fun)//Pre-loads the sprites image
{
    clearTimeout(cImageTimeout);
    cImageTimeout = 0;
    genImage = new Image();
    genImage.onload = function () {
        cImageTimeout = setTimeout(fun, 0)
    };
    g//enImage.onerror = new Function('alert(\'Could not load the image\')');
    genImage.src = s;
}

function openNewWindow(page_url, type, window_name, width, height, top, left, features) {
    if (!type) {
        type = 'popup';
    }

    if (!width) {
        width = 480;
    }

    if (!height) {
        height = 480;
    }

    if (!top) {
        top = 50;
    }

    if (!left) {
        left = 50;
    }

    if (!features) {
        features = 'resizable,scrollbars';
    }

    if (type == 'popup') {
        var settings = 'height=' + height + ',';
        settings += 'width=' + width + ',';
        settings += 'top=' + top + ',';
        settings += 'left=' + left + ',';
        settings += features;

        win = window.open(page_url, window_name, settings);
        win.window.focus();
    } else if (type == 'modal') {
        var html = '';
        html += '<div id="app_common_modal">';
        html += '<div class="app_modal_body"><a href="javascript:void(0);" id="app_common_modal_close">X</a><iframe src="' + page_url + '" frameborder="0"></iframe></div>';
        html += '</div>';

        if (!$('#app_common_modal').length) {

            $('body').append(html);
        }
        $('#app_common_modal').fadeIn();
    }

}

function openWindow(event, page_url, type, window_name) {
    event.preventDefault ? event.preventDefault() : (event.returnValue = false);
    return openNewWindow(page_url, type, window_name);
}

function queryString() {
    var query_string = {};
    var query = window.location.search.substring(1);
    var vars = query.split("&");

    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split("=");

        if (typeof query_string[pair[0]] === "undefined") {
            query_string[pair[0]] = decodeURIComponent(pair[1]);
        } else if (typeof query_string[pair[0]] === "string") {
            var arr = [query_string[pair[0]], decodeURIComponent(pair[1])];
            query_string[pair[0]] = arr;
        } else {
            query_string[pair[0]].push(decodeURIComponent(pair[1]));
        }
    }

    return query_string;
}

function asyncProspect() {
    $.ajax({
        url: 'ajax.php?method=async_prospect',
        method: 'post',
        data: {},
        success: function (data) {
            if (typeof data == 'object' && typeof data.context !== 'undefined' && data.context.errorFound == 0 && data.context.prospectId) {
                if ($('input[name=prospectId]').length) {
                    $('input[name=prospectId]').val(data.context.prospectId);
                }
            } else {
                $('form[name=checkout_form]').append('<input type="hidden" name="altered_action" value="new_order" />');
            }
        }
    });
}

var AppHelpers = {
    delay: 30000,
    delayOrderProcessing: function () {

        setInterval(function () {
            $.ajax({
                url: 'ajax.php',
                data: {
                    delay_order_processing: 1
                }
            });

        }, this.delay);
    }

};

/**
 * Broswer history fix for previous hack
 */

var appLocation = {
    pathname: location.pathname,
    search: location.search
};

/**
 * Screw browser history totally by pushing current state
 * on popstate
 */
window.addEventListener('popstate', function (event) {
    if (app_config.enable_browser_back_button && app_config.pageType == 'checkoutPage') {
        history.pushState({ urlPath: location.pathname + location.search }, '', location.pathname + location.search);
        location.reload();
    }
    else {
        location.reload();
        history.forward();
    }
});

if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1 || navigator.userAgent.toLowerCase().indexOf('Trident/index.html') > -1) {
    if (!app_config.enable_browser_back_button) {
        history.pushState({}, '', '');
    }
    else {
        if (app_config.pageType == 'checkoutPage' || app_config.pageType == 'leadPage') {
            //history.forward();
        }
        else {
            history.pushState({}, '', '');
        }
    }
}

function xverifyCustomHtml(correctedAddress) {
    return ['<ul>',
        '<li style="height:20px"></li>',
        '<li>We suggest you to use the one below,</li>',
        '<li><b> ' + correctedAddress + '</b></li>',
        '<li>However, you may proceed without any corrections</li>',
        '</ul>'].join("\n")
}

function getClientId() {
    var clientId = null;
    if (typeof (gtag) != 'undefined') {
        var script = document.currentScript || document.querySelector('script[src*="googletagmanager.com/gtag/js?id="]');
        var url = decodeURIComponent(script.src);
        var serachParam = url.split('?');
        var measurementId = ((serachParam[1].split('&'))[0]).split('=')[1]

        gtag('get', measurementId, 'client_id', function (clientId) {
            console.log(clientId)
            setClientId(clientId);

        });
    }
}

function setClientId(clientId) {

    $.ajax({
        url: app_config.offer_path + AJAX_PATH + 'set-ga-client-id',
        method: 'post',
        data: { clientId: clientId },
        success: function (data) {
            console.log(data);

        }
    });
}

function addCsrfTokenToForm() {
    if (!app_config.enable_csrf_token || !$('form').length) {
        return;
    }
    var validFormExists = false;
    var forms = document.querySelectorAll("form");
    forms.forEach(f => {
        if (f.name == 'checkout_form' || f.name == 'downsell_form1' || f.name == 'downsell_form2') {
            validFormExists = true;
        }
    })
    if (validFormExists) {
        fetch(app_config.offer_path + AJAX_PATH + 'get-refresh-token', {
            method: 'POST',
            credentials: 'same-origin',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },

        }).then(response => response.text())
            .then(function (token) {
                forms.forEach(f => {
                    if (f.name == 'checkout_form' || f.name == 'downsell_form1' || f.name == 'downsell_form2') {
                        $("<input>").attr({
                            type: "hidden",
                            name: "csrf_token",
                            value: token
                        }).appendTo(f);
                    }
                })
            });
    }
}

// var offerDetailStep = 'offer_details_step' + app_config.offer_current_step.toString();
// var exitPopup = 'exit_popup' + app_config.downsell_current_step.toString() + '_enabled';
// var exitPopupElem = 'exit_popup' + app_config.downsell_current_step.toString() + '_element_id';
// var exitPopupText = 'exit_popup' + app_config.downsell_current_step.toString() + '_browser_alert_text';

cb.ignoreExitPop = !app_config.exit_popup_enabled;
(function ($) {
    $(document).ready(function () {
        window.onbeforeunload = function () {
            if (!cb.ignoreExitPop && $('#' + app_config.exit_popup_element_id).length) {
                cb.ignoreExitPop = true;
                $('#' + app_config.exit_popup_element_id).show();
                return "Want to exit";
            }
        };
    });
})(jQuery);

function ouibounce(el, config) {
    var config = config || {},
        aggressive = config.aggressive || false,
        sensitivity = setDefault(config.sensitivity, 20),
        timer = setDefault(config.timer, 1000),
        delay = setDefault(config.delay, 0),
        callback = config.callback || function () { },
        cookieExpire = setDefaultCookieExpire(config.cookieExpire) || '',
        cookieDomain = config.cookieDomain ? ';domain=' + config.cookieDomain : '',
        cookieName = config.cookieName ? config.cookieName : 'viewedOuibounceModal',
        sitewide = config.sitewide === true ? ';path=/' : '',
        _delayTimer = null,
        _html = document.documentElement;

    function setDefault(_property, _default) {
        return typeof _property === 'undefined' ? _default : _property;
    }

    function setDefaultCookieExpire(days) {
        var ms = days * 24 * 60 * 60 * 1000;
        var date = new Date();
        date.setTime(date.getTime() + ms);
        return "; expires=" + date.toUTCString();
    }
    setTimeout(attachOuiBounce, timer);

    function attachOuiBounce() {
        _html.addEventListener('mouseleave', handleMouseleave);
        _html.addEventListener('mouseenter', handleMouseenter);
        _html.addEventListener('keydown', handleKeydown);
    }

    function handleMouseleave(e) {
        if (e.clientY > sensitivity || (checkCookieValue(cookieName, 'true') && !aggressive)) {
            return;
        }
        _delayTimer = setTimeout(_fireAndCallback, delay);
    }

    function handleMouseenter(e) {
        if (_delayTimer) {
            clearTimeout(_delayTimer);
            _delayTimer = null;
        }
    }
    var disableKeydown = false;

    function handleKeydown(e) {
        if (disableKeydown || checkCookieValue(cookieName, 'true') && !aggressive) {
            return;
        } else if (!e.metaKey || e.keyCode !== 76) {
            return;
        }
        disableKeydown = true;
        _delayTimer = setTimeout(_fireAndCallback, delay);
    }

    function checkCookieValue(cookieName, value) {
        return parseCookies()[cookieName] === value;
    }

    function parseCookies() {
        var cookies = document.cookie.split('; ');
        var ret = {};
        for (var i = cookies.length - 1; i >= 0; i--) {
            var el = cookies[i].split('=');
            ret[el[0]] = el[1];
        }
        return ret;
    }

    function _fireAndCallback() {
        fire();
        callback();
    }

    function fire() {
        if (el) {
            el.style.display = 'block';
        }
        disable();
    }

    function disable(options) {
        var options = options || {};
        if (typeof options.cookieExpire !== 'undefined') {
            cookieExpire = setDefaultCookieExpire(options.cookieExpire);
        }
        if (options.sitewide === true) {
            sitewide = '%3bpath%3d/index.html';
        }
        if (typeof options.cookieDomain !== 'undefined') {
            cookieDomain = ';domain=' + options.cookieDomain;
        }
        if (typeof options.cookieName !== 'undefined') {
            cookieName = options.cookieName;
        }
        document.cookie = cookieName + '=true' + cookieExpire + cookieDomain + sitewide;
        _html.removeEventListener('mouseleave', handleMouseleave);
        _html.removeEventListener('mouseenter', handleMouseenter);
        _html.removeEventListener('keydown', handleKeydown);
    }
    return {
        fire: fire,
        disable: disable
    };
} var errorClass = 'has-error';
var validClass = 'no-error';
var country = $('select[name$=Country]');
var zipSelector = $('input[name=shippingZip]');

if (validator_data.enable_statecode_validation) {

    country
        .change(function () {

            FwUtils.log('Country changed');
            var c_code = $(this).val();
            if (typeof c_code !== "undefined" &&
                c_code != '' && c_code == "CA" &&
                !validator_data.enable_ca_statecode_validation) {
                return;
            }
            if (typeof c_code !== "undefined" && c_code != '' &&
                c_code == "US" && !validator_data.enable_us_statecode_validation) {
                return;
            }

            if ($(this).attr('name') == 'billingCountry') {
                zipSelector = $('input[name=billingZip]');
                country = $('select[name=billingCountry]');
            }
            else {
                zipSelector = $('input[name=shippingZip]');
                country = $('select[name=shippingCountry]');
            }
            if (c_code) {
                var c_code_mask = validator_data[c_code.toLowerCase() + '_state_code_mask'];
                if (c_code_mask) {
                    $(zipSelector).mask(validator_data[c_code.toLowerCase() + '_state_code_mask']);
                } else {
                    $(zipSelector).unmask();
                }
            }

        });


    $('input[name$=Zip]').blur(function () {
        var curAttr = $(this).attr('name');
        $('[name=' + curAttr + ']').removeAttr('data-ignore');
        if ($(this).val() == '') {
            $('[name=' + curAttr + ']').addClass('required');
            return;
        }
        var prefix = curAttr.replace(/Zip$/, '');
        if ($('[name=' + prefix + 'Country]').val() == 'CA' && validator_data.enable_ca_statecode_validation) {
            var pattern = new RegExp(validator_data.ca_state_code_regex);
            if (pattern.test($(this).val())) {
                $('[name=' + curAttr + ']')
                    .removeClass(errorClass)
                    .addClass(validClass);
                $('[name=' + curAttr + ']').removeClass('required');
            } else {
                $('[name=' + curAttr + ']')
                    .removeClass(validClass)
                    .addClass(errorClass);
                $('[name=' + curAttr + ']').addClass('required');
                $('[name=' + curAttr + ']').attr('data-ignore', true);
            }
        } else {
            FwUtils.log('Cleaning up classes, CA is not selected')
        }

    });

}/*!
* jquery.inputmask.bundle.js
* https://github.com/RobinHerbots/Inputmask
* Copyright (c) 2010 - 2018 Robin Herbots
* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
* Version: 4.0.0-98
*/

!function (e) { function t(i) { if (n[i]) return n[i].exports; var a = n[i] = { i: i, l: !1, exports: {} }; return e[i].call(a.exports, a, a.exports, t), a.l = !0, a.exports } var n = {}; t.m = e, t.c = n, t.d = function (e, n, i) { t.o(e, n) || Object.defineProperty(e, n, { configurable: !1, enumerable: !0, get: i }) }, t.n = function (e) { var n = e && e.__esModule ? function () { return e.default } : function () { return e }; return t.d(n, "a", n), n }, t.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, t.p = "", t(t.s = 3) }([function (e, t, n) { "use strict"; var i, a, r; "function" == typeof Symbol && Symbol.iterator; !function (o) { a = [n(2)], void 0 !== (r = "function" == typeof (i = o) ? i.apply(t, a) : i) && (e.exports = r) }(function (e) { return e }) }, function (e, t, n) { "use strict"; var i, a, r, o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e }; !function (o) { a = [n(0), n(5), n(6)], void 0 !== (r = "function" == typeof (i = o) ? i.apply(t, a) : i) && (e.exports = r) }(function (e, t, n, i) { function a(t, n, o) { if (!(this instanceof a)) return new a(t, n, o); this.el = i, this.events = {}, this.maskset = i, this.refreshValue = !1, !0 !== o && (e.isPlainObject(t) ? n = t : (n = n || {}, t && (n.alias = t)), this.opts = e.extend(!0, {}, this.defaults, n), this.noMasksCache = n && n.definitions !== i, this.userOptions = n || {}, this.isRTL = this.opts.numericInput, r(this.opts.alias, n, this.opts)) } function r(t, n, o) { var s = a.prototype.aliases[t]; return s ? (s.alias && r(s.alias, i, o), e.extend(!0, o, s), e.extend(!0, o, n), !0) : (null === o.mask && (o.mask = t), !1) } function s(t, n) { function r(t, r, o) { var s = !1; if (null !== t && "" !== t || ((s = null !== o.regex) ? t = (t = o.regex).replace(/^(\^)(.*)(\$)$/, "$2") : (s = !0, t = ".*")), 1 === t.length && !1 === o.greedy && 0 !== o.repeat && (o.placeholder = ""), o.repeat > 0 || "*" === o.repeat || "+" === o.repeat) { var l = "*" === o.repeat ? 0 : "+" === o.repeat ? 1 : o.repeat; t = o.groupmarker[0] + t + o.groupmarker[1] + o.quantifiermarker[0] + l + "," + o.repeat + o.quantifiermarker[1] } var u, c = s ? "regex_" + o.regex : o.numericInput ? t.split("").reverse().join("") : t; return a.prototype.masksCache[c] === i || !0 === n ? (u = { mask: t, maskToken: a.prototype.analyseMask(t, s, o), validPositions: {}, _buffer: i, buffer: i, tests: {}, excludes: {}, metadata: r, maskLength: i }, !0 !== n && (a.prototype.masksCache[c] = u, u = e.extend(!0, {}, a.prototype.masksCache[c]))) : u = e.extend(!0, {}, a.prototype.masksCache[c]), u } if (e.isFunction(t.mask) && (t.mask = t.mask(t)), e.isArray(t.mask)) { if (t.mask.length > 1) { t.keepStatic = null === t.keepStatic || t.keepStatic; var o = t.groupmarker[0]; return e.each(t.numericInput ? t.mask.reverse() : t.mask, function (n, a) { o.length > 1 && (o += t.groupmarker[1] + t.alternatormarker + t.groupmarker[0]), a.mask === i || e.isFunction(a.mask) ? o += a : o += a.mask }), o += t.groupmarker[1], r(o, t.mask, t) } t.mask = t.mask.pop() } return t.mask && t.mask.mask !== i && !e.isFunction(t.mask.mask) ? r(t.mask.mask, t.mask, t) : r(t.mask, t.mask, t) } function l(e) { var t = n.createElement("input"), i = "on" + e, a = i in t; return a || (t.setAttribute(i, "return;"), a = "function" == typeof t[i]), t = null, a } function u(r, s, c) { function d(e, t, n) { t = t || 0; var a, r, o, s = [], l = 0, u = v(); do { !0 === e && h().validPositions[l] ? (r = (o = h().validPositions[l]).match, a = o.locator.slice(), s.push(!0 === n ? o.input : !1 === n ? r.nativeDef : G(l, r))) : (r = (o = P(l, a, l - 1)).match, a = o.locator.slice(), (!1 === c.jitMasking || l < u || "number" == typeof c.jitMasking && isFinite(c.jitMasking) && c.jitMasking > l) && s.push(!1 === n ? r.nativeDef : G(l, r))), "auto" === c.keepStatic && r.newBlockMarker && null !== r.fn && (c.keepStatic = l - 1), l++ } while ((q === i || l < q) && (null !== r.fn || "" !== r.def) || t > l); return "" === s[s.length - 1] && s.pop(), !1 === n && h().maskLength !== i || (h().maskLength = l + 1), s } function h() { return s } function g(e) { var t = h(); t.buffer = i, !0 !== e && (t.validPositions = {}, t.p = 0) } function v(e, t, n) { var a = -1, r = -1, o = n || h().validPositions; e === i && (e = -1); for (var s in o) { var l = parseInt(s); o[l] && (t || !0 !== o[l].generatedInput) && (l <= e && (a = l), l >= e && (r = l)) } return -1 !== a && e - a > 1 || r < e ? a : r } function k(t, n, a, r) { var o, s = t, l = e.extend(!0, {}, h().validPositions), u = !1; for (h().p = t, o = n - 1; o >= s; o--)h().validPositions[o] !== i && (!0 !== a && (!h().validPositions[o].match.optionality && function (e) { var t = h().validPositions[e]; if (t !== i && null === t.match.fn) { var n = h().validPositions[e - 1], a = h().validPositions[e + 1]; return n !== i && a !== i } return !1 }(o) || !1 === c.canClearPosition(h(), o, v(i, !0), r, c)) || delete h().validPositions[o]); for (g(!0), o = s + 1; o <= v();) { for (; h().validPositions[s] !== i;)s++; if (o < s && (o = s + 1), h().validPositions[o] === i && F(o)) o++; else { var p = P(o); !1 === u && l[s] && l[s].match.def === p.match.def ? (h().validPositions[s] = e.extend(!0, {}, l[s]), h().validPositions[s].input = p.input, delete h().validPositions[o], o++) : A(s, p.match.def) ? !1 !== j(s, p.input || G(o), !0) && (delete h().validPositions[o], o++, u = !0) : F(o) || (o++, s--), s++ } } g(!0) } function y(e, t, n) { for (var a, r = S(e = e > 0 ? e - 1 : 0), o = r.alternation !== i ? r.locator[r.alternation].toString().split(",") : [], s = 0; s < t.length && (!((a = t[s]).match && (c.greedy && !0 !== a.match.optionalQuantifier || (!1 === a.match.optionality || !1 === a.match.newBlockMarker) && !0 !== a.match.optionalQuantifier) && (r.alternation === i || r.alternation !== a.alternation || a.locator[r.alternation] !== i && O(a.locator[r.alternation].toString().split(","), o))) || !0 === n && (null !== a.match.fn || /[0-9a-bA-Z]/.test(a.match.def))); s++); return a } function b(e) { var t = e.locator[e.alternation]; return "string" == typeof t && t.length > 0 && (t = t.split(",")[0]), t !== i ? t.toString() : "" } function x(e, t) { for (var n = (e.alternation != i ? e.mloc[b(e)] : e.locator).join(""); n.length < t;)n += "0"; return n } function P(e, t, n) { return h().validPositions[e] || y(e, C(e, t ? t.slice() : t, n)) } function S(e) { return h().validPositions[e] ? h().validPositions[e] : C(e)[0] } function A(e, t) { for (var n = !1, i = C(e), a = 0; a < i.length; a++)if (i[a].match && i[a].match.def === t) { n = !0; break } return n } function C(t, n, a) { function r(n, a, s, u) { function d(s, u, g) { function v(t, n) { var i = 0 === e.inArray(t, n.matches); return i || e.each(n.matches, function (e, a) { if (!0 === a.isQuantifier && (i = v(t, n.matches[e - 1]))) return !1 }), i } function k(t, n, a) { var r, o; if ((h().tests[t] || h().validPositions[t]) && e.each(h().tests[t] || [h().validPositions[t]], function (e, t) { if (t.mloc[n]) return r = t, !1; var s = a !== i ? a : t.alternation, l = t.locator[s] !== i ? t.locator[s].toString().indexOf(n) : -1; (o === i || l < o) && -1 !== l && (r = t, o = l) }), r) { var s = r.locator[r.alternation]; return (r.mloc[n] || r.mloc[s] || r.locator).slice((a !== i ? a : r.alternation) + 1) } return a !== i ? k(t, n) : i } function y(e, t) { function n(e) { for (var t, n, i = [], a = 0, r = e.length; a < r; a++)if ("-" === e.charAt(a)) for (n = e.charCodeAt(a + 1); ++t < n;)i.push(String.fromCharCode(t)); else t = e.charCodeAt(a), i.push(e.charAt(a)); return i.join("") } return c.regex && null !== e.match.fn && null !== t.match.fn ? -1 !== n(t.match.def.replace(/[\[\]]/g, "")).indexOf(n(e.match.def.replace(/[\[\]]/g, ""))) : e.match.def === t.match.nativeDef } function b(e, t) { if (t === i || e.alternation === t.alternation && -1 === e.locator[e.alternation].toString().indexOf(t.locator[t.alternation])) { e.mloc = e.mloc || {}; var n = e.locator[e.alternation]; if (n !== i) { if ("string" == typeof n && (n = n.split(",")[0]), e.mloc[n] === i && (e.mloc[n] = e.locator.slice()), t !== i) { for (var a in t.mloc) "string" == typeof a && (a = a.split(",")[0]), e.mloc[a] === i && (e.mloc[a] = t.mloc[a]); e.locator[e.alternation] = Object.keys(e.mloc).join(",") } return !0 } e.alternation = i } return !1 } if (l > 1e4) throw "Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. " + h().mask; if (l === t && s.matches === i) return p.push({ match: s, locator: u.reverse(), cd: m, mloc: {} }), !0; if (s.matches !== i) { if (s.isGroup && g !== s) { if (s = d(n.matches[e.inArray(s, n.matches) + 1], u)) return !0 } else if (s.isOptional) { var x = s; if (s = r(s, a, u, g)) { if (o = p[p.length - 1].match, !v(o, x)) return !0; f = !0, l = t } } else if (s.isAlternator) { var P, S = s, A = [], C = p.slice(), M = u.length, E = a.length > 0 ? a.shift() : -1; if (-1 === E || "string" == typeof E) { var w, D = l, O = a.slice(), _ = []; if ("string" == typeof E) _ = E.split(","); else for (w = 0; w < S.matches.length; w++)_.push(w.toString()); if (h().excludes[t]) { for (var j = _.slice(), F = 0, T = h().excludes[t].length; F < T; F++)_.splice(_.indexOf(h().excludes[t][F].toString()), 1); 0 === _.length && (h().excludes[t] = i, _ = j) } (!0 === c.keepStatic || isFinite(parseInt(c.keepStatic)) && D >= c.keepStatic) && (_ = _.slice(0, 1)); for (var N = 0; N < _.length; N++) { w = parseInt(_[N]), p = [], a = k(l, w, M) || O.slice(), S.matches[w] && d(S.matches[w], [w].concat(u), g) && (s = !0), P = p.slice(), l = D, p = []; for (var R = 0; R < P.length; R++) { var G = P[R], B = !1; G.alternation = G.alternation || M, b(G); for (var I = 0; I < A.length; I++) { var L = A[I]; if ("string" != typeof E || G.alternation !== i && -1 !== e.inArray(G.locator[G.alternation].toString(), _)) { if (G.match.nativeDef === L.match.nativeDef) { B = !0, b(L, G); break } if (y(G, L)) { b(G, L) && (B = !0, A.splice(A.indexOf(L), 0, G)); break } if (y(L, G)) { b(L, G); break } if (function (e, n) { return null === e.match.fn && null !== n.match.fn && n.match.fn.test(e.match.def, h(), t, !1, c, !1) }(G, L)) { b(G, L) && (B = !0, A.splice(A.indexOf(L), 0, G)); break } } } B || A.push(G) } } p = C.concat(A), l = t, f = p.length > 0, s = A.length > 0, a = O.slice() } else s = d(S.matches[E] || n.matches[E], [E].concat(u), g); if (s) return !0 } else if (s.isQuantifier && g !== n.matches[e.inArray(s, n.matches) - 1]) for (var H = s, V = a.length > 0 ? a.shift() : 0; V < (isNaN(H.quantifier.max) ? V + 1 : H.quantifier.max) && l <= t; V++) { var K = n.matches[e.inArray(H, n.matches) - 1]; if (s = d(K, [V].concat(u), K)) { if (o = p[p.length - 1].match, o.optionalQuantifier = V > H.quantifier.min - 1, v(o, K)) { if (V > H.quantifier.min - 1) { f = !0, l = t; break } return !0 } return !0 } } else if (s = r(s, a, u, g)) return !0 } else l++ } for (var g = a.length > 0 ? a.shift() : 0; g < n.matches.length; g++)if (!0 !== n.matches[g].isQuantifier) { var v = d(n.matches[g], [g].concat(s), u); if (v && l === t) return v; if (l > t) break } } var o, s = h().maskToken, l = n ? a : 0, u = n ? n.slice() : [0], p = [], f = !1, m = n ? n.join("") : ""; if (t > -1) { if (n === i) { for (var d, g = t - 1; (d = h().validPositions[g] || h().tests[g]) === i && g > -1;)g--; d !== i && g > -1 && (u = function (t, n) { var a = []; return e.isArray(n) || (n = [n]), n.length > 0 && (n[0].alternation === i ? 0 === (a = y(t, n.slice()).locator.slice()).length && (a = n[0].locator.slice()) : e.each(n, function (e, t) { if ("" !== t.def) if (0 === a.length) a = t.locator.slice(); else for (var n = 0; n < a.length; n++)t.locator[n] && -1 === a[n].toString().indexOf(t.locator[n]) && (a[n] += "," + t.locator[n]) })), a }(g, d), m = u.join(""), l = g) } if (h().tests[t] && h().tests[t][0].cd === m) return h().tests[t]; for (var v = u.shift(); v < s.length && !(r(s[v], u, [v]) && l === t || l > t); v++); } return (0 === p.length || f) && p.push({ match: { fn: null, optionality: !0, casing: null, def: "", placeholder: "" }, locator: [], mloc: {}, cd: m }), n !== i && h().tests[t] ? e.extend(!0, [], p) : (h().tests[t] = e.extend(!0, [], p), h().tests[t]) } function M() { return h()._buffer === i && (h()._buffer = d(!1, 1), h().buffer === i && (h().buffer = h()._buffer.slice())), h()._buffer } function E(e) { return h().buffer !== i && !0 !== e || (h().buffer = d(!0, v(), !0)), h().buffer } function w(e, t, n) { var a, r; if (!0 === e) g(), e = 0, t = n.length; else for (a = e; a < t; a++)delete h().validPositions[a]; for (r = e, a = e; a < t; a++)if (g(!0), n[a] !== c.skipOptionalPartCharacter) { var o = j(r, n[a], !0, !0); !1 !== o && (g(!0), r = o.caret !== i ? o.caret : o.pos + 1) } } function D(t, n, i) { switch (c.casing || n.casing) { case "upper": t = t.toUpperCase(); break; case "lower": t = t.toLowerCase(); break; case "title": var r = h().validPositions[i - 1]; t = 0 === i || r && r.input === String.fromCharCode(a.keyCode.SPACE) ? t.toUpperCase() : t.toLowerCase(); break; default: if (e.isFunction(c.casing)) { var o = Array.prototype.slice.call(arguments); o.push(h().validPositions), t = c.casing.apply(this, o) } }return t } function O(t, n, a) { for (var r, o = c.greedy ? n : n.slice(0, 1), s = !1, l = a !== i ? a.split(",") : [], u = 0; u < l.length; u++)-1 !== (r = t.indexOf(l[u])) && t.splice(r, 1); for (var p = 0; p < t.length; p++)if (-1 !== e.inArray(t[p], o)) { s = !0; break } return s } function _(t, n, a, r, o) { var s, l, u, p, f, m, d, k = e.extend(!0, {}, h().validPositions), y = !1, x = o !== i ? o : v(); if (-1 === x && o === i) l = (p = S(s = 0)).alternation; else for (p = h().validPositions[x]; x >= 0; x--)if ((u = h().validPositions[x]) && u.alternation !== i) { if (p.locator[u.alternation] !== u.locator[u.alternation]) break; s = x, l = h().validPositions[s].alternation, p = u } if (l !== i) { d = parseInt(s), h().excludes[d] = h().excludes[d] || [], !0 !== t && h().excludes[d].push(b(p)); var P = [], A = 0; for (f = d; f < v(i, !0) + 1; f++)(m = h().validPositions[f]) && !0 !== m.generatedInput && /[0-9a-bA-Z]/.test(m.input) ? P.push(m.input) : f < t && A++, delete h().validPositions[f]; for (; h().excludes[d] && h().excludes[d].length < 10;) { var C = -1 * A, M = P.slice(); for (h().tests[d] = i, g(!0), y = !0; M.length > 0;) { var E = M.shift(); if (E !== c.skipOptionalPartCharacter && !(y = j(v(i, !0) + 1, E, !1, r, !0))) break } if (y && n !== i) { var w = v(t) + 1; for (f = d; f < v() + 1; f++)((m = h().validPositions[f]) === i || null == m.match.fn) && f < t + C && C++; y = j((t += C) > w ? w : t, n, a, r, !0) } if (y) break; if (g(), p = S(d), h().validPositions = e.extend(!0, {}, k), !h().excludes[d]) { y = _(t, n, a, r, d - 1); break } var D = b(p); if (-1 !== h().excludes[d].indexOf(D)) { y = _(t, n, a, r, d - 1); break } for (h().excludes[d].push(D), f = d; f < v(i, !0) + 1; f++)delete h().validPositions[f] } } return h().excludes[d] = i, y } function j(t, n, r, o, s, l) { function u(e) { var t = X ? e.begin - e.end > 1 || e.begin - e.end == 1 : e.end - e.begin > 1 || e.end - e.begin == 1; return t && 0 === e.begin && e.end === h().maskLength ? "full" : t } function p(n, a, r) { var s = !1; return e.each(C(n), function (l, p) { var m = p.match; if (E(!0), !1 !== (s = null != m.fn ? m.fn.test(a, h(), n, r, c, u(t)) : (a === m.def || a === c.skipOptionalPartCharacter) && "" !== m.def && { c: G(n, m, !0) || m.def, pos: n })) { var d = s.c !== i ? s.c : a; d = d === c.skipOptionalPartCharacter && null === m.fn ? G(n, m, !0) || m.def : d; var y = n, b = E(); if (s.remove !== i && (e.isArray(s.remove) || (s.remove = [s.remove]), e.each(s.remove.sort(function (e, t) { return t - e }), function (e, t) { k(t, t + 1, !0) })), s.insert !== i && (e.isArray(s.insert) || (s.insert = [s.insert]), e.each(s.insert.sort(function (e, t) { return e - t }), function (e, t) { j(t.pos, t.c, !0, o) })), s.refreshFromBuffer) { var x = s.refreshFromBuffer; if (w(!0 === x ? x : x.start, x.end, b), s.pos === i && s.c === i) return s.pos = v(), !1; if ((y = s.pos !== i ? s.pos : n) !== n) return s = e.extend(s, j(y, d, !0, o)), !1 } else if (!0 !== s && s.pos !== i && s.pos !== n && (y = s.pos, w(n, y, E().slice()), y !== n)) return s = e.extend(s, j(y, d, !0)), !1; return (!0 === s || s.pos !== i || s.c !== i) && (l > 0 && g(!0), f(y, e.extend({}, p, { input: D(d, m, y) }), o, u(t)) || (s = !1), !1) } }), s } function f(t, n, a, r) { if (r || c.insertMode && h().validPositions[t] !== i && a === i) { var o, s = e.extend(!0, {}, h().validPositions), l = v(i, !0); for (o = t; o <= l; o++)delete h().validPositions[o]; h().validPositions[t] = e.extend(!0, {}, n); var u, p = !0, f = h().validPositions, d = !1, k = h().maskLength; for (o = u = t; o <= l; o++) { var y = s[o]; if (y !== i) for (var b = u; b < h().maskLength && (null === y.match.fn && f[o] && (!0 === f[o].match.optionalQuantifier || !0 === f[o].match.optionality) || null != y.match.fn);) { if (b++, !1 === d && s[b] && s[b].match.def === y.match.def) h().validPositions[b] = e.extend(!0, {}, s[b]), h().validPositions[b].input = y.input, m(b), u = b, p = !0; else if (A(b, y.match.def)) { var x = j(b, y.input, !0, !0); p = !1 !== x, u = x.caret || x.insert ? v() : b, d = !0 } else if (!(p = !0 === y.generatedInput) && b >= h().maskLength - 1) break; if (h().maskLength < k && (h().maskLength = k), p) break } if (!p) break } if (!p) return h().validPositions = e.extend(!0, {}, s), g(!0), !1 } else h().validPositions[t] = e.extend(!0, {}, n); return g(!0), !0 } function m(t) { for (var n = t - 1; n > -1 && !h().validPositions[n]; n--); var a, r; for (n++; n < t; n++)h().validPositions[n] === i && (!1 === c.jitMasking || c.jitMasking > n) && ("" === (r = C(n, P(n - 1).locator, n - 1).slice())[r.length - 1].match.def && r.pop(), (a = y(n, r)) && (a.match.def === c.radixPointDefinitionSymbol || !F(n, !0) || e.inArray(c.radixPoint, E()) < n && a.match.fn && a.match.fn.test(G(n), h(), n, !1, c)) && !1 !== (b = p(n, G(n, a.match, !0) || (null == a.match.fn ? a.match.def : "" !== G(n) ? G(n) : E()[n]), !0)) && (h().validPositions[b.pos || n].generatedInput = !0)) } r = !0 === r; var d = t; t.begin !== i && (d = X && !u(t) ? t.end : t.begin); var b = !0, M = e.extend(!0, {}, h().validPositions); if (e.isFunction(c.preValidation) && !r && !0 !== o && !0 !== l && (b = c.preValidation(E(), d, n, u(t), c)), !0 === b) { if (m(d), u(t) && (U(i, a.keyCode.DELETE, t, !0, !0), d = h().p), d < h().maskLength && (q === i || d < q) && (b = p(d, n, r), (!r || !0 === o) && !1 === b && !0 !== l)) { var O = h().validPositions[d]; if (!O || null !== O.match.fn || O.match.def !== n && n !== c.skipOptionalPartCharacter) { if ((c.insertMode || h().validPositions[T(d)] === i) && !F(d, !0)) for (var N = d + 1, R = T(d); N <= R; N++)if (!1 !== (b = p(N, n, r))) { b = function (t, n) { var a; t === i && (t = v()); for (var r = t; r < n; r++)if (h().validPositions[r] === i && !F(r, !0)) { var o = 0 == r ? S(r) : h().validPositions[r - 1]; if (o) { var s, l, u, c = x(o), p = C(r).slice(); "" === p[p.length - 1].match.def && p.pop(), e.each(p, function (e, t) { s = x(t, c.length); var n = Math.abs(s - c); (l === i || n < l) && null === t.match.fn && !0 !== t.match.optionality && !0 !== t.match.optionalQuantifier && (l = n, u = t) }), (u = e.extend({}, u, { input: G(r, u.match, !0) || u.match.def })).generatedInput = !0, f(r, u, !0); var m = h().validPositions[n].input; h().validPositions[n] = i, a = j(n, m, !0, !0) } } return a }(d, b.pos !== i ? b.pos : N) || b, d = N; break } } else b = { caret: T(d) } } !1 !== b || !1 === c.keepStatic || r || !0 === s || (b = _(d, n, r, o)), !0 === b && (b = { pos: d }) } if (e.isFunction(c.postValidation) && !1 !== b && !r && !0 !== o && !0 !== l) { var B = c.postValidation(E(!0), b, c); if (B !== i) { if (B.refreshFromBuffer && B.buffer) { var I = B.refreshFromBuffer; w(!0 === I ? I : I.start, I.end, B.buffer) } b = !0 === B ? b : B } } return b && b.pos === i && (b.pos = d), !1 !== b && !0 !== l || (g(!0), h().validPositions = e.extend(!0, {}, M)), b } function F(e, t) { var n = P(e).match; if ("" === n.def && (n = S(e).match), null != n.fn) return n.fn; if (!0 !== t && e > -1) { var i = C(e); return i.length > 1 + ("" === i[i.length - 1].match.def ? 1 : 0) } return !1 } function T(e, t) { var n = h().maskLength; if (e >= n) return n; var i = e; for (C(n + 1).length > 1 && (n = d(!0, n + 1, !1).kength); ++i < n && (!0 === t && (!0 !== S(i).match.newBlockMarker || !F(i)) || !0 !== t && !F(i));); return i } function N(e, t) { var n, i = e; if (i <= 0) return 0; for (; --i > 0 && (!0 === t && !0 !== S(i).match.newBlockMarker || !0 !== t && !F(i) && ((n = C(i)).length < 2 || 2 === n.length && "" === n[1].match.def));); return i } function R(t, n, a, r, o) { if (r && e.isFunction(c.onBeforeWrite)) { var s = c.onBeforeWrite.call(J, r, n, a, c); if (s) { if (s.refreshFromBuffer) { var l = s.refreshFromBuffer; w(!0 === l ? l : l.start, l.end, s.buffer || n), n = E(!0) } a !== i && (a = s.caret !== i ? s.caret : a) } } t !== i && (t.inputmask._valueSet(n.join("")), a === i || r !== i && "blur" === r.type ? Q(t, a, 0 === n.length) : L(t, a), !0 === o && (te = !0, e(t).trigger("input"))) } function G(t, n, a) { if ((n = n || S(t).match).placeholder !== i || !0 === a) return e.isFunction(n.placeholder) ? n.placeholder(c) : n.placeholder; if (null === n.fn) { if (t > -1 && h().validPositions[t] === i) { var r, o = C(t), s = []; if (o.length > 1 + ("" === o[o.length - 1].match.def ? 1 : 0)) for (var l = 0; l < o.length; l++)if (!0 !== o[l].match.optionality && !0 !== o[l].match.optionalQuantifier && (null === o[l].match.fn || r === i || !1 !== o[l].match.fn.test(r.match.def, h(), t, !0, c)) && (s.push(o[l]), null === o[l].match.fn && (r = o[l]), s.length > 1 && /[0-9a-bA-Z]/.test(s[0].match.def))) return c.placeholder.charAt(t % c.placeholder.length) } return n.def } return c.placeholder.charAt(t % c.placeholder.length) } function B(t, n, r, o, s) { function l(e, t) { return -1 !== d(!0, 0, !1).slice(e, T(e)).join("").indexOf(t) && !F(e) && (S(e).match.nativeDef === t.charAt(0) || " " === S(e).match.nativeDef && S(e + 1).match.nativeDef === t.charAt(0)) } var u = o.slice(), p = "", f = -1, m = i; if (g(), r || !0 === c.autoUnmask) f = T(f); else { var k = M().slice(0, T(-1)).join(""), y = u.join("").match(new RegExp("^" + a.escapeRegex(k), "g")); y && y.length > 0 && (u.splice(0, y.length * k.length), f = T(f)) } -1 === f ? (h().p = T(f), f = 0) : h().p = f, e.each(u, function (n, a) { if (a !== i) if (h().validPositions[n] === i && u[n] === G(n) && F(n, !0) && !1 === j(n, u[n], !0, i, i, !0)) h().p++; else { var o = new e.Event("_checkval"); o.which = a.charCodeAt(0), p += a; var s = v(i, !0), d = S(s), g = P(s + 1, d ? d.locator.slice() : i, s); if (!l(f, p) || r || c.autoUnmask) { var k = r ? n : null == g.match.fn && g.match.optionality && s + 1 < h().p ? s + 1 : h().p; (m = oe.keypressEvent.call(t, o, !0, !1, r, k)) && (f = k + 1, p = "") } else m = oe.keypressEvent.call(t, o, !0, !1, !0, s + 1); R(i, E(), m.forwardPosition, o, !1) } }), n && R(t, E(), m ? m.forwardPosition : i, s || new e.Event("checkval"), s && "input" === s.type) } function I(t) { if (t) { if (t.inputmask === i) return t.value; t.inputmask && t.inputmask.refreshValue && oe.setValueEvent.call(t) } var n = [], a = h().validPositions; for (var r in a) a[r].match && null != a[r].match.fn && n.push(a[r].input); var o = 0 === n.length ? "" : (X ? n.reverse() : n).join(""); if (e.isFunction(c.onUnMask)) { var s = (X ? E().slice().reverse() : E()).join(""); o = c.onUnMask.call(J, s, o, c) } return o } function L(a, r, o, s) { function l(e) { return !0 === s || !X || "number" != typeof e || c.greedy && "" === c.placeholder || (e = a.inputmask.__valueGet.call(a).length - e), e } var u; if (r === i) return a.setSelectionRange ? (r = a.selectionStart, o = a.selectionEnd) : t.getSelection ? (u = t.getSelection().getRangeAt(0)).commonAncestorContainer.parentNode !== a && u.commonAncestorContainer !== a || (r = u.startOffset, o = u.endOffset) : n.selection && n.selection.createRange && (o = (r = 0 - (u = n.selection.createRange()).duplicate().moveStart("character", -a.inputmask._valueGet().length)) + u.text.length), { begin: l(r), end: l(o) }; if (e.isArray(r) && (o = X ? r[0] : r[1], r = X ? r[1] : r[0]), r.begin !== i && (o = X ? r.begin : r.end, r = X ? r.end : r.begin), "number" == typeof r) { r = l(r), o = "number" == typeof (o = l(o)) ? o : r; var p = parseInt(((a.ownerDocument.defaultView || t).getComputedStyle ? (a.ownerDocument.defaultView || t).getComputedStyle(a, null) : a.currentStyle).fontSize) * o; if (a.scrollLeft = p > a.scrollWidth ? p : 0, !1 === c.insertMode && r === o && o++, a.inputmask.caretPos = { begin: r, end: o }, a.setSelectionRange) a.selectionStart = r, a.selectionEnd = o; else if (t.getSelection) { if (u = n.createRange(), a.firstChild === i || null === a.firstChild) { var f = n.createTextNode(""); a.appendChild(f) } u.setStart(a.firstChild, r < a.inputmask._valueGet().length ? r : a.inputmask._valueGet().length), u.setEnd(a.firstChild, o < a.inputmask._valueGet().length ? o : a.inputmask._valueGet().length), u.collapse(!0); var m = t.getSelection(); m.removeAllRanges(), m.addRange(u) } else a.createTextRange && ((u = a.createTextRange()).collapse(!0), u.moveEnd("character", o), u.moveStart("character", r), u.select()); Q(a, { begin: r, end: o }) } } function H(t) { var n, a, r = E(), o = r.length, s = v(), l = {}, u = h().validPositions[s], c = u !== i ? u.locator.slice() : i; for (n = s + 1; n < r.length; n++)c = (a = P(n, c, n - 1)).locator.slice(), l[n] = e.extend(!0, {}, a); var p = u && u.alternation !== i ? u.locator[u.alternation] : i; for (n = o - 1; n > s && (((a = l[n]).match.optionality || a.match.optionalQuantifier && a.match.newBlockMarker || p && (p !== l[n].locator[u.alternation] && null != a.match.fn || null === a.match.fn && a.locator[u.alternation] && O(a.locator[u.alternation].toString().split(","), p.toString().split(",")) && "" !== C(n)[0].def)) && r[n] === G(n, a.match)); n--)o--; return t ? { l: o, def: l[o] ? l[o].match : i } : o } function V(e) { for (var t, n = H(), a = e.length, r = h().validPositions[v()]; n < a && !F(n, !0) && (t = r !== i ? P(n, r.locator.slice(""), r) : S(n)) && !0 !== t.match.optionality && (!0 !== t.match.optionalQuantifier && !0 !== t.match.newBlockMarker || n + 1 === a && "" === (r !== i ? P(n + 1, r.locator.slice(""), r) : S(n + 1)).match.def);)n++; for (; (t = h().validPositions[n - 1]) && t && t.match.optionality && t.input === c.skipOptionalPartCharacter;)n--; return e.splice(n), e } function K(t) { if (e.isFunction(c.isComplete)) return c.isComplete(t, c); if ("*" === c.repeat) return i; var n = !1, a = H(!0), r = N(a.l); if (a.def === i || a.def.newBlockMarker || a.def.optionality || a.def.optionalQuantifier) { n = !0; for (var o = 0; o <= r; o++) { var s = P(o).match; if (null !== s.fn && h().validPositions[o] === i && !0 !== s.optionality && !0 !== s.optionalQuantifier || null === s.fn && t[o] !== G(o, s)) { n = !1; break } } } return n } function U(e, t, n, r, o) { if ((c.numericInput || X) && (t === a.keyCode.BACKSPACE ? t = a.keyCode.DELETE : t === a.keyCode.DELETE && (t = a.keyCode.BACKSPACE), X)) { var s = n.end; n.end = n.begin, n.begin = s } if (t === a.keyCode.BACKSPACE && (n.end - n.begin < 1 || !1 === c.insertMode) ? (n.begin = N(n.begin), h().validPositions[n.begin] !== i && h().validPositions[n.begin].input === c.groupSeparator && n.begin--) : t === a.keyCode.DELETE && n.begin === n.end && (n.end = F(n.end, !0) && h().validPositions[n.end] && h().validPositions[n.end].input !== c.radixPoint ? n.end + 1 : T(n.end) + 1, h().validPositions[n.begin] !== i && h().validPositions[n.begin].input === c.groupSeparator && n.end++), k(n.begin, n.end, !1, r), !0 !== r && c.keepStatic) { var l = _(!0); l && (n.begin = l.caret !== i ? l.caret : l.pos ? T(l.pos.begin ? l.pos.begin : l.pos) : v(-1, !0)) } var u = v(n.begin, !0); if (u < n.begin) h().p = T(u); else if (!0 !== r && (h().p = n.begin, !0 !== o)) for (; h().p < u && h().validPositions[h().p] === i;)h().p++ } function z(i) { function a(e) { var t, a = n.createElement("span"); for (var o in r) isNaN(o) && -1 !== o.indexOf("font") && (a.style[o] = r[o]); a.style.textTransform = r.textTransform, a.style.letterSpacing = r.letterSpacing, a.style.position = "absolute", a.style.height = "auto", a.style.width = "auto", a.style.visibility = "hidden", a.style.whiteSpace = "nowrap", n.body.appendChild(a); var s, l = i.inputmask._valueGet(), u = 0; for (t = 0, s = l.length; t <= s; t++) { if (a.innerHTML += l.charAt(t) || "_", a.offsetWidth >= e) { var c = e - u, p = a.offsetWidth - e; a.innerHTML = l.charAt(t), t = (c -= a.offsetWidth / 3) < p ? t - 1 : t; break } u = a.offsetWidth } return n.body.removeChild(a), t } var r = (i.ownerDocument.defaultView || t).getComputedStyle(i, null), o = n.createElement("div"); o.style.width = r.width, o.style.textAlign = r.textAlign, Z = n.createElement("div"), i.inputmask.colorMask = Z, Z.className = "im-colormask", i.parentNode.insertBefore(Z, i), i.parentNode.removeChild(i), Z.appendChild(o), Z.appendChild(i), i.style.left = o.offsetLeft + "px", e(i).on("click", function (e) { return L(i, a(e.clientX)), oe.clickEvent.call(i, [e]) }), e(i).on("keydown", function (e) { e.shiftKey || !1 === c.insertMode || setTimeout(function () { Q(i) }, 0) }) } function Q(e, t, a) { function r(e) { if (e === i && (e = ""), p || null !== o.fn && s.input !== i) if (p && (null !== o.fn && s.input !== i || "" === o.def)) { p = !1; var t = u.length; u[t - 1] = u[t - 1] + "</span>", u.push(e) } else u.push(e); else p = !0, u.push("<span class='im-static'>" + e) } var o, s, l, u = [], p = !1, f = 0; if (Z !== i) { var m = E(); if (t === i ? t = L(e) : t.begin === i && (t = { begin: t, end: t }), !0 !== a) { var d = v(); do { h().validPositions[f] ? (s = h().validPositions[f], o = s.match, l = s.locator.slice(), r(m[f])) : (s = P(f, l, f - 1), o = s.match, l = s.locator.slice(), (!1 === c.jitMasking || f < d || "number" == typeof c.jitMasking && isFinite(c.jitMasking) && c.jitMasking > f) && r(G(f, o))), f++ } while ((q === i || f < q) && (null !== o.fn || "" !== o.def) || d > f || p); p && r(), n.activeElement === e && (u.splice(t.begin, 0, t.begin === t.end ? '<mark class="im-caret" style="border-right-width: 1px;border-right-style: solid;">' : '<mark class="im-caret-select">'), u.splice(t.end + 1, 0, "</mark>")) } var g = Z.getElementsByTagName("div")[0]; g.innerHTML = u.join(""), e.inputmask.positionColorMask(e, g) } } s = s || this.maskset, c = c || this.opts; var W, $, q, Z, J = this, Y = this.el, X = this.isRTL, ee = !1, te = !1, ne = !1, ie = !1, ae = !1, re = { on: function (t, n, r) { var o = function (t) { var n = this; if (n.inputmask === i && "FORM" !== this.nodeName) { var o = e.data(n, "_inputmask_opts"); o ? new a(o).mask(n) : re.off(n) } else { if ("setvalue" === t.type || "FORM" === this.nodeName || !(n.disabled || n.readOnly && !("keydown" === t.type && t.ctrlKey && 67 === t.keyCode || !1 === c.tabThrough && t.keyCode === a.keyCode.TAB))) { switch (t.type) { case "input": if (!0 === te) return te = !1, t.preventDefault(); p && (ae = !0); break; case "keydown": ee = !1, te = !1; break; case "keypress": if (!0 === ee) return t.preventDefault(); ee = !0; break; case "click": if (f || m) { var s = arguments; return setTimeout(function () { r.apply(n, s) }, 0), !1 } }var l = r.apply(n, arguments); return ae && (ae = !1, setTimeout(function () { L(n, n.inputmask.caretPos, i, !0) })), !1 === l && (t.preventDefault(), t.stopPropagation()), l } t.preventDefault() } }; t.inputmask.events[n] = t.inputmask.events[n] || [], t.inputmask.events[n].push(o), -1 !== e.inArray(n, ["submit", "reset"]) ? null !== t.form && e(t.form).on(n, o) : e(t).on(n, o) }, off: function (t, n) { if (t.inputmask && t.inputmask.events) { var i; n ? (i = [])[n] = t.inputmask.events[n] : i = t.inputmask.events, e.each(i, function (n, i) { for (; i.length > 0;) { var a = i.pop(); -1 !== e.inArray(n, ["submit", "reset"]) ? null !== t.form && e(t.form).off(n, a) : e(t).off(n, a) } delete t.inputmask.events[n] }) } } }, oe = { keydownEvent: function (t) { var n = this, i = e(n), r = t.keyCode, o = L(n); if (r === a.keyCode.BACKSPACE || r === a.keyCode.DELETE || m && r === a.keyCode.BACKSPACE_SAFARI || t.ctrlKey && r === a.keyCode.X && !l("cut")) t.preventDefault(), U(0, r, o), R(n, E(!0), h().p, t, n.inputmask._valueGet() !== E().join("")), n.inputmask._valueGet() === M().join("") ? i.trigger("cleared") : !0 === K(E()) && i.trigger("complete"); else if (r === a.keyCode.END || r === a.keyCode.PAGE_DOWN) { t.preventDefault(); var s = T(v()); c.insertMode || s !== h().maskLength || t.shiftKey || s--, L(n, t.shiftKey ? o.begin : s, s, !0) } else r === a.keyCode.HOME && !t.shiftKey || r === a.keyCode.PAGE_UP ? (t.preventDefault(), L(n, 0, t.shiftKey ? o.begin : 0, !0)) : (c.undoOnEscape && r === a.keyCode.ESCAPE || 90 === r && t.ctrlKey) && !0 !== t.altKey ? (B(n, !0, !1, W.split("")), i.trigger("click")) : r !== a.keyCode.INSERT || t.shiftKey || t.ctrlKey ? !0 === c.tabThrough && r === a.keyCode.TAB ? (!0 === t.shiftKey ? (null === S(o.begin).match.fn && (o.begin = T(o.begin)), o.end = N(o.begin, !0), o.begin = N(o.end, !0)) : (o.begin = T(o.begin, !0), o.end = T(o.begin, !0), o.end < h().maskLength && o.end--), o.begin < h().maskLength && (t.preventDefault(), L(n, o.begin, o.end))) : t.shiftKey || !1 === c.insertMode && (r === a.keyCode.RIGHT ? setTimeout(function () { var e = L(n); L(n, e.begin) }, 0) : r === a.keyCode.LEFT && setTimeout(function () { var e = L(n); L(n, X ? e.begin + 1 : e.begin - 1) }, 0)) : (c.insertMode = !c.insertMode, L(n, c.insertMode || o.begin !== h().maskLength ? o.begin : o.begin - 1)); c.onKeyDown.call(this, t, E(), L(n).begin, c), ne = -1 !== e.inArray(r, c.ignorables) }, keypressEvent: function (t, n, r, o, s) { var l = this, u = e(l), p = t.which || t.charCode || t.keyCode; if (!(!0 === n || t.ctrlKey && t.altKey) && (t.ctrlKey || t.metaKey || ne)) return p === a.keyCode.ENTER && W !== E().join("") && (W = E().join(""), setTimeout(function () { u.trigger("change") }, 0)), !0; if (p) { 46 === p && !1 === t.shiftKey && "" !== c.radixPoint && (p = c.radixPoint.charCodeAt(0)); var f, m = n ? { begin: s, end: s } : L(l), d = String.fromCharCode(p); h().writeOutBuffer = !0; var v = j(m, d, o); if (!1 !== v && (g(!0), f = v.caret !== i ? v.caret : T(v.pos.begin ? v.pos.begin : v.pos), h().p = f), f = c.numericInput && v.caret === i ? N(f) : f, !1 !== r && (setTimeout(function () { c.onKeyValidation.call(l, p, v, c) }, 0), h().writeOutBuffer && !1 !== v)) { var k = E(); R(l, k, f, t, !0 !== n), !0 !== n && setTimeout(function () { !0 === K(k) && u.trigger("complete") }, 0) } if (t.preventDefault(), n) return !1 !== v && (v.forwardPosition = f), v } }, pasteEvent: function (n) { var i, a = this, r = n.originalEvent || n, o = e(a), s = a.inputmask._valueGet(!0), l = L(a); X && (i = l.end, l.end = l.begin, l.begin = i); var u = s.substr(0, l.begin), p = s.substr(l.end, s.length); if (u === (X ? M().reverse() : M()).slice(0, l.begin).join("") && (u = ""), p === (X ? M().reverse() : M()).slice(l.end).join("") && (p = ""), X && (i = u, u = p, p = i), t.clipboardData && t.clipboardData.getData) s = u + t.clipboardData.getData("Text") + p; else { if (!r.clipboardData || !r.clipboardData.getData) return !0; s = u + r.clipboardData.getData("text/plain") + p } var f = s; if (e.isFunction(c.onBeforePaste)) { if (!1 === (f = c.onBeforePaste.call(J, s, c))) return n.preventDefault(); f || (f = s) } return B(a, !1, !1, X ? f.split("").reverse() : f.toString().split("")), R(a, E(), T(v()), n, W !== E().join("")), !0 === K(E()) && o.trigger("complete"), n.preventDefault() }, inputFallBackEvent: function (t) { var n = this, i = n.inputmask._valueGet(); if (E().join("") !== i) { var r = L(n); if (i = function (e, t, n) { return "." === t.charAt(n.begin - 1) && "" !== c.radixPoint && ((t = t.split(""))[n.begin - 1] = c.radixPoint.charAt(0), t = t.join("")), t }(0, i, r), i = function (e, t, n) { if (f) { var i = t.replace(E().join(""), ""); if (1 === i.length) { var a = t.split(""); a.splice(n.begin, 0, i), t = a.join("") } } return t }(0, i, r), E().join("") !== i) { var o = E().join(""), s = i.length > o.length ? -1 : 0, l = i.substr(0, r.begin), u = i.substr(r.begin), p = o.substr(0, r.begin + s), m = o.substr(r.begin + s), d = r, h = "", g = !1; if (l !== p) { for (var v = (g = l.length >= p.length) ? l.length : p.length, k = 0; l.charAt(k) === p.charAt(k) && k < v; k++); g && (0 === s && (d.begin = k), h += l.slice(k, d.end)) } if (u !== m && (u.length > m.length ? h += u.slice(0, 1) : u.length < m.length && (d.end += m.length - u.length, g || "" === c.radixPoint || "" !== u || l.charAt(d.begin + s - 1) !== c.radixPoint || (d.begin--, h = c.radixPoint))), R(n, E(), { begin: d.begin + s, end: d.end + s }), h.length > 0) e.each(h.split(""), function (t, i) { var a = new e.Event("keypress"); a.which = i.charCodeAt(0), ne = !1, oe.keypressEvent.call(n, a) }); else { d.begin === d.end - 1 && (d.begin = N(d.begin + 1), d.begin === d.end - 1 ? L(n, d.begin) : L(n, d.begin, d.end)); var y = new e.Event("keydown"); y.keyCode = a.keyCode.DELETE, oe.keydownEvent.call(n, y), !1 === c.insertMode && L(n, L(n).begin - 1) } t.preventDefault() } } }, setValueEvent: function (t) { this.inputmask.refreshValue = !1; var n = this, i = n.inputmask._valueGet(!0); e.isFunction(c.onBeforeMask) && (i = c.onBeforeMask.call(J, i, c) || i), i = i.split(""), B(n, !0, !1, X ? i.reverse() : i), W = E().join(""), (c.clearMaskOnLostFocus || c.clearIncomplete) && n.inputmask._valueGet() === M().join("") && n.inputmask._valueSet("") }, focusEvent: function (e) { var t = this, n = t.inputmask._valueGet(); c.showMaskOnFocus && (!c.showMaskOnHover || c.showMaskOnHover && "" === n) && (t.inputmask._valueGet() !== E().join("") ? R(t, E(), T(v())) : !1 === ie && L(t, T(v()))), !0 === c.positionCaretOnTab && !1 === ie && oe.clickEvent.apply(t, [e, !0]), W = E().join("") }, mouseleaveEvent: function (e) { var t = this; if (ie = !1, c.clearMaskOnLostFocus && n.activeElement !== t) { var i = E().slice(), a = t.inputmask._valueGet(); a !== t.getAttribute("placeholder") && "" !== a && (-1 === v() && a === M().join("") ? i = [] : V(i), R(t, i)) } }, clickEvent: function (t, a) { function r(t) { if ("" !== c.radixPoint) { var n = h().validPositions; if (n[t] === i || n[t].input === G(t)) { if (t < T(-1)) return !0; var a = e.inArray(c.radixPoint, E()); if (-1 !== a) { for (var r in n) if (a < r && n[r].input !== G(r)) return !1; return !0 } } } return !1 } var o = this; setTimeout(function () { if (n.activeElement === o) { var e = L(o); if (a && (X ? e.end = e.begin : e.begin = e.end), e.begin === e.end) switch (c.positionCaretOnClick) { case "none": break; case "select": L(o, 0, E().length); break; case "radixFocus": if (r(e.begin)) { var t = E().join("").indexOf(c.radixPoint); L(o, c.numericInput ? T(t) : t); break } default: var s = e.begin, l = v(s, !0), u = T(l); if (s < u) L(o, F(s, !0) || F(s - 1, !0) ? s : T(s)); else { var p = h().validPositions[l], f = P(u, p ? p.match.locator : i, p), m = G(u, f.match); if ("" !== m && E()[u] !== m && !0 !== f.match.optionalQuantifier && !0 !== f.match.newBlockMarker || !F(u, !0) && f.match.def === m) { var d = T(u); (s >= d || s === u) && (u = d) } L(o, u) } } } }, 0) }, dblclickEvent: function (e) { var t = this; setTimeout(function () { L(t, 0, T(v())) }, 0) }, cutEvent: function (i) { var r = this, o = e(r), s = L(r), l = i.originalEvent || i, u = t.clipboardData || l.clipboardData, c = X ? E().slice(s.end, s.begin) : E().slice(s.begin, s.end); u.setData("text", X ? c.reverse().join("") : c.join("")), n.execCommand && n.execCommand("copy"), U(0, a.keyCode.DELETE, s), R(r, E(), h().p, i, W !== E().join("")), r.inputmask._valueGet() === M().join("") && o.trigger("cleared") }, blurEvent: function (t) { var n = e(this), a = this; if (a.inputmask) { var r = a.inputmask._valueGet(), o = E().slice(); "" === r && Z === i || (c.clearMaskOnLostFocus && (-1 === v() && r === M().join("") ? o = [] : V(o)), !1 === K(o) && (setTimeout(function () { n.trigger("incomplete") }, 0), c.clearIncomplete && (g(), o = c.clearMaskOnLostFocus ? [] : M().slice())), R(a, o, i, t)), W !== E().join("") && (W = o.join(""), n.trigger("change")) } }, mouseenterEvent: function (e) { var t = this; ie = !0, n.activeElement !== t && c.showMaskOnHover && t.inputmask._valueGet() !== E().join("") && R(t, E()) }, submitEvent: function (e) { W !== E().join("") && $.trigger("change"), c.clearMaskOnLostFocus && -1 === v() && Y.inputmask._valueGet && Y.inputmask._valueGet() === M().join("") && Y.inputmask._valueSet(""), c.removeMaskOnSubmit && (Y.inputmask._valueSet(Y.inputmask.unmaskedvalue(), !0), setTimeout(function () { R(Y, E()) }, 0)) }, resetEvent: function (e) { Y.inputmask.refreshValue = !0, setTimeout(function () { $.trigger("setvalue") }, 0) } }; a.prototype.positionColorMask = function (e, t) { e.style.left = t.offsetLeft + "px" }; var se; if (r !== i) switch (r.action) { case "isComplete": return Y = r.el, K(E()); case "unmaskedvalue": return Y !== i && r.value === i || (se = r.value, se = (e.isFunction(c.onBeforeMask) ? c.onBeforeMask.call(J, se, c) || se : se).split(""), B(i, !1, !1, X ? se.reverse() : se), e.isFunction(c.onBeforeWrite) && c.onBeforeWrite.call(J, i, E(), 0, c)), I(Y); case "mask": !function (t) { re.off(t); var a = function (t, a) { var r = t.getAttribute("type"), s = "INPUT" === t.tagName && -1 !== e.inArray(r, a.supportsInputType) || t.isContentEditable || "TEXTAREA" === t.tagName; if (!s) if ("INPUT" === t.tagName) { var l = n.createElement("input"); l.setAttribute("type", r), s = "text" === l.type, l = null } else s = "partial"; return !1 !== s ? function (t) { function r() { return this.inputmask ? this.inputmask.opts.autoUnmask ? this.inputmask.unmaskedvalue() : -1 !== v() || !0 !== a.nullable ? n.activeElement === this && a.clearMaskOnLostFocus ? (X ? V(E().slice()).reverse() : V(E().slice())).join("") : l.call(this) : "" : l.call(this) } function s(t) { u.call(this, t), this.inputmask && e(this).trigger("setvalue") } var l, u; if (!t.inputmask.__valueGet) { if (!0 !== a.noValuePatching) { if (Object.getOwnPropertyDescriptor) { "function" != typeof Object.getPrototypeOf && (Object.getPrototypeOf = "object" === o("test".__proto__) ? function (e) { return e.__proto__ } : function (e) { return e.constructor.prototype }); var c = Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(t), "value") : i; c && c.get && c.set ? (l = c.get, u = c.set, Object.defineProperty(t, "value", { get: r, set: s, configurable: !0 })) : "INPUT" !== t.tagName && (l = function () { return this.textContent }, u = function (e) { this.textContent = e }, Object.defineProperty(t, "value", { get: r, set: s, configurable: !0 })) } else n.__lookupGetter__ && t.__lookupGetter__("value") && (l = t.__lookupGetter__("value"), u = t.__lookupSetter__("value"), t.__defineGetter__("value", r), t.__defineSetter__("value", s)); t.inputmask.__valueGet = l, t.inputmask.__valueSet = u } t.inputmask._valueGet = function (e) { return X && !0 !== e ? l.call(this.el).split("").reverse().join("") : l.call(this.el) }, t.inputmask._valueSet = function (e, t) { u.call(this.el, null === e || e === i ? "" : !0 !== t && X ? e.split("").reverse().join("") : e) }, l === i && (l = function () { return this.value }, u = function (e) { this.value = e }, function (t) { if (e.valHooks && (e.valHooks[t] === i || !0 !== e.valHooks[t].inputmaskpatch)) { var n = e.valHooks[t] && e.valHooks[t].get ? e.valHooks[t].get : function (e) { return e.value }, r = e.valHooks[t] && e.valHooks[t].set ? e.valHooks[t].set : function (e, t) { return e.value = t, e }; e.valHooks[t] = { get: function (e) { if (e.inputmask) { if (e.inputmask.opts.autoUnmask) return e.inputmask.unmaskedvalue(); var t = n(e); return -1 !== v(i, i, e.inputmask.maskset.validPositions) || !0 !== a.nullable ? t : "" } return n(e) }, set: function (t, n) { var i, a = e(t); return i = r(t, n), t.inputmask && a.trigger("setvalue"), i }, inputmaskpatch: !0 } } }(t.type), function (t) { re.on(t, "mouseenter", function (t) { var n = e(this); this.inputmask._valueGet() !== E().join("") && n.trigger("setvalue") }) }(t)) } }(t) : t.inputmask = i, s }(t, c); if (!1 !== a && (Y = t, $ = e(Y), -1 === (q = Y !== i ? Y.maxLength : i) && (q = i), !0 === c.colorMask && z(Y), p && ("inputmode" in Y && (Y.inputmode = c.inputmode, Y.setAttribute("inputmode", c.inputmode)), !0 === c.disablePredictiveText && ("autocorrect" in Y ? Y.autocorrect = !1 : (!0 !== c.colorMask && z(Y), Y.type = "password"))), !0 === a && (re.on(Y, "submit", oe.submitEvent), re.on(Y, "reset", oe.resetEvent), re.on(Y, "mouseenter", oe.mouseenterEvent), re.on(Y, "blur", oe.blurEvent), re.on(Y, "focus", oe.focusEvent), re.on(Y, "mouseleave", oe.mouseleaveEvent), !0 !== c.colorMask && re.on(Y, "click", oe.clickEvent), re.on(Y, "dblclick", oe.dblclickEvent), re.on(Y, "paste", oe.pasteEvent), re.on(Y, "dragdrop", oe.pasteEvent), re.on(Y, "drop", oe.pasteEvent), re.on(Y, "cut", oe.cutEvent), re.on(Y, "complete", c.oncomplete), re.on(Y, "incomplete", c.onincomplete), re.on(Y, "cleared", c.oncleared), p || !0 === c.inputEventOnly ? Y.removeAttribute("maxLength") : (re.on(Y, "keydown", oe.keydownEvent), re.on(Y, "keypress", oe.keypressEvent)), re.on(Y, "compositionstart", e.noop), re.on(Y, "compositionupdate", e.noop), re.on(Y, "compositionend", e.noop), re.on(Y, "keyup", e.noop), re.on(Y, "input", oe.inputFallBackEvent), re.on(Y, "beforeinput", e.noop)), re.on(Y, "setvalue", oe.setValueEvent), W = M().join(""), "" !== Y.inputmask._valueGet(!0) || !1 === c.clearMaskOnLostFocus || n.activeElement === Y)) { var r = e.isFunction(c.onBeforeMask) ? c.onBeforeMask.call(J, Y.inputmask._valueGet(!0), c) || Y.inputmask._valueGet(!0) : Y.inputmask._valueGet(!0); "" !== r && B(Y, !0, !1, X ? r.split("").reverse() : r.split("")); var s = E().slice(); W = s.join(""), !1 === K(s) && c.clearIncomplete && g(), c.clearMaskOnLostFocus && n.activeElement !== Y && (-1 === v() ? s = [] : V(s)), R(Y, s), n.activeElement === Y && L(Y, T(v())) } }(Y); break; case "format": return se = (e.isFunction(c.onBeforeMask) ? c.onBeforeMask.call(J, r.value, c) || r.value : r.value).split(""), B(i, !0, !1, X ? se.reverse() : se), r.metadata ? { value: X ? E().slice().reverse().join("") : E().join(""), metadata: u.call(this, { action: "getmetadata" }, s, c) } : X ? E().slice().reverse().join("") : E().join(""); case "isValid": r.value ? (se = r.value.split(""), B(i, !0, !0, X ? se.reverse() : se)) : r.value = E().join(""); for (var le = E(), ue = H(), ce = le.length - 1; ce > ue && !F(ce); ce--); return le.splice(ue, ce + 1 - ue), K(le) && r.value === E().join(""); case "getemptymask": return M().join(""); case "remove": if (Y && Y.inputmask) { $ = e(Y), Y.inputmask._valueSet(c.autoUnmask ? I(Y) : Y.inputmask._valueGet(!0)), re.off(Y), Y.inputmask.colorMask && ((Z = Y.inputmask.colorMask).removeChild(Y), Z.parentNode.insertBefore(Y, Z), Z.parentNode.removeChild(Z)); Object.getOwnPropertyDescriptor && Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Y), "value") && Y.inputmask.__valueGet && Object.defineProperty(Y, "value", { get: Y.inputmask.__valueGet, set: Y.inputmask.__valueSet, configurable: !0 }) : n.__lookupGetter__ && Y.__lookupGetter__("value") && Y.inputmask.__valueGet && (Y.__defineGetter__("value", Y.inputmask.__valueGet), Y.__defineSetter__("value", Y.inputmask.__valueSet)), Y.inputmask = i } return Y; case "getmetadata": if (e.isArray(s.metadata)) { var pe = d(!0, 0, !1).join(""); return e.each(s.metadata, function (e, t) { if (t.mask === pe) return pe = t, !1 }), pe } return s.metadata } } var c = navigator.userAgent, p = l("touchstart"), f = /iemobile/i.test(c), m = /iphone/i.test(c) && !f; return a.prototype = { dataAttribute: "data-inputmask", defaults: { placeholder: "_", optionalmarker: ["[", "]"], quantifiermarker: ["{", "}"], groupmarker: ["(", ")"], alternatormarker: "|", escapeChar: "\\", mask: null, regex: null, oncomplete: e.noop, onincomplete: e.noop, oncleared: e.noop, repeat: 0, greedy: !0, autoUnmask: !1, removeMaskOnSubmit: !1, clearMaskOnLostFocus: !0, insertMode: !0, clearIncomplete: !1, alias: null, onKeyDown: e.noop, onBeforeMask: null, onBeforePaste: function (t, n) { return e.isFunction(n.onBeforeMask) ? n.onBeforeMask.call(this, t, n) : t }, onBeforeWrite: null, onUnMask: null, showMaskOnFocus: !0, showMaskOnHover: !0, onKeyValidation: e.noop, skipOptionalPartCharacter: " ", numericInput: !1, rightAlign: !1, undoOnEscape: !0, radixPoint: "", radixPointDefinitionSymbol: i, groupSeparator: "", keepStatic: null, positionCaretOnTab: !0, tabThrough: !1, supportsInputType: ["text", "tel", "password", "search"], ignorables: [8, 9, 13, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 0, 229], isComplete: null, canClearPosition: e.noop, preValidation: null, postValidation: null, staticDefinitionSymbol: i, jitMasking: !1, nullable: !0, inputEventOnly: !1, noValuePatching: !1, positionCaretOnClick: "lvp", casing: null, inputmode: "verbatim", colorMask: !1, disablePredictiveText: !1, importDataAttributes: !0 }, definitions: { 9: { validator: "[0-9１-９]", definitionSymbol: "*" }, a: { validator: "[A-Za-zА-яЁёÀ-ÿµ]", definitionSymbol: "*" }, "*": { validator: "[0-9１-９A-Za-zА-яЁёÀ-ÿµ]" } }, aliases: {}, masksCache: {}, mask: function (o) { function l(n, a, o, s) { if (!0 === a.importDataAttributes) { var l, u, c, p, f = function (e, a) { null !== (a = a !== i ? a : n.getAttribute(s + "-" + e)) && ("string" == typeof a && (0 === e.indexOf("on") ? a = t[a] : "false" === a ? a = !1 : "true" === a && (a = !0)), o[e] = a) }, m = n.getAttribute(s); if (m && "" !== m && (m = m.replace(/'/g, '"'), u = JSON.parse("{" + m + "}")), u) { c = i; for (p in u) if ("alias" === p.toLowerCase()) { c = u[p]; break } } f("alias", c), o.alias && r(o.alias, o, a); for (l in a) { if (u) { c = i; for (p in u) if (p.toLowerCase() === l.toLowerCase()) { c = u[p]; break } } f(l, c) } } return e.extend(!0, a, o), ("rtl" === n.dir || a.rightAlign) && (n.style.textAlign = "right"), ("rtl" === n.dir || a.numericInput) && (n.dir = "ltr", n.removeAttribute("dir"), a.isRTL = !0), Object.keys(o).length } var c = this; return "string" == typeof o && (o = n.getElementById(o) || n.querySelectorAll(o)), o = o.nodeName ? [o] : o, e.each(o, function (t, n) { var r = e.extend(!0, {}, c.opts); if (l(n, r, e.extend(!0, {}, c.userOptions), c.dataAttribute)) { var o = s(r, c.noMasksCache); o !== i && (n.inputmask !== i && (n.inputmask.opts.autoUnmask = !0, n.inputmask.remove()), n.inputmask = new a(i, i, !0), n.inputmask.opts = r, n.inputmask.noMasksCache = c.noMasksCache, n.inputmask.userOptions = e.extend(!0, {}, c.userOptions), n.inputmask.isRTL = r.isRTL || r.numericInput, n.inputmask.el = n, n.inputmask.maskset = o, e.data(n, "_inputmask_opts", r), u.call(n.inputmask, { action: "mask" })) } }), o && o[0] ? o[0].inputmask || this : this }, option: function (t, n) { return "string" == typeof t ? this.opts[t] : "object" === (void 0 === t ? "undefined" : o(t)) ? (e.extend(this.userOptions, t), this.el && !0 !== n && this.mask(this.el), this) : void 0 }, unmaskedvalue: function (e) { return this.maskset = this.maskset || s(this.opts, this.noMasksCache), u.call(this, { action: "unmaskedvalue", value: e }) }, remove: function () { return u.call(this, { action: "remove" }) }, getemptymask: function () { return this.maskset = this.maskset || s(this.opts, this.noMasksCache), u.call(this, { action: "getemptymask" }) }, hasMaskedValue: function () { return !this.opts.autoUnmask }, isComplete: function () { return this.maskset = this.maskset || s(this.opts, this.noMasksCache), u.call(this, { action: "isComplete" }) }, getmetadata: function () { return this.maskset = this.maskset || s(this.opts, this.noMasksCache), u.call(this, { action: "getmetadata" }) }, isValid: function (e) { return this.maskset = this.maskset || s(this.opts, this.noMasksCache), u.call(this, { action: "isValid", value: e }) }, format: function (e, t) { return this.maskset = this.maskset || s(this.opts, this.noMasksCache), u.call(this, { action: "format", value: e, metadata: t }) }, analyseMask: function (t, n, r) { function o(e, t, n, i) { this.matches = [], this.openGroup = e || !1, this.alternatorGroup = !1, this.isGroup = e || !1, this.isOptional = t || !1, this.isQuantifier = n || !1, this.isAlternator = i || !1, this.quantifier = { min: 1, max: 1 } } function s(t, o, s) { s = s !== i ? s : t.matches.length; var l = t.matches[s - 1]; if (n) 0 === o.indexOf("[") || b && /\\d|\\s|\\w]/i.test(o) || "." === o ? t.matches.splice(s++, 0, { fn: new RegExp(o, r.casing ? "i" : ""), optionality: t.isOptional, newBlockMarker: l === i || l.def !== o, casing: null, def: o, placeholder: i, nativeDef: o }) : (b && (o = o[o.length - 1]), e.each(o.split(""), function (e, n) { l = t.matches[s - 1], t.matches.splice(s++, 0, { fn: null, optionality: t.isOptional, newBlockMarker: l === i || l.def !== n && null !== l.fn, casing: null, def: r.staticDefinitionSymbol || n, placeholder: r.staticDefinitionSymbol !== i ? n : i, nativeDef: n }) })), b = !1; else { var u = (r.definitions ? r.definitions[o] : i) || a.prototype.definitions[o]; u && !b ? t.matches.splice(s++, 0, { fn: u.validator ? "string" == typeof u.validator ? new RegExp(u.validator, r.casing ? "i" : "") : new function () { this.test = u.validator } : new RegExp("."), optionality: t.isOptional, newBlockMarker: l === i || l.def !== (u.definitionSymbol || o), casing: u.casing, def: u.definitionSymbol || o, placeholder: u.placeholder, nativeDef: o }) : (t.matches.splice(s++, 0, { fn: null, optionality: t.isOptional, newBlockMarker: l === i || l.def !== o && null !== l.fn, casing: null, def: r.staticDefinitionSymbol || o, placeholder: r.staticDefinitionSymbol !== i ? o : i, nativeDef: o }), b = !1) } } function l(t) { t && t.matches && e.each(t.matches, function (e, a) { var o = t.matches[e + 1]; (o === i || o.matches === i || !1 === o.isQuantifier) && a && a.isGroup && (a.isGroup = !1, n || (s(a, r.groupmarker[0], 0), !0 !== a.openGroup && s(a, r.groupmarker[1]))), l(a) }) } function u() { if (P.length > 0) { if (d = P[P.length - 1], s(d, f), d.isAlternator) { h = P.pop(); for (var e = 0; e < h.matches.length; e++)h.matches[e].isGroup = !1; P.length > 0 ? (d = P[P.length - 1]).matches.push(h) : x.matches.push(h) } } else s(x, f) } function c(e) { e.matches = e.matches.reverse(); for (var t in e.matches) if (e.matches.hasOwnProperty(t)) { var n = parseInt(t); if (e.matches[t].isQuantifier && e.matches[n + 1] && e.matches[n + 1].isGroup) { var a = e.matches[t]; e.matches.splice(t, 1), e.matches.splice(n + 1, 0, a) } e.matches[t].matches !== i ? e.matches[t] = c(e.matches[t]) : e.matches[t] = function (e) { return e === r.optionalmarker[0] ? e = r.optionalmarker[1] : e === r.optionalmarker[1] ? e = r.optionalmarker[0] : e === r.groupmarker[0] ? e = r.groupmarker[1] : e === r.groupmarker[1] && (e = r.groupmarker[0]), e }(e.matches[t]) } return e } var p, f, m, d, h, g, v, k = /(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g, y = /\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g, b = !1, x = new o, P = [], S = []; for (n && (r.optionalmarker[0] = i, r.optionalmarker[1] = i); p = n ? y.exec(t) : k.exec(t);) { if (f = p[0], n) switch (f.charAt(0)) { case "?": f = "{0,1}"; break; case "+": case "*": f = "{" + f + "}" }if (b) u(); else switch (f.charAt(0)) { case r.escapeChar: b = !0, n && u(); break; case r.optionalmarker[1]: case r.groupmarker[1]: if (m = P.pop(), m.openGroup = !1, m !== i) if (P.length > 0) { if ((d = P[P.length - 1]).matches.push(m), d.isAlternator) { h = P.pop(); for (var A = 0; A < h.matches.length; A++)h.matches[A].isGroup = !1, h.matches[A].alternatorGroup = !1; P.length > 0 ? (d = P[P.length - 1]).matches.push(h) : x.matches.push(h) } } else x.matches.push(m); else u(); break; case r.optionalmarker[0]: P.push(new o(!1, !0)); break; case r.groupmarker[0]: P.push(new o(!0)); break; case r.quantifiermarker[0]: var C = new o(!1, !1, !0), M = (f = f.replace(/[{}]/g, "")).split(","), E = isNaN(M[0]) ? M[0] : parseInt(M[0]), w = 1 === M.length ? E : isNaN(M[1]) ? M[1] : parseInt(M[1]); if ("*" !== w && "+" !== w || (E = "*" === w ? 0 : 1), C.quantifier = { min: E, max: w }, P.length > 0) { var D = P[P.length - 1].matches; (p = D.pop()).isGroup || ((v = new o(!0)).matches.push(p), p = v), D.push(p), D.push(C) } else (p = x.matches.pop()).isGroup || (n && null === p.fn && "." === p.def && (p.fn = new RegExp(p.def, r.casing ? "i" : "")), (v = new o(!0)).matches.push(p), p = v), x.matches.push(p), x.matches.push(C); break; case r.alternatormarker: if (P.length > 0) { var O = (d = P[P.length - 1]).matches[d.matches.length - 1]; g = d.openGroup && (O.matches === i || !1 === O.isGroup && !1 === O.isAlternator) ? P.pop() : d.matches.pop() } else g = x.matches.pop(); if (g.isAlternator) P.push(g); else if (g.alternatorGroup ? (h = P.pop(), g.alternatorGroup = !1) : h = new o(!1, !1, !1, !0), h.matches.push(g), P.push(h), g.openGroup) { g.openGroup = !1; var _ = new o(!0); _.alternatorGroup = !0, P.push(_) } break; default: u() } } for (; P.length > 0;)m = P.pop(), x.matches.push(m); return x.matches.length > 0 && (l(x), S.push(x)), (r.numericInput || r.isRTL) && c(S[0]), S } }, a.extendDefaults = function (t) { e.extend(!0, a.prototype.defaults, t) }, a.extendDefinitions = function (t) { e.extend(!0, a.prototype.definitions, t) }, a.extendAliases = function (t) { e.extend(!0, a.prototype.aliases, t) }, a.format = function (e, t, n) { return a(t).format(e, n) }, a.unmask = function (e, t) { return a(t).unmaskedvalue(e) }, a.isValid = function (e, t) { return a(t).isValid(e) }, a.remove = function (t) { e.each(t, function (e, t) { t.inputmask && t.inputmask.remove() }) }, a.escapeRegex = function (e) { var t = ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^"]; return e.replace(new RegExp("(\\" + t.join("|\\") + ")", "gim"), "\\$1") }, a.keyCode = { BACKSPACE: 8, BACKSPACE_SAFARI: 127, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, INSERT: 45, LEFT: 37, PAGE_DOWN: 34, PAGE_UP: 33, RIGHT: 39, SPACE: 32, TAB: 9, UP: 38, X: 88, CONTROL: 17 }, a }) }, function (e, t) { e.exports = jQuery }, function (e, t, n) { "use strict"; function i(e) { return e && e.__esModule ? e : { default: e } } n(4), n(7), n(8), n(9); var a = i(n(1)), r = i(n(0)), o = i(n(2)); r.default === o.default && n(10), window.Inputmask = a.default }, function (e, t, n) { "use strict"; var i, a, r; "function" == typeof Symbol && Symbol.iterator; !function (o) { a = [n(0), n(1)], void 0 !== (r = "function" == typeof (i = o) ? i.apply(t, a) : i) && (e.exports = r) }(function (e, t) { function n(e) { if (!e.tokenizer) { var t = []; for (var n in l) -1 === t.indexOf(n[0]) && t.push(n[0]); e.tokenizer = "(" + t.join("+|") + ")+?|.", e.tokenizer = new RegExp(e.tokenizer, "g") } return e.tokenizer } function i(e, t) { return (!isFinite(e.day) || "29" == e.day && !isFinite(e.rawyear) || new Date(e.date.getFullYear(), isFinite(e.month) ? e.month : e.date.getMonth() + 1, 0).getDate() >= e.day) && t } function a(e, t) { var n = !0; return t.min && t.min.date.getTime() === t.min.date.getTime() && (n = n && t.min.date.getTime() <= e.getTime()), t.max && t.max.date.getTime() === t.max.date.getTime() && (n = n && t.max.date.getTime() >= e.getTime()), n } function r(e, t, i) { for (var a, r = ""; a = n(i).exec(e);)void 0 === t ? r += l[a[0]] ? "(" + l[a[0]][0] + ")" : a[0] : l[a[0]] ? r += l[a[0]][3].call(t.date) : r += a[0]; return r } function o(e, t) { for (e = String(e), t = t || 2; e.length < t;)e = "0" + e; return e } function s(e, t, i) { function a(e) { var t = 4 === e.length ? e : (new Date).getFullYear().toString().substr(0, 4 - e.length) + e; return i.min && i.min.year && i.max && i.max.year ? (t = t.replace(/[^0-9]/g, ""), t = e.charAt(0) === i.max.year.charAt(0) ? e.replace(/[^0-9]/g, "0") : t + i.min.year.substr(t.length)) : t = t.replace(/[^0-9]/g, "0"), t } var r, o, s, u = { date: new Date(1, 0, 1) }, c = e; if ("string" == typeof c) { for (; o = n(i).exec(t);) { var p = c.slice(0, o[0].length); l.hasOwnProperty(o[0]) && (r = l[o[0]][2], s = l[o[0]][1], function (e, t, n) { "year" === r ? (e[r] = a(t), e["raw" + r] = t) : e[r] = n.min && t.match(/[^0-9]/) ? n.min[r] : t, void 0 !== s && s.call(e.date, "month" == r ? parseInt(e[r]) - 1 : e[r]) }(u, p, i)), c = c.slice(p.length) } return u } } var l = { d: ["[1-9]|[12][0-9]|3[01]", Date.prototype.setDate, "day", Date.prototype.getDate], dd: ["0[1-9]|[12][0-9]|3[01]", Date.prototype.setDate, "day", function () { return o(Date.prototype.getDate.call(this), 2) }], ddd: [""], dddd: [""], m: ["[1-9]|1[012]", Date.prototype.setMonth, "month", function () { return Date.prototype.getMonth.call(this) + 1 }], mm: ["0[1-9]|1[012]", Date.prototype.setMonth, "month", function () { return o(Date.prototype.getMonth.call(this) + 1, 2) }], mmm: [""], mmmm: [""], yy: ["[0-9]{2}", Date.prototype.setFullYear, "year", function () { return o(Date.prototype.getFullYear.call(this), 2) }], yyyy: ["[0-9]{4}", Date.prototype.setFullYear, "year", function () { return o(Date.prototype.getFullYear.call(this), 4) }], h: ["[1-9]|1[0-2]", Date.prototype.setHours, "hours", Date.prototype.getHours], hh: ["0[1-9]|1[0-2]", Date.prototype.setHours, "hours", function () { return o(Date.prototype.getHours.call(this), 2) }], hhh: ["[0-9]+", Date.prototype.setHours, "hours", Date.prototype.getHours], H: ["1?[0-9]|2[0-3]", Date.prototype.setHours, "hours", Date.prototype.getHours], HH: ["[01][0-9]|2[0-3]", Date.prototype.setHours, "hours", function () { return o(Date.prototype.getHours.call(this), 2) }], HHH: ["[0-9]+", Date.prototype.setHours, "hours", Date.prototype.getHours], M: ["[1-5]?[0-9]", Date.prototype.setMinutes, "minutes", Date.prototype.getMinutes], MM: ["[0-5][0-9]", Date.prototype.setMinutes, "minutes", function () { return o(Date.prototype.getMinutes.call(this), 2) }], s: ["[1-5]?[0-9]", Date.prototype.setSeconds, "seconds", Date.prototype.getSeconds], ss: ["[0-5][0-9]", Date.prototype.setSeconds, "seconds", function () { return o(Date.prototype.getSeconds.call(this), 2) }], l: ["[0-9]{3}", Date.prototype.setMilliseconds, "milliseconds", function () { return o(Date.prototype.getMilliseconds.call(this), 3) }], L: ["[0-9]{2}", Date.prototype.setMilliseconds, "milliseconds", function () { return o(Date.prototype.getMilliseconds.call(this), 2) }], t: [""], tt: [""], T: [""], TT: [""], Z: [""], o: [""], S: [""] }, u = { isoDate: "yyyy-mm-dd", isoTime: "HH:MM:ss", isoDateTime: "yyyy-mm-dd'T'HH:MM:ss", isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'" }; return t.extendAliases({ datetime: { mask: function (e) { return e.inputFormat = u[e.inputFormat] || e.inputFormat, e.displayFormat = u[e.displayFormat] || e.displayFormat || e.inputFormat, e.outputFormat = u[e.outputFormat] || e.outputFormat || e.inputFormat, e.placeholder = e.placeholder !== t.prototype.defaults.placeholder ? e.placeholder : e.inputFormat, e.min = s(e.min, e.inputFormat, e), e.max = s(e.max, e.inputFormat, e), e.regex = r(e.inputFormat, void 0, e), null }, inputFormat: "isoDateTime", displayFormat: void 0, outputFormat: void 0, min: null, max: null, i18n: { dayNames: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"], monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] }, postValidation: function (e, t, n) { var r = t, o = s(e.join(""), n.inputFormat, n); return r && o.date.getTime() === o.date.getTime() && (r = (r = i(o, r)) && a(o.date, n)), r }, onKeyDown: function (i, a, r, s) { var l = this; if (i.ctrlKey && i.keyCode === t.keyCode.RIGHT) { for (var u, c = new Date, p = ""; u = n(s).exec(s.inputFormat);)"d" === u[0].charAt(0) ? p += o(c.getDate(), u[0].length) : "m" === u[0].charAt(0) ? p += o(c.getMonth() + 1, u[0].length) : "yyyy" === u[0] ? p += c.getFullYear().toString() : "y" === u[0].charAt(0) && (p += o(c.getYear(), u[0].length)); l.inputmask._valueSet(p), e(l).trigger("setvalue") } }, onUnMask: function (e, t, n) { return r(n.outputFormat, s(e, n.inputFormat, n), n) }, insertMode: !1 } }), t }) }, function (e, t, n) { "use strict"; var i; "function" == typeof Symbol && Symbol.iterator; void 0 !== (i = function () { return window }.call(t, n, t, e)) && (e.exports = i) }, function (e, t, n) { "use strict"; var i; "function" == typeof Symbol && Symbol.iterator; void 0 !== (i = function () { return document }.call(t, n, t, e)) && (e.exports = i) }, function (e, t, n) { "use strict"; var i, a, r; "function" == typeof Symbol && Symbol.iterator; !function (o) { a = [n(0), n(1)], void 0 !== (r = "function" == typeof (i = o) ? i.apply(t, a) : i) && (e.exports = r) }(function (e, t) { return t.extendDefinitions({ A: { validator: "[A-Za-zА-яЁёÀ-ÿµ]", casing: "upper" }, "&": { validator: "[0-9A-Za-zА-яЁёÀ-ÿµ]", casing: "upper" }, "#": { validator: "[0-9A-Fa-f]", casing: "upper" } }), t.extendAliases({ url: { definitions: { i: { validator: "." } }, mask: "(\\http://)|(\\http\\s://)|(ftp://)|(ftp\\s://)i{+}", insertMode: !1, autoUnmask: !1, inputmode: "url" }, ip: { mask: "i[i[i]].i[i[i]].i[i[i]].i[i[i]]", definitions: { i: { validator: function (e, t, n, i, a) { return n - 1 > -1 && "." !== t.buffer[n - 1] ? (e = t.buffer[n - 1] + e, e = n - 2 > -1 && "." !== t.buffer[n - 2] ? t.buffer[n - 2] + e : "0" + e) : e = "00" + e, new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]").test(e) } } }, onUnMask: function (e, t, n) { return e }, inputmode: "numeric" }, email: { mask: "*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]", greedy: !1, onBeforePaste: function (e, t) { return (e = e.toLowerCase()).replace("mailto:", "") }, definitions: { "*": { validator: "[0-9A-Za-z!#$%&'*+/=?^_`{|}~-]", casing: "lower" }, "-": { validator: "[0-9A-Za-z-]", casing: "lower" } }, onUnMask: function (e, t, n) { return e }, inputmode: "email" }, mac: { mask: "##:##:##:##:##:##" }, vin: { mask: "V{13}9{4}", definitions: { V: { validator: "[A-HJ-NPR-Za-hj-npr-z\\d]", casing: "upper" } }, clearIncomplete: !0, autoUnmask: !0 } }), t }) }, function (e, t, n) { "use strict"; var i, a, r; "function" == typeof Symbol && Symbol.iterator; !function (o) { a = [n(0), n(1)], void 0 !== (r = "function" == typeof (i = o) ? i.apply(t, a) : i) && (e.exports = r) }(function (e, t, n) { function i(e, n) { for (var i = "", a = 0; a < e.length; a++)t.prototype.definitions[e.charAt(a)] || n.definitions[e.charAt(a)] || n.optionalmarker.start === e.charAt(a) || n.optionalmarker.end === e.charAt(a) || n.quantifiermarker.start === e.charAt(a) || n.quantifiermarker.end === e.charAt(a) || n.groupmarker.start === e.charAt(a) || n.groupmarker.end === e.charAt(a) || n.alternatormarker === e.charAt(a) ? i += "\\" + e.charAt(a) : i += e.charAt(a); return i } return t.extendAliases({ numeric: { mask: function (e) { if (0 !== e.repeat && isNaN(e.integerDigits) && (e.integerDigits = e.repeat), e.repeat = 0, e.groupSeparator === e.radixPoint && e.digits && "0" !== e.digits && ("." === e.radixPoint ? e.groupSeparator = "," : "," === e.radixPoint ? e.groupSeparator = "." : e.groupSeparator = ""), " " === e.groupSeparator && (e.skipOptionalPartCharacter = n), e.autoGroup = e.autoGroup && "" !== e.groupSeparator, e.autoGroup && ("string" == typeof e.groupSize && isFinite(e.groupSize) && (e.groupSize = parseInt(e.groupSize)), isFinite(e.integerDigits))) { var t = Math.floor(e.integerDigits / e.groupSize), a = e.integerDigits % e.groupSize; e.integerDigits = parseInt(e.integerDigits) + (0 === a ? t - 1 : t), e.integerDigits < 1 && (e.integerDigits = "*") } e.placeholder.length > 1 && (e.placeholder = e.placeholder.charAt(0)), "radixFocus" === e.positionCaretOnClick && "" === e.placeholder && !1 === e.integerOptional && (e.positionCaretOnClick = "lvp"), e.definitions[";"] = e.definitions["~"], e.definitions[";"].definitionSymbol = "~", !0 === e.numericInput && (e.positionCaretOnClick = "radixFocus" === e.positionCaretOnClick ? "lvp" : e.positionCaretOnClick, e.digitsOptional = !1, isNaN(e.digits) && (e.digits = 2), e.decimalProtect = !1); var r = "[+]"; if (r += i(e.prefix, e), !0 === e.integerOptional ? r += "~{1," + e.integerDigits + "}" : r += "~{" + e.integerDigits + "}", e.digits !== n) { e.radixPointDefinitionSymbol = e.decimalProtect ? ":" : e.radixPoint; var o = e.digits.toString().split(","); isFinite(o[0] && o[1] && isFinite(o[1])) ? r += e.radixPointDefinitionSymbol + ";{" + e.digits + "}" : (isNaN(e.digits) || parseInt(e.digits) > 0) && (e.digitsOptional ? r += "[" + e.radixPointDefinitionSymbol + ";{1," + e.digits + "}]" : r += e.radixPointDefinitionSymbol + ";{" + e.digits + "}") } return r += i(e.suffix, e), r += "[-]", e.greedy = !1, r }, placeholder: "", greedy: !1, digits: "*", digitsOptional: !0, enforceDigitsOnBlur: !1, radixPoint: ".", positionCaretOnClick: "radixFocus", groupSize: 3, groupSeparator: "", autoGroup: !1, allowMinus: !0, negationSymbol: { front: "-", back: "" }, integerDigits: "+", integerOptional: !0, prefix: "", suffix: "", rightAlign: !0, decimalProtect: !0, min: null, max: null, step: 1, insertMode: !0, autoUnmask: !1, unmaskAsNumber: !1, inputmode: "numeric", preValidation: function (t, i, a, r, o) { if ("-" === a || a === o.negationSymbol.front) return !0 === o.allowMinus && (o.isNegative = o.isNegative === n || !o.isNegative, "" === t.join("") || { caret: i, dopost: !0 }); if (!1 === r && a === o.radixPoint && o.digits !== n && (isNaN(o.digits) || parseInt(o.digits) > 0)) { var s = e.inArray(o.radixPoint, t); if (-1 !== s) return !0 === o.numericInput ? i === s : { caret: s + 1 } } return !0 }, postValidation: function (i, a, r) { var o = r.suffix.split(""), s = r.prefix.split(""); if (a.pos === n && a.caret !== n && !0 !== a.dopost) return a; var l = a.caret !== n ? a.caret : a.pos, u = i.slice(); r.numericInput && (l = u.length - l - 1, u = u.reverse()); var c = u[l]; if (c === r.groupSeparator && (c = u[l += 1]), l === u.length - r.suffix.length - 1 && c === r.radixPoint) return a; c !== n && c !== r.radixPoint && c !== r.negationSymbol.front && c !== r.negationSymbol.back && (u[l] = "?", r.prefix.length > 0 && l >= (!1 === r.isNegative ? 1 : 0) && l < r.prefix.length - 1 + (!1 === r.isNegative ? 1 : 0) ? s[l - (!1 === r.isNegative ? 1 : 0)] = "?" : r.suffix.length > 0 && l >= u.length - r.suffix.length - (!1 === r.isNegative ? 1 : 0) && (o[l - (u.length - r.suffix.length - (!1 === r.isNegative ? 1 : 0))] = "?")), s = s.join(""), o = o.join(""); var p = u.join("").replace(s, ""); if (p = p.replace(o, ""), p = p.replace(new RegExp(t.escapeRegex(r.groupSeparator), "g"), ""), p = p.replace(new RegExp("[-" + t.escapeRegex(r.negationSymbol.front) + "]", "g"), ""), p = p.replace(new RegExp(t.escapeRegex(r.negationSymbol.back) + "$"), ""), isNaN(r.placeholder) && (p = p.replace(new RegExp(t.escapeRegex(r.placeholder), "g"), "")), p.length > 1 && 1 !== p.indexOf(r.radixPoint) && ("0" === c && (p = p.replace(/^\?/g, "")), p = p.replace(/^0/g, "")), p.charAt(0) === r.radixPoint && "" !== r.radixPoint && !0 !== r.numericInput && (p = "0" + p), "" !== p) { if (p = p.split(""), (!r.digitsOptional || r.enforceDigitsOnBlur && "blur" === a.event) && isFinite(r.digits)) { var f = e.inArray(r.radixPoint, p), m = e.inArray(r.radixPoint, u); -1 === f && (p.push(r.radixPoint), f = p.length - 1); for (var d = 1; d <= r.digits; d++)r.digitsOptional && (!r.enforceDigitsOnBlur || "blur" !== a.event) || p[f + d] !== n && p[f + d] !== r.placeholder.charAt(0) ? -1 !== m && u[m + d] !== n && (p[f + d] = p[f + d] || u[m + d]) : p[f + d] = a.placeholder || r.placeholder.charAt(0) } if (!0 !== r.autoGroup || "" === r.groupSeparator || c === r.radixPoint && a.pos === n && !a.dopost) p = p.join(""); else { var h = p[p.length - 1] === r.radixPoint && a.c === r.radixPoint; p = t(function (e, t) { var n = ""; if (n += "(" + t.groupSeparator + "*{" + t.groupSize + "}){*}", "" !== t.radixPoint) { var i = e.join("").split(t.radixPoint); i[1] && (n += t.radixPoint + "*{" + i[1].match(/^\d*\??\d*/)[0].length + "}") } return n }(p, r), { numericInput: !0, jitMasking: !0, definitions: { "*": { validator: "[0-9?]", cardinality: 1 } } }).format(p.join("")), h && (p += r.radixPoint), p.charAt(0) === r.groupSeparator && p.substr(1) } } if (r.isNegative && "blur" === a.event && (r.isNegative = "0" !== p), p = s + p, p += o, r.isNegative && (p = r.negationSymbol.front + p, p += r.negationSymbol.back), p = p.split(""), c !== n) if (c !== r.radixPoint && c !== r.negationSymbol.front && c !== r.negationSymbol.back) (l = e.inArray("?", p)) > -1 ? p[l] = c : l = a.caret || 0; else if (c === r.radixPoint || c === r.negationSymbol.front || c === r.negationSymbol.back) { var g = e.inArray(c, p); -1 !== g && (l = g) } r.numericInput && (l = p.length - l - 1, p = p.reverse()); var v = { caret: c === n || a.pos !== n ? l + (r.numericInput ? -1 : 1) : l, buffer: p, refreshFromBuffer: a.dopost || i.join("") !== p.join("") }; return v.refreshFromBuffer ? v : a }, onBeforeWrite: function (i, a, r, o) { if (i) switch (i.type) { case "keydown": return o.postValidation(a, { caret: r, dopost: !0 }, o); case "blur": case "checkval": var s; if (function (e) { e.parseMinMaxOptions === n && (null !== e.min && (e.min = e.min.toString().replace(new RegExp(t.escapeRegex(e.groupSeparator), "g"), ""), "," === e.radixPoint && (e.min = e.min.replace(e.radixPoint, ".")), e.min = isFinite(e.min) ? parseFloat(e.min) : NaN, isNaN(e.min) && (e.min = Number.MIN_VALUE)), null !== e.max && (e.max = e.max.toString().replace(new RegExp(t.escapeRegex(e.groupSeparator), "g"), ""), "," === e.radixPoint && (e.max = e.max.replace(e.radixPoint, ".")), e.max = isFinite(e.max) ? parseFloat(e.max) : NaN, isNaN(e.max) && (e.max = Number.MAX_VALUE)), e.parseMinMaxOptions = "done") }(o), null !== o.min || null !== o.max) { if (s = o.onUnMask(a.join(""), n, e.extend({}, o, { unmaskAsNumber: !0 })), null !== o.min && s < o.min) return o.isNegative = o.min < 0, o.postValidation(o.min.toString().replace(".", o.radixPoint).split(""), { caret: r, dopost: !0, placeholder: "0" }, o); if (null !== o.max && s > o.max) return o.isNegative = o.max < 0, o.postValidation(o.max.toString().replace(".", o.radixPoint).split(""), { caret: r, dopost: !0, placeholder: "0" }, o) } return o.postValidation(a, { caret: r, placeholder: "0", event: "blur" }, o); case "_checkval": return { caret: r } } }, regex: { integerPart: function (e, n) { return n ? new RegExp("[" + t.escapeRegex(e.negationSymbol.front) + "+]?") : new RegExp("[" + t.escapeRegex(e.negationSymbol.front) + "+]?\\d+") }, integerNPart: function (e) { return new RegExp("[\\d" + t.escapeRegex(e.groupSeparator) + t.escapeRegex(e.placeholder.charAt(0)) + "]+") } }, definitions: { "~": { validator: function (e, i, a, r, o, s) { var l = r ? new RegExp("[0-9" + t.escapeRegex(o.groupSeparator) + "]").test(e) : new RegExp("[0-9]").test(e); if (!0 === l) { if (!0 !== o.numericInput && i.validPositions[a] !== n && "~" === i.validPositions[a].match.def && !s) { var u = i.buffer.join(""), c = (u = (u = u.replace(new RegExp("[-" + t.escapeRegex(o.negationSymbol.front) + "]", "g"), "")).replace(new RegExp(t.escapeRegex(o.negationSymbol.back) + "$"), "")).split(o.radixPoint); c.length > 1 && (c[1] = c[1].replace(/0/g, o.placeholder.charAt(0))), "0" === c[0] && (c[0] = c[0].replace(/0/g, o.placeholder.charAt(0))), u = c[0] + o.radixPoint + c[1] || ""; var p = i._buffer.join(""); for (u === o.radixPoint && (u = p); null === u.match(t.escapeRegex(p) + "$");)p = p.slice(1); l = (u = (u = u.replace(p, "")).split(""))[a] === n ? { pos: a, remove: a } : { pos: a } } } else r || e !== o.radixPoint || i.validPositions[a - 1] !== n || (i.buffer[a] = "0", l = { pos: a + 1 }); return l }, cardinality: 1 }, "+": { validator: function (e, t, n, i, a) { return a.allowMinus && ("-" === e || e === a.negationSymbol.front) }, cardinality: 1, placeholder: "" }, "-": { validator: function (e, t, n, i, a) { return a.allowMinus && e === a.negationSymbol.back }, cardinality: 1, placeholder: "" }, ":": { validator: function (e, n, i, a, r) { var o = "[" + t.escapeRegex(r.radixPoint) + "]", s = new RegExp(o).test(e); return s && n.validPositions[i] && n.validPositions[i].match.placeholder === r.radixPoint && (s = { caret: i + 1 }), s }, cardinality: 1, placeholder: function (e) { return e.radixPoint } } }, onUnMask: function (e, n, i) { if ("" === n && !0 === i.nullable) return n; var a = e.replace(i.prefix, ""); return a = a.replace(i.suffix, ""), a = a.replace(new RegExp(t.escapeRegex(i.groupSeparator), "g"), ""), "" !== i.placeholder.charAt(0) && (a = a.replace(new RegExp(i.placeholder.charAt(0), "g"), "0")), i.unmaskAsNumber ? ("" !== i.radixPoint && -1 !== a.indexOf(i.radixPoint) && (a = a.replace(t.escapeRegex.call(this, i.radixPoint), ".")), a = a.replace(new RegExp("^" + t.escapeRegex(i.negationSymbol.front)), "-"), a = a.replace(new RegExp(t.escapeRegex(i.negationSymbol.back) + "$"), ""), Number(a)) : a }, isComplete: function (e, n) { var i = e.join(""); if (e.slice().join("") !== i) return !1; var a = i.replace(n.prefix, ""); return a = a.replace(n.suffix, ""), a = a.replace(new RegExp(t.escapeRegex(n.groupSeparator) + "([0-9]{3})", "g"), "$1"), "," === n.radixPoint && (a = a.replace(t.escapeRegex(n.radixPoint), ".")), isFinite(a) }, onBeforeMask: function (e, i) { if (i.isNegative = n, e = e.toString().charAt(e.length - 1) === i.radixPoint ? e.toString().substr(0, e.length - 1) : e.toString(), "" !== i.radixPoint && isFinite(e)) { var a = e.split("."), r = "" !== i.groupSeparator ? parseInt(i.groupSize) : 0; 2 === a.length && (a[0].length > r || a[1].length > r || a[0].length <= r && a[1].length < r) && (e = e.replace(".", i.radixPoint)) } var o = e.match(/,/g), s = e.match(/\./g); if (e = s && o ? s.length > o.length ? (e = e.replace(/\./g, "")).replace(",", i.radixPoint) : o.length > s.length ? (e = e.replace(/,/g, "")).replace(".", i.radixPoint) : e.indexOf(".") < e.indexOf(",") ? e.replace(/\./g, "") : e.replace(/,/g, "") : e.replace(new RegExp(t.escapeRegex(i.groupSeparator), "g"), ""), 0 === i.digits && (-1 !== e.indexOf(".") ? e = e.substring(0, e.indexOf(".")) : -1 !== e.indexOf(",") && (e = e.substring(0, e.indexOf(",")))), "" !== i.radixPoint && isFinite(i.digits) && -1 !== e.indexOf(i.radixPoint)) { var l = e.split(i.radixPoint)[1].match(new RegExp("\\d*"))[0]; if (parseInt(i.digits) < l.toString().length) { var u = Math.pow(10, parseInt(i.digits)); e = e.replace(t.escapeRegex(i.radixPoint), "."), e = (e = Math.round(parseFloat(e) * u) / u).toString().replace(".", i.radixPoint) } } return e }, canClearPosition: function (e, t, n, i, a) { var r = e.validPositions[t], o = r.input !== a.radixPoint || null !== e.validPositions[t].match.fn && !1 === a.decimalProtect || r.input === a.radixPoint && e.validPositions[t + 1] && null === e.validPositions[t + 1].match.fn || isFinite(r.input) || t === n || r.input === a.groupSeparator || r.input === a.negationSymbol.front || r.input === a.negationSymbol.back; return !o || "+" !== r.match.nativeDef && "-" !== r.match.nativeDef || (a.isNegative = !1), o }, onKeyDown: function (n, i, a, r) { var o = e(this); if (n.ctrlKey) switch (n.keyCode) { case t.keyCode.UP: o.val(parseFloat(this.inputmask.unmaskedvalue()) + parseInt(r.step)), o.trigger("setvalue"); break; case t.keyCode.DOWN: o.val(parseFloat(this.inputmask.unmaskedvalue()) - parseInt(r.step)), o.trigger("setvalue") } } }, currency: { prefix: "$ ", groupSeparator: ",", alias: "numeric", placeholder: "0", autoGroup: !0, digits: 2, digitsOptional: !1, clearMaskOnLostFocus: !1 }, decimal: { alias: "numeric" }, integer: { alias: "numeric", digits: 0, radixPoint: "" }, percentage: { alias: "numeric", digits: 2, digitsOptional: !0, radixPoint: ".", placeholder: "0", autoGroup: !1, min: 0, max: 100, suffix: " %", allowMinus: !1 } }), t }) }, function (e, t, n) { "use strict"; var i, a, r; "function" == typeof Symbol && Symbol.iterator; !function (o) { a = [n(0), n(1)], void 0 !== (r = "function" == typeof (i = o) ? i.apply(t, a) : i) && (e.exports = r) }(function (e, t) { function n(e, t) { var n = (e.mask || e).replace(/#/g, "0").replace(/\)/, "0").replace(/[+()#-]/g, ""), i = (t.mask || t).replace(/#/g, "0").replace(/\)/, "0").replace(/[+()#-]/g, ""); return n.localeCompare(i) } var i = t.prototype.analyseMask; return t.prototype.analyseMask = function (t, n, a) { function r(e, n, i) { n = n || "", i = i || s, "" !== n && (i[n] = {}); for (var a = "", o = i[n] || i, l = e.length - 1; l >= 0; l--)o[a = (t = e[l].mask || e[l]).substr(0, 1)] = o[a] || [], o[a].unshift(t.substr(1)), e.splice(l, 1); for (var u in o) o[u].length > 500 && r(o[u].slice(), u, o) } function o(t) { var n = "", i = []; for (var r in t) e.isArray(t[r]) ? 1 === t[r].length ? i.push(r + t[r]) : i.push(r + a.groupmarker[0] + t[r].join(a.groupmarker[1] + a.alternatormarker + a.groupmarker[0]) + a.groupmarker[1]) : i.push(r + o(t[r])); return 1 === i.length ? n += i[0] : n += a.groupmarker[0] + i.join(a.groupmarker[1] + a.alternatormarker + a.groupmarker[0]) + a.groupmarker[1], n } var s = {}; return a.phoneCodes && (a.phoneCodes && a.phoneCodes.length > 1e3 && (r((t = t.substr(1, t.length - 2)).split(a.groupmarker[1] + a.alternatormarker + a.groupmarker[0])), t = o(s)), t = t.replace(/9/g, "\\9")), i.call(this, t, n, a) }, t.extendAliases({ abstractphone: { groupmarker: ["<", ">"], countrycode: "", phoneCodes: [], keepStatic: "auto", mask: function (e) { return e.definitions = { "#": t.prototype.definitions[9] }, e.phoneCodes.sort(n) }, onBeforeMask: function (e, t) { var n = e.replace(/^0{1,2}/, "").replace(/[\s]/g, ""); return (n.indexOf(t.countrycode) > 1 || -1 === n.indexOf(t.countrycode)) && (n = "+" + t.countrycode + n), n }, onUnMask: function (e, t, n) { return e.replace(/[()#-]/g, "") }, inputmode: "tel" } }), t }) }, function (e, t, n) { "use strict"; var i, a, r, o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e }; !function (o) { a = [n(2), n(1)], void 0 !== (r = "function" == typeof (i = o) ? i.apply(t, a) : i) && (e.exports = r) }(function (e, t) { return void 0 === e.fn.inputmask && (e.fn.inputmask = function (n, i) { var a, r = this[0]; if (void 0 === i && (i = {}), "string" == typeof n) switch (n) { case "unmaskedvalue": return r && r.inputmask ? r.inputmask.unmaskedvalue() : e(r).val(); case "remove": return this.each(function () { this.inputmask && this.inputmask.remove() }); case "getemptymask": return r && r.inputmask ? r.inputmask.getemptymask() : ""; case "hasMaskedValue": return !(!r || !r.inputmask) && r.inputmask.hasMaskedValue(); case "isComplete": return !r || !r.inputmask || r.inputmask.isComplete(); case "getmetadata": return r && r.inputmask ? r.inputmask.getmetadata() : void 0; case "setvalue": e(r).val(i), r && void 0 === r.inputmask && e(r).triggerHandler("setvalue"); break; case "option": if ("string" != typeof i) return this.each(function () { if (void 0 !== this.inputmask) return this.inputmask.option(i) }); if (r && void 0 !== r.inputmask) return r.inputmask.option(i); break; default: return i.alias = n, a = new t(i), this.each(function () { a.mask(this) }) } else { if ("object" == (void 0 === n ? "undefined" : o(n))) return a = new t(n), void 0 === n.mask && void 0 === n.alias ? this.each(function () { if (void 0 !== this.inputmask) return this.inputmask.option(n); a.mask(this) }) : this.each(function () { a.mask(this) }); if (void 0 === n) return this.each(function () { (a = new t(i)).mask(this) }) } }), e.fn.inputmask }) }]); $(function () {
    var dev_mode = app_config.dev_mode;
    var device_type = isMobile();
    var allowedDevice = input_mask_data.masking_device;
    if (dev_mode == "Y") {
        console.log(input_mask_data);
    }
    if (input_mask_data.enable_masking == true && allowedDevice.indexOf(device_type) != -1) {
        var phoneField = $(cb.formElementSelectors.phone);
        var creditCardField = $(cb.formElementSelectors.cardNumber);
        //Phone number masking
        if ($(phoneField).length && input_mask_data.phone_number_masking) {
            if ($(phoneField).attr('data-min-length') > input_mask_data.phone_number_masking.length) {
                $(phoneField).attr('data-min-length', input_mask_data.phone_number_masking.length);
            }
            if ($(phoneField).attr('data-max-length') != input_mask_data.phone_number_masking.length) {
                $(phoneField).attr('data-max-length', input_mask_data.phone_number_masking.length)
            }
            $(phoneField).mask(input_mask_data.phone_number_masking);
        }
        //cc masking

        var iosVer = checkVersion();
        var bindEvent = 'keyup input';
        if (iosVer == 9) {
            bindEvent = 'keydown input';
        }
        if (input_mask_data.credit_card_place_holder_active || input_mask_data.enable_credit_Card_masking) {
            if ($(creditCardField).length && input_mask_data.credit_card_masking !== 'no_masking') {

                $(creditCardField).off('keyup').off('keypress').off('change');
                $(creditCardField).attr('maxlength', 19);
                var maskChar = input_mask_data.credit_card_masking === 'space_masking' ? ' ' : '-';
                if (input_mask_data.credit_card_place_holder_active) {
                    var placeHolderType = input_mask_data.credit_card_masking_placeholder;
                    if (typeof placeHolderType == 'undefined') {
                        placeHolderType = 'blank';
                    }

                    var data = {
                        mask: '9999-9999-9999-9999',
                        clearMaskOnLostFocus: false,
                    };


                    if (placeHolderType == 'cross') {
                        data = {
                            mask: '9999-9999-9999-9999',
                            clearMaskOnLostFocus: false,
                            placeholder: "xxxx-xxxx-xxxx-xxxx"
                        };
                    }

                    $('[name=creditCardType]').change(function (e) {
                        $('[name=creditCardNumber]').removeAttr('maxlength');
                    });

                    $(creditCardField).inputmask(data);

                    $(creditCardField).on(bindEvent, function () {
                        guessCardType();
                    });
                }



                if (!input_mask_data.credit_card_place_holder_active && input_mask_data.enable_credit_Card_masking) {

                    $(creditCardField).on(bindEvent, function () {
                        performCardNumberMasking(data);
                    });
                }
                //             $(creditCardField).on('keyup blur',function (){
                //                 performCardNumberMasking(data);
                //             });
            }
        }
    }

    function performCardNumberMasking(maskData) {
        guessCardType();
        var cardType = $('[name=creditCardType]').val();
        var maxLength = validator.getCardNumberMaxLength(cardType);
        var noOfParts = Math.ceil(maxLength / 4);
        var setLength = maxLength + noOfParts - 1;
        $(creditCardField).attr('maxlength', setLength);
        var maskText = '';
        for (var ii = 0; ii < maxLength; ii++) {
            if (ii !== 0 && ii % 4 === 0) {
                maskText += maskChar;
            }
            maskText += input_mask_data.credit_card_place_holder_active ? '9' : '0';
        }
        if ((cardType) && cardType == "amex" && input_mask_data.enable_standardamex) {

            if (typeof maskData !== "undefined" && maskData.hasOwnProperty('mask'))
                maskData['mask'] = '9999' + maskChar + '999999' + maskChar + '99999';
            if (typeof maskData !== "undefined" && maskData.hasOwnProperty('placeholder') && maskData['placeholder'] == 'cross') {
                maskData['placeholder'] = "xxxx-xxxxxx-xxxxx";
            }
            maskText = (input_mask_data.credit_card_place_holder_active) ? '9999' + maskChar + '999999' + maskChar + '99999' : '0000' + maskChar + '000000' + maskChar + '00000';
        }
        if (input_mask_data.credit_card_place_holder_active) {
            $(creditCardField).inputmask(maskData);
        } else {
            $(creditCardField).mask(maskText);
        }
    }

    function isMobile() {
        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
            return 'mobile';
        } else {
            return 'desktop';
        }
    }

    function guessCardType() {
        var cardNumberElement = $(cb.formElementSelectors.cardNumber);
        var cardTypeElement = $(cb.formElementSelectors.cardType);
        var unmaskedCardNumber = cardNumberElement.val().trim().replace(/[\s-]/g, '');
        var cardType = validator.getCardType(unmaskedCardNumber);
        if (cardType === false) {
            if (typeof app_config.allowed_tc !== 'undefined' && app_config.allowed_tc.length) {
                var matchType = false;

                var allowed_tc = cb.decryptAllowedTestCard(app_config.allowed_tc);

                $(allowed_tc).each(function (k, v) {
                    var testCardParts = v.toString().split('|');
                    if (unmaskedCardNumber === testCardParts[0]) {
                        cardType = testCardParts[1];
                        return true;
                    }
                });
            }
        }
        if (cardTypeElement.find('option[value=' + cardType + ']').length) {
            cardTypeElement.val(cardType).trigger('change');
            cardTypeElement.removeClass(cb.errorClass).addClass(cb.validClass);
        } else {
            if (cardTypeElement.data('deselect') != false) {
                cardTypeElement.val('').trigger('change');
                cardTypeElement.addClass(cb.errorClass).removeClass(cb.validClass);
            }
        }
    }

    function checkVersion() {
        var agent = window.navigator.userAgent,
            start = agent.indexOf('OS');
        if ((agent.indexOf('iPhone') > -1 || agent.indexOf('iPad') > -1) && start > -1) {
            return window.Number(agent.substr(start + 3, 3).replace('_', '.'));
        }
    }
}); $(function () {
    if (typeof cbUtilConfig !== 'object') {
        return;
    }
    if (cbUtilConfig.disable_non_english_char_input) {
        $(document).on('keyup', 'input', function () {
            $(this).val($(this).val().replace(/[^\x00-\x7F]/g, ''));
        });
        $(document).on('change', 'input', function () {
            $(this).val($(this).val().replace(/[^\x00-\x7F]/g, ''));
        });
    }
});